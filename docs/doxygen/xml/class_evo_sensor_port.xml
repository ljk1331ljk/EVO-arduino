<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_evo_sensor_port" kind="class" language="C++" prot="public">
    <compoundname>EvoSensorPort</compoundname>
    <includes refid="_evo_sensor_port_8h" local="no">EvoSensorPort.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_evo_sensor_port_1a50b0d917fa93cd1c90bc491f1d706917" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EvoSensorPort::_portInitialised</definition>
        <argsstring></argsstring>
        <name>_portInitialised</name>
        <qualifiedname>EvoSensorPort::_portInitialised</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="70" column="10" bodyfile="src/helper/EvoSensorPort.h" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_evo_sensor_port_1a3b827893cdcdd4c22f255342f271c233" prot="private" static="no" mutable="no">
        <type>SoftwareSerial</type>
        <definition>SoftwareSerial EvoSensorPort::_sw</definition>
        <argsstring></argsstring>
        <name>_sw</name>
        <qualifiedname>EvoSensorPort::_sw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="117" column="20" bodyfile="src/helper/EvoSensorPort.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1aa62c0b141c0eb15da0980bdb62354087" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t EvoSensorPort::_txPin</definition>
        <argsstring></argsstring>
        <name>_txPin</name>
        <qualifiedname>EvoSensorPort::_txPin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="118" column="13" bodyfile="src/helper/EvoSensorPort.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1acc5756de9513462bd1ee53061b5c8894" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t EvoSensorPort::_rxPin</definition>
        <argsstring></argsstring>
        <name>_rxPin</name>
        <qualifiedname>EvoSensorPort::_rxPin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="118" column="20" bodyfile="src/helper/EvoSensorPort.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1ab57d88daea03a5611eb326f7c890ebca" prot="private" static="no" mutable="no">
        <type>SensorPort</type>
        <definition>SensorPort EvoSensorPort::_port</definition>
        <argsstring></argsstring>
        <name>_port</name>
        <qualifiedname>EvoSensorPort::_port</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="119" column="16" bodyfile="src/helper/EvoSensorPort.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a73d29da09a204305b2f3db2d4c5be1ba" prot="private" static="no" mutable="no">
        <type><ref refid="struct_e_v3_sensor_config" kindref="compound">EV3SensorConfig</ref></type>
        <definition>EV3SensorConfig EvoSensorPort::_config</definition>
        <argsstring></argsstring>
        <name>_config</name>
        <qualifiedname>EvoSensorPort::_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="120" column="21" bodyfile="src/helper/EvoSensorPort.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1af810a89f84f6762ef41de4d8579a1b9d" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(uint8_t, uint8_t *, int length)&gt;</type>
        <definition>std::function&lt;void(uint8_t, uint8_t *, int length)&gt; EvoSensorPort::_onMessage</definition>
        <argsstring></argsstring>
        <name>_onMessage</name>
        <qualifiedname>EvoSensorPort::_onMessage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="122" column="19" bodyfile="src/helper/EvoSensorPort.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a10bd47761f033d3df017ac04294d8525" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(<ref refid="class_evo_sensor_port" kindref="compound">EvoSensorPort</ref> *)&gt;</type>
        <definition>std::function&lt;void(EvoSensorPort *)&gt; EvoSensorPort::_onSuccess</definition>
        <argsstring></argsstring>
        <name>_onSuccess</name>
        <qualifiedname>EvoSensorPort::_onSuccess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback called after sucessful connection with the sensor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="127" column="19" bodyfile="src/helper/EvoSensorPort.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a04bba834923bdf9243c3193abb8e3fdd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoSensorPort::retries</definition>
        <argsstring></argsstring>
        <name>retries</name>
        <qualifiedname>EvoSensorPort::retries</qualifiedname>
        <initializer>= 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of retries left to connect to sensor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="132" column="9" bodyfile="src/helper/EvoSensorPort.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a9256fbedeb71742a05ceebff19fc3a1c" prot="private" static="no" mutable="no">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t EvoSensorPort::_sensorHandle</definition>
        <argsstring></argsstring>
        <name>_sensorHandle</name>
        <qualifiedname>EvoSensorPort::_sensorHandle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="134" column="18" bodyfile="src/helper/EvoSensorPort.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1ae4238a0f5fb6e9b010d2f02af1aaa059" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoSensorPort::timeout_cnt</definition>
        <argsstring></argsstring>
        <name>timeout_cnt</name>
        <qualifiedname>EvoSensorPort::timeout_cnt</qualifiedname>
        <initializer>= TIMEOUT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="141" column="9" bodyfile="src/helper/EvoSensorPort.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1af1b39615c9b0f1273b14086c3c148733" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long EvoSensorPort::lastNACKSended</definition>
        <argsstring></argsstring>
        <name>lastNACKSended</name>
        <qualifiedname>EvoSensorPort::lastNACKSended</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp of the last NACK sended to sensor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="146" column="19" bodyfile="src/helper/EvoSensorPort.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1ae9e5980612d6006382c7aa78ea842537" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t EvoSensorPort::_buffer[BUFFER_SIZE]</definition>
        <argsstring>[BUFFER_SIZE]</argsstring>
        <name>_buffer</name>
        <qualifiedname>EvoSensorPort::_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="152" column="13" bodyfile="src/helper/EvoSensorPort.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a6093ddec5530aa65970f8451bbda6abc" prot="private" static="no" mutable="no">
        <type>SemaphoreHandle_t</type>
        <definition>SemaphoreHandle_t EvoSensorPort::_serialMutex</definition>
        <argsstring></argsstring>
        <name>_serialMutex</name>
        <qualifiedname>EvoSensorPort::_serialMutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="168" column="23" bodyfile="src/helper/EvoSensorPort.h" bodystart="168" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_evo_sensor_port_1ae17e630560ceb3497e753c44676f6231" prot="private" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int EvoSensorPort::TIMEOUT</definition>
        <argsstring></argsstring>
        <name>TIMEOUT</name>
        <qualifiedname>EvoSensorPort::TIMEOUT</qualifiedname>
        <initializer>= 2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time in ms to wait for messages from the sensor before restarting the protocol </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="139" column="31" bodyfile="src/helper/EvoSensorPort.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a4332cb30425d80afee02709acd478c78" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t EvoSensorPort::BUFFER_SIZE</definition>
        <argsstring></argsstring>
        <name>BUFFER_SIZE</name>
        <qualifiedname>EvoSensorPort::BUFFER_SIZE</qualifiedname>
        <initializer>= 1 + 32 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use one single buffer for all communication to avoid heap fragrmentation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="151" column="29" bodyfile="src/helper/EvoSensorPort.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1ac8b8d3af52df9eec18721eec657feca5" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::SYNC</definition>
        <argsstring></argsstring>
        <name>SYNC</name>
        <qualifiedname>EvoSensorPort::SYNC</qualifiedname>
        <initializer>= 0b00000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="154" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a318eded89582b03184f6eb3340131575" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::NACK</definition>
        <argsstring></argsstring>
        <name>NACK</name>
        <qualifiedname>EvoSensorPort::NACK</qualifiedname>
        <initializer>= 0b00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="155" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a1ed2110c4bc7ca4989fc4b7353fa5769" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::ACK</definition>
        <argsstring></argsstring>
        <name>ACK</name>
        <qualifiedname>EvoSensorPort::ACK</qualifiedname>
        <initializer>= 0b00000100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="156" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a1f02f848b8ec13f1ef92c9f0d521f4a6" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::TYPE</definition>
        <argsstring></argsstring>
        <name>TYPE</name>
        <qualifiedname>EvoSensorPort::TYPE</qualifiedname>
        <initializer>= 0b01000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="157" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1add3e3efc7fdf51b9a2f4802591ae35ee" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::MODES</definition>
        <argsstring></argsstring>
        <name>MODES</name>
        <qualifiedname>EvoSensorPort::MODES</qualifiedname>
        <initializer>= 0b01001001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="158" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1ac11135da206fe29132e496fd3f1bdeea" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::SPEED</definition>
        <argsstring></argsstring>
        <name>SPEED</name>
        <qualifiedname>EvoSensorPort::SPEED</qualifiedname>
        <initializer>= 0b01010010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="159" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a93305ab491c57c89784ba8e1c43e0834" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::SELECT</definition>
        <argsstring></argsstring>
        <name>SELECT</name>
        <qualifiedname>EvoSensorPort::SELECT</qualifiedname>
        <initializer>= 0b01000011</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="160" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1ac38db6bcc67cda50ba66b37abec56981" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::TYPE_COLOR_SENSOR</definition>
        <argsstring></argsstring>
        <name>TYPE_COLOR_SENSOR</name>
        <qualifiedname>EvoSensorPort::TYPE_COLOR_SENSOR</qualifiedname>
        <initializer>= 29</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="162" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1a462b2ced8c6a23959720a7af78d76f98" prot="private" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t EvoSensorPort::TYPE_IR_SENSOR</definition>
        <argsstring></argsstring>
        <name>TYPE_IR_SENSOR</name>
        <qualifiedname>EvoSensorPort::TYPE_IR_SENSOR</qualifiedname>
        <initializer>= 33</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="163" column="26" bodyfile="src/helper/EvoSensorPort.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_sensor_port_1aa0902b3f02b81ffbdd536d0d839037f4" prot="private" static="yes" mutable="no">
        <type>const TickType_t</type>
        <definition>const TickType_t EvoSensorPort::TIME_BEFORE_RESTART</definition>
        <argsstring></argsstring>
        <name>TIME_BEFORE_RESTART</name>
        <qualifiedname>EvoSensorPort::TIME_BEFORE_RESTART</qualifiedname>
        <initializer>= 200 / portTICK_PERIOD_MS</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="165" column="29" bodyfile="src/helper/EvoSensorPort.h" bodystart="165" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_evo_sensor_port_1a6b9ddb9261947e756ad462978fb36d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EvoSensorPort::EvoSensorPort</definition>
        <argsstring>(SensorPort port)</argsstring>
        <name>EvoSensorPort</name>
        <qualifiedname>EvoSensorPort::EvoSensorPort</qualifiedname>
        <param>
          <type>SensorPort</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="71" column="5" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="5" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1aa20fb2324e195a805255ffc92cd661ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_e_v3_sensor_config" kindref="compound">EV3SensorConfig</ref> *</type>
        <definition>EV3SensorConfig * EvoSensorPort::getCurrentConfig</definition>
        <argsstring>()</argsstring>
        <name>getCurrentConfig</name>
        <qualifiedname>EvoSensorPort::getCurrentConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the sensor configuration found during the first phase of the EV3 protocol. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="76" column="21" bodyfile="src/helper/EvoSensorPort.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a0010f35ba4d26be6368caa2c8a9cd13a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EvoSensorPort::setMessageHandler</definition>
        <argsstring>(std::function&lt; void(uint8_t, uint8_t *, int length)&gt; onMessage)</argsstring>
        <name>setMessageHandler</name>
        <qualifiedname>EvoSensorPort::setMessageHandler</qualifiedname>
        <param>
          <type>std::function&lt; void(uint8_t, uint8_t *, int length)&gt;</type>
          <declname>onMessage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the message handler </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="84" column="10" bodyfile="src/helper/EvoSensorPort.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1ab410c4121b10b3bc1e89fc478ee8a3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoSensorPort::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>EvoSensorPort::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stops the EV3 Sensor communication and the corresponding task. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="92" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="529" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1ae8de3258c1984db69d663d660adf8734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::selectSensorMode</definition>
        <argsstring>(uint8_t mode)</argsstring>
        <name>selectSensorMode</name>
        <qualifiedname>EvoSensorPort::selectSensorMode</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Selects the working mode of the sensor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="97" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="514" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1aa8e0171eec28c5ca029182084aaec42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_e_v3_sensor_info" kindref="compound">EV3SensorInfo</ref> *</type>
        <definition>EV3SensorInfo * EvoSensorPort::getInfoForMode</definition>
        <argsstring>(uint8_t mode)</argsstring>
        <name>getInfoForMode</name>
        <qualifiedname>EvoSensorPort::getInfoForMode</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility method to get get <ref refid="struct_e_v3_sensor_info" kindref="compound">EV3SensorInfo</ref> for a mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="102" column="19" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="542" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a0e21457737c6dd8c8daa1fec63f63ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float EvoSensorPort::makeFloatFromPayload</definition>
        <argsstring>(uint8_t data[])</argsstring>
        <name>makeFloatFromPayload</name>
        <qualifiedname>EvoSensorPort::makeFloatFromPayload</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a float from a sensor payload </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="107" column="11" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1adbe6c2923d7637c7cda1303813df2463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::begin</definition>
        <argsstring>(int retries=9)</argsstring>
        <name>begin</name>
        <qualifiedname>EvoSensorPort::begin</qualifiedname>
        <param>
          <type>int</type>
          <declname>retries</declname>
          <defval>9</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the EV3 sensor communication protocol. First reads the sensor configuration and calls the onSuccess callback afterwards. Then keeps the connection online by sending the sensor NACK regularly. The method performs all commuincation in its own FreeRTOS task, there it returns immediately. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="114" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="35" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_evo_sensor_port_1a67f70b97023b3e0cd3cdb922e6a76fe0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t EvoSensorPort::calculateChecksum</definition>
        <argsstring>(uint8_t data[], int length)</argsstring>
        <name>calculateChecksum</name>
        <qualifiedname>EvoSensorPort::calculateChecksum</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the checksum </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="173" column="13" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="226" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a58fd3663870711f34b2e115e02d6409e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * EvoSensorPort::makeStringFromPayload</definition>
        <argsstring>(uint8_t data[], int maxlength)</argsstring>
        <name>makeStringFromPayload</name>
        <qualifiedname>EvoSensorPort::makeStringFromPayload</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>maxlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a string from a sensor payload. Since the payload is padded with zeros, the method tries first to determine the true size of the string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="178" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="236" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1ab2ccbfa88a89f1d1045992e193bcff01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoSensorPort::sensorCommThread</definition>
        <argsstring>()</argsstring>
        <name>sensorCommThread</name>
        <qualifiedname>EvoSensorPort::sensorCommThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="180" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="169" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1af5751d40dcc9993d171cab2e24ab6935" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseUnknownMessage</definition>
        <argsstring>(byte *header)</argsstring>
        <name>parseUnknownMessage</name>
        <qualifiedname>EvoSensorPort::parseUnknownMessage</qualifiedname>
        <param>
          <type>byte *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility method for dev purposes to analyze unkown info messages. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="185" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="365" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a2acff8240a8915f863d11581e8adb10a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseInfoMessage</definition>
        <argsstring>(byte message, EV3SensorInfo *info)</argsstring>
        <name>parseInfoMessage</name>
        <qualifiedname>EvoSensorPort::parseInfoMessage</qualifiedname>
        <param>
          <type>byte</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_info" kindref="compound">EV3SensorInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines wheter the next message is a info message. If yes trie parse it and return the mode number. If it is not, return the message byte. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="191" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="331" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a986943b8d48f0b88f11f5df28e61a743" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseModeNameMessage</definition>
        <argsstring>(byte *header, EV3SensorInfo *info)</argsstring>
        <name>parseModeNameMessage</name>
        <qualifiedname>EvoSensorPort::parseModeNameMessage</qualifiedname>
        <param>
          <type>byte *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_info" kindref="compound">EV3SensorInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the first info message (= mode name) for a supported mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="196" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="421" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1ae085d9fb1a3bade005a03d81840439ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseSymbolNameMessage</definition>
        <argsstring>(byte *header, EV3SensorInfo *info)</argsstring>
        <name>parseSymbolNameMessage</name>
        <qualifiedname>EvoSensorPort::parseSymbolNameMessage</qualifiedname>
        <param>
          <type>byte *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_info" kindref="compound">EV3SensorInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the symbol name of the SI unit of a supported mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="201" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="395" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1aff20b731c75aab47a148ec07f4e7b0c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseFormatMessage</definition>
        <argsstring>(byte *header, EV3SensorInfo *info)</argsstring>
        <name>parseFormatMessage</name>
        <qualifiedname>EvoSensorPort::parseFormatMessage</qualifiedname>
        <param>
          <type>byte *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_info" kindref="compound">EV3SensorInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pares the format message containing the format of the data message from sensor -&gt; host. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="206" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="447" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1af8801a7812d714d86b7cdf7ee89f49de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseModeRangeMessage</definition>
        <argsstring>(byte *header, EV3SensorInfo *info)</argsstring>
        <name>parseModeRangeMessage</name>
        <qualifiedname>EvoSensorPort::parseModeRangeMessage</qualifiedname>
        <param>
          <type>byte *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_info" kindref="compound">EV3SensorInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the second info message (= mode raw sensor readings) for a supported mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="211" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="471" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a8516bcaefb2f9a655e6c6f5fdae0f51e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseSpeed</definition>
        <argsstring>(byte header, EV3SensorConfig *config)</argsstring>
        <name>parseSpeed</name>
        <qualifiedname>EvoSensorPort::parseSpeed</qualifiedname>
        <param>
          <type>byte</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_config" kindref="compound">EV3SensorConfig</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the next uart speed from the stream. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="215" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="270" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a2fc7e3d4c4f7a0401e14abfad7d32ad4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseModeCount</definition>
        <argsstring>(byte header, EV3SensorConfig *config)</argsstring>
        <name>parseModeCount</name>
        <qualifiedname>EvoSensorPort::parseModeCount</qualifiedname>
        <param>
          <type>byte</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_config" kindref="compound">EV3SensorConfig</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the mode counts from the stream. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="220" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="288" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a795bc63e9cbba64fd005d45dff8c1a46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoSensorPort::parseType</definition>
        <argsstring>(byte message, EV3SensorConfig *config)</argsstring>
        <name>parseType</name>
        <qualifiedname>EvoSensorPort::parseType</qualifiedname>
        <param>
          <type>byte</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="struct_e_v3_sensor_config" kindref="compound">EV3SensorConfig</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the type of sensor from the stream. If configures, also waits for the unique type byte to come. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="226" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="306" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1ae784df7381ae0f3163df2d34da807758" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>byte</type>
        <definition>byte EvoSensorPort::readNextAvailableByte</definition>
        <argsstring>()</argsstring>
        <name>readNextAvailableByte</name>
        <qualifiedname>EvoSensorPort::readNextAvailableByte</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utlity method the read the next available byte from the connection. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="231" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="255" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a04b150a6bb7daa92e8913e9819b0d814" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoSensorPort::setBaudrate</definition>
        <argsstring>(uint8_t baud)</argsstring>
        <name>setBaudrate</name>
        <qualifiedname>EvoSensorPort::setBaudrate</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>baud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="233" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_sensor_port_1a286085580b770bfeaf027f2e6a16dd7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoSensorPort::initSensor</definition>
        <argsstring>(EvoSensorPort *sensor)</argsstring>
        <name>initSensor</name>
        <qualifiedname>EvoSensorPort::initSensor</qualifiedname>
        <param>
          <type><ref refid="class_evo_sensor_port" kindref="compound">EvoSensorPort</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="235" column="10" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="81" bodyend="167"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_evo_sensor_port_1a62981175cf0a2f0bdaccab2a9442e050" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoSensorPort::sensorThread</definition>
        <argsstring>(void *parameter)</argsstring>
        <name>sensorThread</name>
        <qualifiedname>EvoSensorPort::sensorThread</qualifiedname>
        <param>
          <type>void *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/EvoSensorPort.h" line="234" column="17" bodyfile="src/helper/EvoSensorPort.cpp" bodystart="62" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Sensor port of single EV3 sensor. <simplesect kind="see"><para><ulink url="https://sourceforge.net/p/lejos/wiki/UART%20Sensor%20Protocol/">https://sourceforge.net/p/lejos/wiki/UART%20Sensor%20Protocol/</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="src/helper/EvoSensorPort.h" line="67" column="1" bodyfile="src/helper/EvoSensorPort.h" bodystart="68" bodyend="236"/>
    <listofallmembers>
      <member refid="class_evo_sensor_port_1ae9e5980612d6006382c7aa78ea842537" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_buffer</name></member>
      <member refid="class_evo_sensor_port_1a73d29da09a204305b2f3db2d4c5be1ba" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_config</name></member>
      <member refid="class_evo_sensor_port_1af810a89f84f6762ef41de4d8579a1b9d" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_onMessage</name></member>
      <member refid="class_evo_sensor_port_1a10bd47761f033d3df017ac04294d8525" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_onSuccess</name></member>
      <member refid="class_evo_sensor_port_1ab57d88daea03a5611eb326f7c890ebca" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_port</name></member>
      <member refid="class_evo_sensor_port_1a50b0d917fa93cd1c90bc491f1d706917" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>_portInitialised</name></member>
      <member refid="class_evo_sensor_port_1acc5756de9513462bd1ee53061b5c8894" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_rxPin</name></member>
      <member refid="class_evo_sensor_port_1a9256fbedeb71742a05ceebff19fc3a1c" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_sensorHandle</name></member>
      <member refid="class_evo_sensor_port_1a6093ddec5530aa65970f8451bbda6abc" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_serialMutex</name></member>
      <member refid="class_evo_sensor_port_1a3b827893cdcdd4c22f255342f271c233" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_sw</name></member>
      <member refid="class_evo_sensor_port_1aa62c0b141c0eb15da0980bdb62354087" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>_txPin</name></member>
      <member refid="class_evo_sensor_port_1a1ed2110c4bc7ca4989fc4b7353fa5769" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>ACK</name></member>
      <member refid="class_evo_sensor_port_1adbe6c2923d7637c7cda1303813df2463" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>begin</name></member>
      <member refid="class_evo_sensor_port_1a4332cb30425d80afee02709acd478c78" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>BUFFER_SIZE</name></member>
      <member refid="class_evo_sensor_port_1a67f70b97023b3e0cd3cdb922e6a76fe0" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>calculateChecksum</name></member>
      <member refid="class_evo_sensor_port_1a6b9ddb9261947e756ad462978fb36d25" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>EvoSensorPort</name></member>
      <member refid="class_evo_sensor_port_1aa20fb2324e195a805255ffc92cd661ef" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>getCurrentConfig</name></member>
      <member refid="class_evo_sensor_port_1aa8e0171eec28c5ca029182084aaec42a" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>getInfoForMode</name></member>
      <member refid="class_evo_sensor_port_1a286085580b770bfeaf027f2e6a16dd7c" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>initSensor</name></member>
      <member refid="class_evo_sensor_port_1af1b39615c9b0f1273b14086c3c148733" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>lastNACKSended</name></member>
      <member refid="class_evo_sensor_port_1a0e21457737c6dd8c8daa1fec63f63ea3" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>makeFloatFromPayload</name></member>
      <member refid="class_evo_sensor_port_1a58fd3663870711f34b2e115e02d6409e" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>makeStringFromPayload</name></member>
      <member refid="class_evo_sensor_port_1add3e3efc7fdf51b9a2f4802591ae35ee" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>MODES</name></member>
      <member refid="class_evo_sensor_port_1a318eded89582b03184f6eb3340131575" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>NACK</name></member>
      <member refid="class_evo_sensor_port_1aff20b731c75aab47a148ec07f4e7b0c7" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseFormatMessage</name></member>
      <member refid="class_evo_sensor_port_1a2acff8240a8915f863d11581e8adb10a" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseInfoMessage</name></member>
      <member refid="class_evo_sensor_port_1a2fc7e3d4c4f7a0401e14abfad7d32ad4" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseModeCount</name></member>
      <member refid="class_evo_sensor_port_1a986943b8d48f0b88f11f5df28e61a743" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseModeNameMessage</name></member>
      <member refid="class_evo_sensor_port_1af8801a7812d714d86b7cdf7ee89f49de" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseModeRangeMessage</name></member>
      <member refid="class_evo_sensor_port_1a8516bcaefb2f9a655e6c6f5fdae0f51e" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseSpeed</name></member>
      <member refid="class_evo_sensor_port_1ae085d9fb1a3bade005a03d81840439ed" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseSymbolNameMessage</name></member>
      <member refid="class_evo_sensor_port_1a795bc63e9cbba64fd005d45dff8c1a46" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseType</name></member>
      <member refid="class_evo_sensor_port_1af5751d40dcc9993d171cab2e24ab6935" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>parseUnknownMessage</name></member>
      <member refid="class_evo_sensor_port_1ae784df7381ae0f3163df2d34da807758" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>readNextAvailableByte</name></member>
      <member refid="class_evo_sensor_port_1a04bba834923bdf9243c3193abb8e3fdd" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>retries</name></member>
      <member refid="class_evo_sensor_port_1a93305ab491c57c89784ba8e1c43e0834" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>SELECT</name></member>
      <member refid="class_evo_sensor_port_1ae8de3258c1984db69d663d660adf8734" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>selectSensorMode</name></member>
      <member refid="class_evo_sensor_port_1ab2ccbfa88a89f1d1045992e193bcff01" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>sensorCommThread</name></member>
      <member refid="class_evo_sensor_port_1a62981175cf0a2f0bdaccab2a9442e050" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>sensorThread</name></member>
      <member refid="class_evo_sensor_port_1a04b150a6bb7daa92e8913e9819b0d814" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>setBaudrate</name></member>
      <member refid="class_evo_sensor_port_1a0010f35ba4d26be6368caa2c8a9cd13a" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>setMessageHandler</name></member>
      <member refid="class_evo_sensor_port_1ac11135da206fe29132e496fd3f1bdeea" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>SPEED</name></member>
      <member refid="class_evo_sensor_port_1ab410c4121b10b3bc1e89fc478ee8a3b4" prot="public" virt="non-virtual"><scope>EvoSensorPort</scope><name>stop</name></member>
      <member refid="class_evo_sensor_port_1ac8b8d3af52df9eec18721eec657feca5" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>SYNC</name></member>
      <member refid="class_evo_sensor_port_1aa0902b3f02b81ffbdd536d0d839037f4" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>TIME_BEFORE_RESTART</name></member>
      <member refid="class_evo_sensor_port_1ae17e630560ceb3497e753c44676f6231" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>TIMEOUT</name></member>
      <member refid="class_evo_sensor_port_1ae4238a0f5fb6e9b010d2f02af1aaa059" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>timeout_cnt</name></member>
      <member refid="class_evo_sensor_port_1a1f02f848b8ec13f1ef92c9f0d521f4a6" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>TYPE</name></member>
      <member refid="class_evo_sensor_port_1ac38db6bcc67cda50ba66b37abec56981" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>TYPE_COLOR_SENSOR</name></member>
      <member refid="class_evo_sensor_port_1a462b2ced8c6a23959720a7af78d76f98" prot="private" virt="non-virtual"><scope>EvoSensorPort</scope><name>TYPE_IR_SENSOR</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
