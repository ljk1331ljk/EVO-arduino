<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="u8log_8c" kind="file" language="C++">
    <compoundname>u8log.c</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="u8x8_8h" local="yes">u8x8.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/helper/U8g2/clib/u8log.c</label>
        <link refid="u8log_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>u8x8.h</label>
        <link refid="u8x8_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="u8log_8c_1ac70a6dda1fd00e01810e88658ffe29cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8log_clear_screen</definition>
        <argsstring>(u8log_t *u8log)</argsstring>
        <name>u8log_clear_screen</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="53" column="13" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="53" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a4ad2931db5a940956e15749878661a44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8log_scroll_up</definition>
        <argsstring>(u8log_t *u8log)</argsstring>
        <name>u8log_scroll_up</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="68" column="13" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="68" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a4fcb23dec301ce827c136d4f6cc2afb0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8log_cursor_on_screen</definition>
        <argsstring>(u8log_t *u8log)</argsstring>
        <name>u8log_cursor_on_screen</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="96" column="13" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="96" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1adee5065b7306fb6b5e330eed74b7f6b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8log_write_to_screen</definition>
        <argsstring>(u8log_t *u8log, uint8_t c)</argsstring>
        <name>u8log_write_to_screen</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="114" column="13" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a01652f9cf7f4c091f840c8b8c1691fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_write_char</definition>
        <argsstring>(u8log_t *u8log, uint8_t c)</argsstring>
        <name>u8log_write_char</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="138" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="138" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a2bb5a83d3ad56f6d585e3d4efd6f0361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_Init</definition>
        <argsstring>(u8log_t *u8log, uint8_t width, uint8_t height, uint8_t *buf)</argsstring>
        <name>u8log_Init</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="172" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a33b851e546a8e1050b055081d42df8d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_SetCallback</definition>
        <argsstring>(u8log_t *u8log, u8log_cb cb, void *aux_data)</argsstring>
        <name>u8log_SetCallback</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>u8log_cb</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>aux_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="181" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a5b14eddc1394b1097624c703889da1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_SetRedrawMode</definition>
        <argsstring>(u8log_t *u8log, uint8_t is_redraw_line_for_each_char)</argsstring>
        <name>u8log_SetRedrawMode</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_redraw_line_for_each_char</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="187" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a9088c905dbffd203ab21451c4c8e8aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_SetLineHeightOffset</definition>
        <argsstring>(u8log_t *u8log, int8_t line_height_offset)</argsstring>
        <name>u8log_SetLineHeightOffset</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>line_height_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="193" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a1d66e59888e6605b5e64d78c1923c2fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_WriteChar</definition>
        <argsstring>(u8log_t *u8log, uint8_t c)</argsstring>
        <name>u8log_WriteChar</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="200" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="200" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a911750d3039e0af9b7f183d3581ce13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_WriteString</definition>
        <argsstring>(u8log_t *u8log, const char *s)</argsstring>
        <name>u8log_WriteString</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="214" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a968d875d81831d4cb1a784b3f07fa6d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8log_WriteHexHalfByte</definition>
        <argsstring>(u8log_t *u8log, uint8_t b) U8X8_NOINLINE</argsstring>
        <name>u8log_WriteHexHalfByte</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="224" column="13" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="224" bodyend="231" declfile="src/helper/U8g2/clib/u8log.c" declline="223" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1af0c3524f9b12e708680fe77b9d9607e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_WriteHex8</definition>
        <argsstring>(u8log_t *u8log, uint8_t b)</argsstring>
        <name>u8log_WriteHex8</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="233" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="233" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a984ad0bec4eb978ef2030011a71f9dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_WriteHex16</definition>
        <argsstring>(u8log_t *u8log, uint16_t v)</argsstring>
        <name>u8log_WriteHex16</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="239" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1ad55eb743d062b99c892ba10c866d3339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_WriteHex32</definition>
        <argsstring>(u8log_t *u8log, uint32_t v)</argsstring>
        <name>u8log_WriteHex32</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="245" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a28051d16ffd6e5e8ed2b8b586f188518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_WriteDec8</definition>
        <argsstring>(u8log_t *u8log, uint8_t v, uint8_t d)</argsstring>
        <name>u8log_WriteDec8</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="252" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="u8log_8c_1a1d7ce2747fa47af2ef9521e5af126a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8log_WriteDec16</definition>
        <argsstring>(u8log_t *u8log, uint16_t v, uint8_t d)</argsstring>
        <name>u8log_WriteDec16</name>
        <param>
          <type><ref refid="structu8log__struct" kindref="compound">u8log_t</ref> *</type>
          <declname>u8log</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8log.c" line="258" column="6" bodyfile="src/helper/U8g2/clib/u8log.c" bodystart="258" bodyend="261"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>u8log.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>Universal<sp/>8bit<sp/>Graphics<sp/>Library<sp/>(https://github.com/olikraus/u8g2/)</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2018,<sp/>olikraus@gmail.com</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.<sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;u8x8.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="43"><highlight class="comment">static<sp/>uint8_t<sp/>u8log_is_on_screen(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>x,<sp/>uint8_t<sp/>y)</highlight></codeline>
<codeline lineno="44"><highlight class="comment">{</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/>if<sp/>(<sp/>x<sp/>&gt;=<sp/>u8log-&gt;width<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>if<sp/>(<sp/>y<sp/>&gt;=<sp/>u8log-&gt;height<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>return<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="comment">}</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_clear_screen(u8log_t<sp/>*u8log)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*dest<sp/>=<sp/>u8log-&gt;screen_buffer;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cnt<sp/>=<sp/>u8log-&gt;height;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>cnt<sp/>*=<sp/>u8log-&gt;width;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>cnt<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>scroll<sp/>the<sp/>content<sp/>of<sp/>the<sp/>complete<sp/>buffer,<sp/>set<sp/>redraw_line<sp/>to<sp/>255<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_scroll_up(u8log_t<sp/>*u8log)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*dest<sp/>=<sp/>u8log-&gt;screen_buffer;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*src<sp/>=<sp/>dest+u8log-&gt;width;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cnt<sp/>=<sp/>u8log-&gt;height;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>cnt<sp/>*=<sp/>u8log-&gt;width;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/>*src++;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>cnt<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>cnt<sp/>=<sp/>u8log-&gt;width;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(cnt<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8log-&gt;is_redraw_line_for_each_char<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_all<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_all_required_for_next_nl<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/>Place<sp/>the<sp/>cursor<sp/>on<sp/>the<sp/>screen.<sp/>This<sp/>will<sp/>also<sp/>scroll,<sp/>if<sp/>required<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_cursor_on_screen(u8log_t<sp/>*u8log)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;u8log_cursor_on_screen,<sp/>cursor_y=%d\n&quot;,<sp/>u8log-&gt;cursor_y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8log-&gt;cursor_x<sp/>&gt;=<sp/>u8log-&gt;width<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;cursor_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;cursor_y++;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>u8log-&gt;cursor_y<sp/>&gt;=<sp/>u8log-&gt;height<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log_scroll_up(u8log);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;cursor_y--;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>Write<sp/>a<sp/>printable,<sp/>single<sp/>char<sp/>on<sp/>the<sp/>screen,<sp/>do<sp/>any<sp/>kind<sp/>of<sp/>scrolling</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_write_to_screen(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>c)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>u8log_cursor_on_screen(u8log);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>u8log-&gt;screen_buffer[u8log-&gt;cursor_y<sp/>*<sp/>u8log-&gt;width<sp/>+<sp/>u8log-&gt;cursor_x]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>u8log-&gt;cursor_x++;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8log-&gt;is_redraw_line_for_each_char<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_line<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;redraw_line<sp/>=<sp/>u8log-&gt;cursor_y;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>Handle<sp/>control<sp/>codes<sp/>or<sp/>write<sp/>the<sp/>char<sp/>to<sp/>the<sp/>screen.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/>Supported<sp/>control<sp/>codes<sp/>are:</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>\n<sp/><sp/><sp/><sp/><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/><sp/>Goto<sp/>first<sp/>position<sp/>of<sp/>the<sp/>next<sp/>line.<sp/>Line<sp/>is<sp/>marked<sp/>for<sp/>redraw.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>\r<sp/><sp/><sp/><sp/><sp/><sp/>13<sp/><sp/><sp/><sp/><sp/><sp/>Goto<sp/>first<sp/>position<sp/>in<sp/>the<sp/>same<sp/>line.<sp/>Line<sp/>is<sp/>marked<sp/>for<sp/>redraw.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/>\t<sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Jump<sp/>to<sp/>the<sp/>next<sp/>tab<sp/>position</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>\f<sp/><sp/><sp/><sp/><sp/><sp/>12<sp/><sp/><sp/><sp/><sp/><sp/>Clear<sp/>the<sp/>screen<sp/>and<sp/>mark<sp/>redraw<sp/>for<sp/>whole<sp/>screen</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>any<sp/>other<sp/>char<sp/><sp/>Write<sp/>char<sp/>to<sp/>screen.<sp/>Line<sp/>redraw<sp/>mark<sp/>depends<sp/>on<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_redraw_line_for_each_char<sp/>flag.</highlight></codeline>
<codeline lineno="137"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_write_char(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>c)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">//<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_line<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;redraw_line<sp/>=<sp/>u8log-&gt;cursor_y;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8log-&gt;is_redraw_all_required_for_next_nl<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_all<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_all_required_for_next_nl<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;cursor_y++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;cursor_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log_cursor_on_screen(u8log);<sp/><sp/></highlight><highlight class="comment">//<sp/>31<sp/>Aug<sp/>2024<sp/>https://github.com/olikraus/u8g2/issues/2319</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">//<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_line<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;redraw_line<sp/>=<sp/>u8log-&gt;cursor_y;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;cursor_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">//<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;cursor_x<sp/>=<sp/>(u8log-&gt;cursor_x<sp/>+<sp/>8)<sp/>&amp;<sp/>0xf8;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">//<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log_clear_screen(u8log);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_all<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;cursor_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;cursor_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log_write_to_screen(u8log,<sp/>c);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_Init(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>width,<sp/>uint8_t<sp/>height,<sp/>uint8_t<sp/>*buf)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>memset(u8log,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8log_t));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>u8log-&gt;width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>u8log-&gt;height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>u8log-&gt;screen_buffer<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>u8log_clear_screen(u8log);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_SetCallback(u8log_t<sp/>*u8log,<sp/>u8log_cb<sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*aux_data)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>u8log-&gt;cb<sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>u8log-&gt;aux_data<sp/>=<sp/>aux_data;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_SetRedrawMode(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>is_redraw_line_for_each_char)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>u8log-&gt;is_redraw_line_for_each_char<sp/>=<sp/>is_redraw_line_for_each_char;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>offset<sp/>can<sp/>be<sp/>negative<sp/>or<sp/>positive,<sp/>it<sp/>is<sp/>0<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_SetLineHeightOffset(u8log_t<sp/>*u8log,<sp/>int8_t<sp/>line_height_offset)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>u8log-&gt;line_height_offset<sp/>=<sp/>line_height_offset;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteChar(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>c)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>u8log_write_char(u8log,<sp/>c);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8log-&gt;is_redraw_line<sp/>||<sp/>u8log-&gt;is_redraw_all<sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8log-&gt;cb<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8log-&gt;cb(u8log);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log-&gt;is_redraw_all<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteString(u8log_t<sp/>*u8log,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*s<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log_WriteChar(u8log,<sp/>*s);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteHexHalfByte(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>b)<sp/>U8X8_NOINLINE;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteHexHalfByte(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>b)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>b<sp/>&amp;=<sp/>0x0f;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>&lt;<sp/>10<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log_WriteChar(u8log,<sp/>b+</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>u8log_WriteChar(u8log,<sp/>b+</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">-10);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteHex8(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>b)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>u8log_WriteHexHalfByte(u8log,<sp/>b<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>u8log_WriteHexHalfByte(u8log,<sp/>b);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteHex16(u8log_t<sp/>*u8log,<sp/>uint16_t<sp/>v)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>u8log_WriteHex8(u8log,<sp/>v&gt;&gt;8);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>u8log_WriteHex8(u8log,<sp/>v);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteHex32(u8log_t<sp/>*u8log,<sp/>uint32_t<sp/>v)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>u8log_WriteHex16(u8log,<sp/>v&gt;&gt;16);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>u8log_WriteHex16(u8log,<sp/>v);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>v<sp/>=<sp/>value,<sp/>d<sp/>=<sp/>number<sp/>of<sp/>digits<sp/>(1..3)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteDec8(u8log_t<sp/>*u8log,<sp/>uint8_t<sp/>v,<sp/>uint8_t<sp/>d)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>u8log_WriteString(u8log,<sp/>u8x8_u8toa(v,<sp/>d));</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>v<sp/>=<sp/>value,<sp/>d<sp/>=<sp/>number<sp/>of<sp/>digits<sp/>(1..5)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8log_WriteDec16(u8log_t<sp/>*u8log,<sp/>uint16_t<sp/>v,<sp/>uint8_t<sp/>d)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>u8log_WriteString(u8log,<sp/>u8x8_u16toa(v,<sp/>d));</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/helper/U8g2/clib/u8log.c"/>
  </compounddef>
</doxygen>
