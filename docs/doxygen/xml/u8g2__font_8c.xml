<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="u8g2__font_8c" kind="file" language="C++">
    <compoundname>u8g2_font.c</compoundname>
    <includes refid="u8g2_8h" local="yes">u8g2.h</includes>
    <incdepgraph>
      <node id="2">
        <label>u8g2.h</label>
        <link refid="u8g2_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/helper/U8g2/clib/u8g2_font.c</label>
        <link refid="u8g2__font_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>u8x8.h</label>
        <link refid="u8x8_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="u8g2__font_8c_1ad23531c0ba02c5d8bd9290dd642953f1" prot="public" static="no">
        <name>U8G2_FONT_DATA_STRUCT_SIZE</name>
        <initializer>23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="40" column="9" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="u8g2__font_8c_1a4001d916951eb61562aaa42867224771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_font_GetStrSize</definition>
        <argsstring>(const void *font, const char *s, u8g2_uint_t *width, u8g2_uint_t *height)</argsstring>
        <name>u8g2_font_GetStrSize</name>
        <param>
          <type>const void *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="94" column="6" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1adc5ea1c212b1076d3b56b16540f6057b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_font_GetStrSizeP</definition>
        <argsstring>(const void *font, const char *s, u8g2_uint_t *width, u8g2_uint_t *height)</argsstring>
        <name>u8g2_font_GetStrSizeP</name>
        <param>
          <type>const void *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="95" column="6" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="95" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a1669edff559b0c983067005ad4805289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_font_AdjustXYToDraw</definition>
        <argsstring>(const void *font, const char *s, u8g2_uint_t *x, u8g2_uint_t *y)</argsstring>
        <name>u8g2_font_AdjustXYToDraw</name>
        <param>
          <type>const void *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="98" column="6" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ad83c884def9e0352f5ab6c4bff5be9e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_font_AdjustXYToDrawP</definition>
        <argsstring>(const void *font, const char *s, u8g2_uint_t *x, u8g2_uint_t *y)</argsstring>
        <name>u8g2_font_AdjustXYToDrawP</name>
        <param>
          <type>const void *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="99" column="6" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a9071d928302766f4e66471491e15f8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_font_GetStrMinBox</definition>
        <argsstring>(u8g2_t *u8g2, const void *font, const char *s, u8g2_uint_t *x, u8g2_uint_t *y, u8g2_uint_t *width, u8g2_uint_t *height)</argsstring>
        <name>u8g2_font_GetStrMinBox</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="102" column="6" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a57418beb38fdd33d42a074d622d933d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t u8g2_font_get_byte</definition>
        <argsstring>(const uint8_t *font, uint8_t offset)</argsstring>
        <name>u8g2_font_get_byte</name>
        <param>
          <type>const uint8_t *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="111" column="16" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a28207459010c3778b06d631db403d998" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t u8g2_font_get_word</definition>
        <argsstring>(const uint8_t *font, uint8_t offset) U8G2_NOINLINE</argsstring>
        <name>u8g2_font_get_word</name>
        <param>
          <type>const uint8_t *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="118" column="17" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="118" bodyend="127" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="117" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1aaa576af7ac2315a130d34189663df112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_read_font_info</definition>
        <argsstring>(u8g2_font_info_t *font_info, const uint8_t *font)</argsstring>
        <name>u8g2_read_font_info</name>
        <param>
          <type><ref refid="struct__u8g2__font__info__t" kindref="compound">u8g2_font_info_t</ref> *</type>
          <declname>font_info</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="131" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="131" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a4d0174fff405acf942aa4d0daa5e99b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t u8g2_GetFontSize</definition>
        <argsstring>(const uint8_t *font_arg)</argsstring>
        <name>u8g2_GetFontSize</name>
        <param>
          <type>const uint8_t *</type>
          <declname>font_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="170" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="170" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a5e5271743b9e94898b31677b18ae4ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t u8g2_GetFontBBXWidth</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_GetFontBBXWidth</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="205" column="9" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ab1f71405ed9089ae71c1e79ccfd2606c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t u8g2_GetFontBBXHeight</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_GetFontBBXHeight</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="210" column="9" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a975ddb2f692b2c79e8a618977902107f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_GetFontBBXOffX</definition>
        <argsstring>(u8g2_t *u8g2) U8G2_NOINLINE</argsstring>
        <name>u8g2_GetFontBBXOffX</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="216" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="216" bodyend="219" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="215" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a504d11a7b871edac59f124b726b88af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_GetFontBBXOffY</definition>
        <argsstring>(u8g2_t *u8g2) U8G2_NOINLINE</argsstring>
        <name>u8g2_GetFontBBXOffY</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="222" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="222" bodyend="225" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="221" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ad8daef9d027c7bbebf7e04f3092e4faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t u8g2_GetFontCapitalAHeight</definition>
        <argsstring>(u8g2_t *u8g2) U8G2_NOINLINE</argsstring>
        <name>u8g2_GetFontCapitalAHeight</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="228" column="9" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="228" bodyend="231" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="227" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1aee63c4e301593a8e54fa96c1a9b657b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t u8g2_font_decode_get_unsigned_bits</definition>
        <argsstring>(u8g2_font_decode_t *f, uint8_t cnt)</argsstring>
        <name>u8g2_font_decode_get_unsigned_bits</name>
        <param>
          <type><ref refid="struct__u8g2__font__decode__t" kindref="compound">u8g2_font_decode_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="237" column="9" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="237" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1acf8d04e145c9baf43eabdd62bb92cdee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_font_decode_get_signed_bits</definition>
        <argsstring>(u8g2_font_decode_t *f, uint8_t cnt)</argsstring>
        <name>u8g2_font_decode_get_signed_bits</name>
        <param>
          <type><ref refid="struct__u8g2__font__decode__t" kindref="compound">u8g2_font_decode_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="282" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="282" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1abf2d2fb54e1b1bc0a4120d45d792e3a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_add_vector_y</definition>
        <argsstring>(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)</argsstring>
        <name>u8g2_add_vector_y</name>
        <param>
          <type>u8g2_uint_t</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="296" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="296" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a4767328637403157b6f1a7e8b45d10af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_add_vector_x</definition>
        <argsstring>(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)</argsstring>
        <name>u8g2_add_vector_x</name>
        <param>
          <type>u8g2_uint_t</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="316" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="316" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1acab31c34ccefbd650a13fe86d1d6479b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_font_decode_len</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t len, uint8_t is_foreground)</argsstring>
        <name>u8g2_font_decode_len</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_foreground</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="387" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="387" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a4e7f07a3a1ecf365ca05bcad657e6ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_font_2x_decode_len</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t len, uint8_t is_foreground)</argsstring>
        <name>u8g2_font_2x_decode_len</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_foreground</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="485" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="485" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a2ec927693f1b3c6609016dbf8c671503" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8g2_font_setup_decode</definition>
        <argsstring>(u8g2_t *u8g2, const uint8_t *glyph_data)</argsstring>
        <name>u8g2_font_setup_decode</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>glyph_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="578" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="578" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a803de3452dc17fb79d27b0ed268b8e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_font_decode_glyph</definition>
        <argsstring>(u8g2_t *u8g2, const uint8_t *glyph_data)</argsstring>
        <name>u8g2_font_decode_glyph</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>glyph_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="612" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="612" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a55569b406c08efa28cf569dc8f687034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_font_2x_decode_glyph</definition>
        <argsstring>(u8g2_t *u8g2, const uint8_t *glyph_data)</argsstring>
        <name>u8g2_font_2x_decode_glyph</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>glyph_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="713" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="713" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ad71c6b7199fd619b68bf6cc8edc969c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t * u8g2_font_get_glyph_data</definition>
        <argsstring>(u8g2_t *u8g2, uint16_t encoding)</argsstring>
        <name>u8g2_font_get_glyph_data</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="782" column="15" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="782" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a4e4e64590ea9961c6f7fc3e13a82e8a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>static u8g2_uint_t u8g2_font_draw_glyph</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)</argsstring>
        <name>u8g2_font_draw_glyph</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="869" column="20" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="869" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1aad71e4106f8a6cf6a8f175b628eeb36a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>static u8g2_uint_t u8g2_font_2x_draw_glyph</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)</argsstring>
        <name>u8g2_font_2x_draw_glyph</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="884" column="20" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="884" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1af76fff12d1674a16d7b4bec236cb3a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t u8g2_IsGlyph</definition>
        <argsstring>(u8g2_t *u8g2, uint16_t requested_encoding)</argsstring>
        <name>u8g2_IsGlyph</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>requested_encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="899" column="9" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="899" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a3dc8d30d85fb430dc4f7414f6c851aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_GetGlyphWidth</definition>
        <argsstring>(u8g2_t *u8g2, uint16_t requested_encoding)</argsstring>
        <name>u8g2_GetGlyphWidth</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>requested_encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="908" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="908" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ad2857fb64fafbafbf27b98378f0451d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontMode</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t is_transparent)</argsstring>
        <name>u8g2_SetFontMode</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_transparent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="931" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="931" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1aab6c5b9b23d578920584be8f073a5a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawGlyph</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)</argsstring>
        <name>u8g2_DrawGlyph</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="936" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="936" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a072fb12e8b4f92b731ef51d03bffeed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawGlyphX2</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)</argsstring>
        <name>u8g2_DrawGlyphX2</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="960" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="960" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ab9c093097215aa447df878e7cea77d66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>static u8g2_uint_t u8g2_draw_string</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str) U8G2_NOINLINE</argsstring>
        <name>u8g2_draw_string</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="967" column="20" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="967" bodyend="1014" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="966" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a7824308fc9b82b6d691fa9ff37e45ac1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>static u8g2_uint_t u8g2_draw_string_2x</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str) U8G2_NOINLINE</argsstring>
        <name>u8g2_draw_string_2x</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1017" column="20" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1017" bodyend="1037" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="1016" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a5d345243637f07086cb19ea23d5fbf98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawStr</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)</argsstring>
        <name>u8g2_DrawStr</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1039" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1039" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ac89e2e7cf4372c263aa1c999edc87d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawStrX2</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)</argsstring>
        <name>u8g2_DrawStrX2</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1045" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1045" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1af83bdee3d6182c2b2e314a82aebc721f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawUTF8</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)</argsstring>
        <name>u8g2_DrawUTF8</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1061" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1061" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a73658b78da35d0c2ae9d00d065dc0d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawUTF8X2</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)</argsstring>
        <name>u8g2_DrawUTF8X2</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1067" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1067" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1aab504e38732eab7624c8db300e6c30a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawExtendedUTF8</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint8_t to_left, u8g2_kerning_t *kerning, const char *str)</argsstring>
        <name>u8g2_DrawExtendedUTF8</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>to_left</declname>
        </param>
        <param>
          <type><ref refid="struct__u8g2__kerning__t" kindref="compound">u8g2_kerning_t</ref> *</type>
          <declname>kerning</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1074" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1074" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a0632a23700b61693f1f2c8b263e0fdcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_DrawExtUTF8</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint8_t to_left, const uint16_t *kerning_table, const char *str)</argsstring>
        <name>u8g2_DrawExtUTF8</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>to_left</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>kerning_table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1121" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1121" bodyend="1173"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a8616a1224d54122510db523e499037cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_UpdateRefHeight</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_UpdateRefHeight</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1181" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1181" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a0d942c0f13d3d39d15ec446cea5454b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontRefHeightText</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SetFontRefHeightText</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1206" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1206" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a27361f263e8a2f29893c998902fc7609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontRefHeightExtendedText</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SetFontRefHeightExtendedText</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1212" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1212" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a5d2b00953316412b2b08404128479934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontRefHeightAll</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SetFontRefHeightAll</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1218" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1218" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a1fca4549c3277b3abfc2851cecf7cf16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_font_calc_vref_font</definition>
        <argsstring>(U8X8_UNUSED u8g2_t *u8g2)</argsstring>
        <name>u8g2_font_calc_vref_font</name>
        <param>
          <type>U8X8_UNUSED <ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1227" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1227" bodyend="1230"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a1b54b85fd09856793b224f50403dc188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontPosBaseline</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SetFontPosBaseline</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1232" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1232" bodyend="1235"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a2bd4ff0dd1106c40fe4c1ff17adb0194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_font_calc_vref_bottom</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_font_calc_vref_bottom</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1238" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1238" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a81769420093e89046fba0dda564dd5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontPosBottom</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SetFontPosBottom</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1243" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1243" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1ad3303a5bc502d5d861ce0b7bf452bc86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_font_calc_vref_top</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_font_calc_vref_top</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1248" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1248" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a5223b0d7937bd931788ea84d1f77859f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontPosTop</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SetFontPosTop</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1257" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1257" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1afb61323c4816971a133ea07918fa39f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_font_calc_vref_center</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_font_calc_vref_center</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1262" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1262" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1aa4155c9bf505cba488d91c9dffcfe811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontPosCenter</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SetFontPosCenter</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1272" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1272" bodyend="1275"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a1aaf014c675319e1503c32057183e922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFont</definition>
        <argsstring>(u8g2_t *u8g2, const uint8_t *font)</argsstring>
        <name>u8g2_SetFont</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1279" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1279" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a824b38a921b33ea7e7feeadc098398b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t u8g2_is_all_valid</definition>
        <argsstring>(u8g2_t *u8g2, const char *str) U8G2_NOINLINE</argsstring>
        <name>u8g2_is_all_valid</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1297" column="16" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1297" bodyend="1314" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="1296" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a42c8d6acfaa0312ff16747f9489176eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t u8g2_IsAllValidUTF8</definition>
        <argsstring>(u8g2_t *u8g2, const char *str)</argsstring>
        <name>u8g2_IsAllValidUTF8</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1316" column="9" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1316" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1af71630cd95b017786e906ea7111df1fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>static u8g2_uint_t u8g2_string_width</definition>
        <argsstring>(u8g2_t *u8g2, const char *str) U8G2_NOINLINE</argsstring>
        <name>u8g2_string_width</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1325" column="20" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1325" bodyend="1378" declfile="src/helper/U8g2/clib/u8g2_font.c" declline="1324" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a99fe50ebf7f462ce946929b6b1200584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_GetXOffsetGlyph</definition>
        <argsstring>(u8g2_t *u8g2, uint16_t encoding)</argsstring>
        <name>u8g2_GetXOffsetGlyph</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1380" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1380" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a1ba8918df7139ed8452e95ff825ea2f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_GetXOffsetUTF8</definition>
        <argsstring>(u8g2_t *u8g2, const char *utf8)</argsstring>
        <name>u8g2_GetXOffsetUTF8</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1386" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1386" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a3d6ceb8fed7208b2df1a8cedbc2d941b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8g2_GetGlyphHorizontalProperties</definition>
        <argsstring>(u8g2_t *u8g2, uint16_t requested_encoding, uint8_t *w, int8_t *ox, int8_t *dx)</argsstring>
        <name>u8g2_GetGlyphHorizontalProperties</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>requested_encoding</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>ox</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>dx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1402" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1402" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a4bb46f69b813ab8ccbb867b5b68f46b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t u8g2_GetStrX</definition>
        <argsstring>(u8g2_t *u8g2, const char *s)</argsstring>
        <name>u8g2_GetStrX</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1416" column="8" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1416" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1afceceea2a5ba7abb9a80954ade6d85e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_GetStrWidth</definition>
        <argsstring>(u8g2_t *u8g2, const char *s)</argsstring>
        <name>u8g2_GetStrWidth</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1524" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1524" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1a8303b15e911402b2163665e269af8f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8g2_uint_t</type>
        <definition>u8g2_uint_t u8g2_GetUTF8Width</definition>
        <argsstring>(u8g2_t *u8g2, const char *str)</argsstring>
        <name>u8g2_GetUTF8Width</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1548" column="13" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1548" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__font_8c_1acbfbcc9b8303aa5d285f1937f8b81a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetFontDirection</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t dir)</argsstring>
        <name>u8g2_SetFontDirection</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_font.c" line="1556" column="6" bodyfile="src/helper/U8g2/clib/u8g2_font.c" bodystart="1556" bodyend="1561"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>u8g2_font.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Universal<sp/>8bit<sp/>Graphics<sp/>Library<sp/>(https://github.com/olikraus/u8g2/)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>olikraus@gmail.com</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.<sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;u8g2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>the<sp/>font<sp/>data<sp/>structure,<sp/>there<sp/>is<sp/>no<sp/>struct<sp/>or<sp/>class...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>the<sp/>size<sp/>for<sp/>the<sp/>new<sp/>font<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>U8G2_FONT_DATA_STRUCT_SIZE<sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>font<sp/>data:</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/>offset<sp/><sp/><sp/><sp/>bytes<sp/><sp/><sp/>description</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph_cnt<sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>glyphs</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbx_mode<sp/><sp/><sp/><sp/>0:<sp/>proportional,<sp/>1:<sp/>common<sp/>height,<sp/>2:<sp/>monospace,<sp/>3:<sp/>multiple<sp/>of<sp/>8</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_per_0<sp/><sp/>glyph<sp/>rle<sp/>parameter</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_per_1<sp/><sp/>glyph<sp/>rle<sp/>parameter</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_per_char_width<sp/><sp/><sp/><sp/><sp/>glyph<sp/>rle<sp/>parameter</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_per_char_height<sp/><sp/><sp/><sp/>glyph<sp/>rle<sp/>parameter</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_per_char_x<sp/><sp/><sp/><sp/><sp/>glyph<sp/>rle<sp/>parameter</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_per_char_y<sp/><sp/><sp/><sp/><sp/>glyph<sp/>rle<sp/>parameter</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_per_delta_x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph<sp/>rle<sp/>parameter</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_width</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_height</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>offset</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/>12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>offset<sp/>(descent)</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>13<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascent<sp/>(capital<sp/>A)</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>descent<sp/>(lower<sp/>g)</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascent<sp/>&apos;(&apos;</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>descent<sp/>&apos;)&apos;</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/>17<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>pos<sp/>&apos;A&apos;<sp/>high<sp/>byte</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>18<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>pos<sp/>&apos;A&apos;<sp/>low<sp/>byte</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>19<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>pos<sp/>&apos;a&apos;<sp/>high<sp/>byte</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/>20<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>pos<sp/>&apos;a&apos;<sp/>low<sp/>byte</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/>21<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>pos<sp/>unicode<sp/>high<sp/>byte</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>22<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>pos<sp/>unicode<sp/>low<sp/>byte</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>Font<sp/>build<sp/>mode,<sp/>0:<sp/>proportional,<sp/>1:<sp/>common<sp/>height,<sp/>2:<sp/>monospace,<sp/>3:<sp/>multiple<sp/>of<sp/>8</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/>Font<sp/>build<sp/>mode<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>&quot;t&quot;</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Ref<sp/>height<sp/>mode:<sp/>U8G2_FONT_HEIGHT_MODE_TEXT,<sp/>U8G2_FONT_HEIGHT_MODE_XTEXT<sp/>or<sp/>U8G2_FONT_HEIGHT_MODE_ALL</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>use<sp/>in<sp/>transparent<sp/>mode<sp/>only<sp/>(does<sp/>not<sp/>look<sp/>good<sp/>in<sp/>solid<sp/>mode)</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>most<sp/>compact<sp/>format</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>different<sp/>font<sp/>heights<sp/>possible</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/>Font<sp/>build<sp/>mode<sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>&quot;h&quot;</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Ref<sp/>height<sp/>mode:<sp/>U8G2_FONT_HEIGHT_MODE_ALL</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>transparent<sp/>or<sp/>solid<sp/>mode</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>The<sp/>height<sp/>of<sp/>the<sp/>glyphs<sp/>depend<sp/>on<sp/>the<sp/>largest<sp/>glyph<sp/>in<sp/>the<sp/>font.<sp/>This<sp/>means<sp/>font<sp/>height<sp/>depends<sp/>on<sp/>postfix<sp/>&quot;r&quot;,<sp/>&quot;f&quot;<sp/>and<sp/>&quot;n&quot;.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>case:<sp/>What<sp/>is<sp/>the<sp/>width<sp/>and<sp/>the<sp/>height<sp/>of<sp/>the<sp/>minimal<sp/>box<sp/>into<sp/>which<sp/>string<sp/>s<sp/>fints?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_GetStrSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>u8g2_uint_t<sp/>*width,<sp/>u8g2_uint_t<sp/>*height);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_GetStrSizeP(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>u8g2_uint_t<sp/>*width,<sp/>u8g2_uint_t<sp/>*height);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>case:<sp/>lower<sp/>left<sp/>edge<sp/>of<sp/>a<sp/>minimal<sp/>box<sp/>is<sp/>known,<sp/>what<sp/>is<sp/>the<sp/>correct<sp/>x,<sp/>y<sp/>position<sp/>for<sp/>the<sp/>string<sp/>draw<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_AdjustXYToDraw(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>u8g2_uint_t<sp/>*x,<sp/>u8g2_uint_t<sp/>*y);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_AdjustXYToDrawP(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>u8g2_uint_t<sp/>*x,<sp/>u8g2_uint_t<sp/>*y);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>case:<sp/>Baseline<sp/>origin<sp/>known,<sp/>return<sp/>minimal<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_GetStrMinBox(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>u8g2_uint_t<sp/>*x,<sp/>u8g2_uint_t<sp/>*y,<sp/>u8g2_uint_t<sp/>*width,<sp/>u8g2_uint_t<sp/>*height);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>procedures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>low<sp/>level<sp/>byte<sp/>and<sp/>word<sp/>access<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>removed<sp/>NOINLINE,<sp/>because<sp/>it<sp/>leads<sp/>to<sp/>smaller<sp/>code,<sp/>might<sp/>also<sp/>be<sp/>faster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>uint8_t<sp/>u8g2_font_get_byte(const<sp/>uint8_t<sp/>*font,<sp/>uint8_t<sp/>offset)<sp/>U8G2_NOINLINE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8g2_font_get_byte(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*font,<sp/>uint8_t<sp/>offset)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>font<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_pgm_read(<sp/>font<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>u8g2_font_get_word(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*font,<sp/>uint8_t<sp/>offset)<sp/>U8G2_NOINLINE;<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>u8g2_font_get_word(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*font,<sp/>uint8_t<sp/>offset)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>pos;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>u8x8_pgm_read(<sp/>font<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>font++;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>u8x8_pgm_read(<sp/>font);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>new<sp/>font<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_read_font_info(u8g2_font_info_t<sp/>*font_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*font)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>offset<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>font_info-&gt;glyph_cnt<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>font_info-&gt;bbx_mode<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>font_info-&gt;bits_per_0<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>2);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>font_info-&gt;bits_per_1<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>3);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>offset<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>font_info-&gt;bits_per_char_width<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>4);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>font_info-&gt;bits_per_char_height<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>5);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>font_info-&gt;bits_per_char_x<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>6);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>font_info-&gt;bits_per_char_y<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>7);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>font_info-&gt;bits_per_delta_x<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>8);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>offset<sp/>9<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>font_info-&gt;max_char_width<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>9);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>font_info-&gt;max_char_height<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>10);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>font_info-&gt;x_offset<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>11);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>font_info-&gt;y_offset<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>12);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>offset<sp/>13<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>font_info-&gt;ascent_A<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>13);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>font_info-&gt;descent_g<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>14);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>font_info-&gt;ascent_para<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>15);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>font_info-&gt;descent_para<sp/>=<sp/>u8g2_font_get_byte(font,<sp/>16);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>offset<sp/>17<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>font_info-&gt;start_pos_upper_A<sp/>=<sp/>u8g2_font_get_word(font,<sp/>17);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>font_info-&gt;start_pos_lower_a<sp/>=<sp/>u8g2_font_get_word(font,<sp/>19);<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>offset<sp/>21<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>font_info-&gt;start_pos_unicode<sp/>=<sp/>u8g2_font_get_word(font,<sp/>21);<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>overall<sp/>length<sp/>of<sp/>the<sp/>font,<sp/>only<sp/>used<sp/>to<sp/>create<sp/>the<sp/>picture<sp/>for<sp/>the<sp/>google<sp/>wiki<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>u8g2_GetFontSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*font_arg)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*font<sp/>=<sp/>font_arg;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>font<sp/>+=<sp/>U8G2_FONT_DATA_STRUCT_SIZE;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>1<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>continue<sp/>with<sp/>unicode<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>font<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>unicode<sp/>lookup<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>font<sp/>+=<sp/>u8g2_font_get_word(font,<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8x8_pgm_read(<sp/>font<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>|=<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>2<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(font<sp/>-<sp/>font_arg)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>u8g2<sp/>interface,<sp/>font<sp/>access<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">uint8_t<sp/>u8g2_GetFontBBXWidth(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2-&gt;font_info.max_char_width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>font<sp/>info<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">uint8_t<sp/>u8g2_GetFontBBXHeight(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2-&gt;font_info.max_char_height;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>font<sp/>info<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">int8_t<sp/>u8g2_GetFontBBXOffX(u8g2_t<sp/>*u8g2)<sp/>U8G2_NOINLINE;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">int8_t<sp/>u8g2_GetFontBBXOffX(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2-&gt;font_info.x_offset;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>font<sp/>info<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">int8_t<sp/>u8g2_GetFontBBXOffY(u8g2_t<sp/>*u8g2)<sp/>U8G2_NOINLINE;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">int8_t<sp/>u8g2_GetFontBBXOffY(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2-&gt;font_info.y_offset;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>font<sp/>info<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">uint8_t<sp/>u8g2_GetFontCapitalAHeight(u8g2_t<sp/>*u8g2)<sp/>U8G2_NOINLINE;<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal">uint8_t<sp/>u8g2_GetFontCapitalAHeight(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2-&gt;font_info.ascent_A;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>font<sp/>info<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*========================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>glyph<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>optimized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">uint8_t<sp/>u8g2_font_decode_get_unsigned_bits(u8g2_font_decode_t<sp/>*f,<sp/>uint8_t<sp/>cnt)<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>uint8_t<sp/>val;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bit_pos<sp/>=<sp/>f-&gt;decode_bit_pos;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bit_pos_plus_cnt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//val<sp/>=<sp/>*(f-&gt;decode_ptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>u8x8_pgm_read(<sp/>f-&gt;decode_ptr<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>val<sp/>&gt;&gt;=<sp/>bit_pos;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>bit_pos_plus_cnt<sp/>=<sp/>bit_pos;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>bit_pos_plus_cnt<sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bit_pos_plus_cnt<sp/>&gt;=<sp/>8<sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>s<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>-=<sp/>bit_pos;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;decode_ptr++;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//val<sp/>|=<sp/>*(f-&gt;decode_ptr)<sp/>&lt;&lt;<sp/>(8-bit_pos);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>|=<sp/>u8x8_pgm_read(<sp/>f-&gt;decode_ptr<sp/>)<sp/>&lt;&lt;<sp/>(s);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bit_pos<sp/>-=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>bit_pos_plus_cnt<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>val<sp/>&amp;=<sp/>(1U&lt;&lt;cnt)-1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bit_pos<sp/>+=<sp/>cnt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>f-&gt;decode_bit_pos<sp/>=<sp/>bit_pos_plus_cnt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>2<sp/>bit<sp/>--&gt;<sp/>cnt<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-2,-1,0.<sp/>1</highlight></codeline>
<codeline lineno="270"><highlight class="comment"></highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/>3<sp/>bit<sp/>--&gt;<sp/>cnt<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-2,-1,0.<sp/>1</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-4,-3,-2,-1,0,1,2,3</highlight></codeline>
<codeline lineno="274"><highlight class="comment"></highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>x<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>bits(x-1)+1;</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>bits(x)+1;</highlight></codeline>
<codeline lineno="279"><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>optimized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">int8_t<sp/>u8g2_font_decode_get_signed_bits(u8g2_font_decode_t<sp/>*f,<sp/>uint8_t<sp/>cnt)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>int8_t<sp/>v,<sp/>d;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>(int8_t)u8g2_font_decode_get_unsigned_bits(f,<sp/>cnt);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>cnt--;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>d<sp/>&lt;&lt;=<sp/>cnt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>v<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>(int8_t)u8g2_font_decode_get_unsigned_bits(f,<sp/>cnt)<sp/>-<sp/>((1&lt;&lt;cnt)&gt;&gt;1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">u8g2_uint_t<sp/>u8g2_add_vector_y(u8g2_uint_t<sp/>dy,<sp/>int8_t<sp/>x,<sp/>int8_t<sp/>y,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(dir)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>+=<sp/>y;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>-=<sp/>y;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dy;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">u8g2_uint_t<sp/>u8g2_add_vector_x(u8g2_uint_t<sp/>dx,<sp/>int8_t<sp/>x,<sp/>int8_t<sp/>y,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(dir)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>-=<sp/>y;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>+=<sp/>y;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="337"><highlight class="comment">//<sp/>does<sp/>not<sp/>make<sp/>sense,<sp/>50<sp/>bytes<sp/>more<sp/>required<sp/>on<sp/>avr</highlight></codeline>
<codeline lineno="338"><highlight class="comment">void<sp/>u8g2_add_vector(u8g2_uint_t<sp/>*xp,<sp/>u8g2_uint_t<sp/>*yp,<sp/>int8_t<sp/>x,<sp/>int8_t<sp/>y,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="339"><highlight class="comment">{</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/>u8g2_uint_t<sp/>x_<sp/>=<sp/>*xp;</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/>u8g2_uint_t<sp/>y_<sp/>=<sp/>*yp;</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/>switch(dir)</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>0:</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>y_<sp/>+=<sp/>y;</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>x_<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>1:</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>y_<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>x_<sp/>-=<sp/>y;</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>2:</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>y_<sp/>-=<sp/>y;</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>x_<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>y_<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>x_<sp/>+=<sp/>y;</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/>*xp<sp/>=<sp/>x_;</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/>*yp<sp/>=<sp/>y_;</highlight></codeline>
<codeline lineno="363"><highlight class="comment">}</highlight></codeline>
<codeline lineno="364"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/>Description:</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/>Draw<sp/>a<sp/>run-length<sp/>area<sp/>of<sp/>the<sp/>glyph.<sp/>&quot;len&quot;<sp/>can<sp/>have<sp/>any<sp/>size<sp/>and<sp/>the<sp/>line</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/>length<sp/>has<sp/>to<sp/>be<sp/>wrapped<sp/>at<sp/>the<sp/>glyph<sp/>border.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/>len:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>the<sp/>line</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/>is_foreground<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foreground/background?</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;font_decode.target_x<sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>position</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;font_decode.target_y<sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>position</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;font_decode.is_transparent<sp/><sp/><sp/><sp/>Transparent<sp/>mode</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/>-</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/>Calls:</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2_Draw90Line()</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/>Called<sp/>by:</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2_font_decode_glyph()</highlight></codeline>
<codeline lineno="385"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>optimized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_decode_len(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/>len,<sp/>uint8_t<sp/>is_foreground)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cnt;<sp/><sp/></highlight><highlight class="comment">/*<sp/>total<sp/>number<sp/>of<sp/>remaining<sp/>pixels,<sp/>which<sp/>have<sp/>to<sp/>be<sp/>drawn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rem;<sp/><sp/></highlight><highlight class="comment">/*<sp/>remaining<sp/>pixel<sp/>to<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>uint8_t<sp/>current;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>pixels,<sp/>which<sp/>need<sp/>to<sp/>be<sp/>drawn<sp/>for<sp/>the<sp/>draw<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>is<sp/>either<sp/>equal<sp/>to<sp/>cnt<sp/>or<sp/>equal<sp/>to<sp/>rem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>local<sp/>coordinates<sp/>of<sp/>the<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>uint8_t<sp/>lx,ly;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>target<sp/>position<sp/>on<sp/>the<sp/>screen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>u8g2_font_decode_t<sp/>*decode<sp/>=<sp/>&amp;(u8g2-&gt;font_decode);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>cnt<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>local<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>lx<sp/>=<sp/>decode-&gt;x;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>ly<sp/>=<sp/>decode-&gt;y;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>number<sp/>of<sp/>pixel<sp/>to<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>rem<sp/>=<sp/>decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>rem<sp/>-=<sp/>lx;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>how<sp/>many<sp/>pixel<sp/>to<sp/>draw.<sp/>This<sp/>is<sp/>either<sp/>to<sp/>the<sp/>right<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>or<sp/>lesser,<sp/>if<sp/>not<sp/>enough<sp/>pixel<sp/>are<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>rem;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>&lt;<sp/>rem<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>draw<sp/>the<sp/>line,<sp/>but<sp/>apply<sp/>the<sp/>rotation<sp/>around<sp/>the<sp/>glyph<sp/>target<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2_font_decode_draw_pixel(u8g2,<sp/>lx,ly,current,<sp/>is_foreground);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>target<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>decode-&gt;target_x;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>decode-&gt;target_y;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>rotation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>u8g2_add_vector_x(x,<sp/>lx,<sp/>ly,<sp/>decode-&gt;dir);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>u8g2_add_vector_y(y,<sp/>lx,<sp/>ly,<sp/>decode-&gt;dir);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2_add_vector(&amp;x,<sp/>&amp;y,<sp/>lx,<sp/>ly,<sp/>decode-&gt;dir);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>lx;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>ly;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>draw<sp/>foreground<sp/>and<sp/>background<sp/>(if<sp/>required)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>is_foreground<sp/>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>decode-&gt;fg_color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>draw_color<sp/>will<sp/>be<sp/>restored<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>y,<sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>current,<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dir<sp/>*/</highlight><highlight class="normal"><sp/>decode-&gt;dir</highlight></codeline>
<codeline lineno="451"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="453"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>decode-&gt;is_transparent<sp/>==<sp/>0<sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>decode-&gt;bg_color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>draw_color<sp/>will<sp/>be<sp/>restored<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>y,<sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>current,<sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dir<sp/>*/</highlight><highlight class="normal"><sp/>decode-&gt;dir</highlight></codeline>
<codeline lineno="465"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="467"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check,<sp/>whether<sp/>the<sp/>end<sp/>of<sp/>the<sp/>run<sp/>length<sp/>code<sp/>has<sp/>been<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>&lt;<sp/>rem<sp/>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>-=<sp/>rem;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>ly++;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>lx<sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>decode-&gt;x<sp/>=<sp/>lx;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>decode-&gt;y<sp/>=<sp/>ly;<sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_2x_decode_len(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/>len,<sp/>uint8_t<sp/>is_foreground)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cnt;<sp/><sp/></highlight><highlight class="comment">/*<sp/>total<sp/>number<sp/>of<sp/>remaining<sp/>pixels,<sp/>which<sp/>have<sp/>to<sp/>be<sp/>drawn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rem;<sp/><sp/></highlight><highlight class="comment">/*<sp/>remaining<sp/>pixel<sp/>to<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>uint8_t<sp/>current;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>pixels,<sp/>which<sp/>need<sp/>to<sp/>be<sp/>drawn<sp/>for<sp/>the<sp/>draw<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>is<sp/>either<sp/>equal<sp/>to<sp/>cnt<sp/>or<sp/>equal<sp/>to<sp/>rem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>local<sp/>coordinates<sp/>of<sp/>the<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>uint8_t<sp/>lx,ly;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>target<sp/>position<sp/>on<sp/>the<sp/>screen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>u8g2_font_decode_t<sp/>*decode<sp/>=<sp/>&amp;(u8g2-&gt;font_decode);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>cnt<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>local<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>lx<sp/>=<sp/>decode-&gt;x;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>ly<sp/>=<sp/>decode-&gt;y;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>number<sp/>of<sp/>pixel<sp/>to<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>rem<sp/>=<sp/>decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>rem<sp/>-=<sp/>lx;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>how<sp/>many<sp/>pixel<sp/>to<sp/>draw.<sp/>This<sp/>is<sp/>either<sp/>to<sp/>the<sp/>right<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>or<sp/>lesser,<sp/>if<sp/>not<sp/>enough<sp/>pixel<sp/>are<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>rem;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>&lt;<sp/>rem<sp/>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>draw<sp/>the<sp/>line,<sp/>but<sp/>apply<sp/>the<sp/>rotation<sp/>around<sp/>the<sp/>glyph<sp/>target<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2_font_decode_draw_pixel(u8g2,<sp/>lx,ly,current,<sp/>is_foreground);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>target<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>decode-&gt;target_x;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>decode-&gt;target_y;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>lx*2;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>ly*2;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>draw<sp/>foreground<sp/>and<sp/>background<sp/>(if<sp/>required)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>is_foreground<sp/>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>decode-&gt;fg_color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>draw_color<sp/>will<sp/>be<sp/>restored<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>y,<sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>current*2,<sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>y+1,<sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>current*2,<sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>decode-&gt;is_transparent<sp/>==<sp/>0<sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>decode-&gt;bg_color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>draw_color<sp/>will<sp/>be<sp/>restored<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>y,<sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>current*2,<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>y+1,<sp/></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>current*2,<sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check,<sp/>whether<sp/>the<sp/>end<sp/>of<sp/>the<sp/>run<sp/>length<sp/>code<sp/>has<sp/>been<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>&lt;<sp/>rem<sp/>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>-=<sp/>rem;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>ly++;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>lx<sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>decode-&gt;x<sp/>=<sp/>lx;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>decode-&gt;y<sp/>=<sp/>ly;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_font_setup_decode(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*glyph_data)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>u8g2_font_decode_t<sp/>*decode<sp/>=<sp/>&amp;(u8g2-&gt;font_decode);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>decode-&gt;decode_ptr<sp/>=<sp/>glyph_data;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>decode-&gt;decode_bit_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>8<sp/>Nov<sp/>2015,<sp/>this<sp/>is<sp/>already<sp/>done<sp/>in<sp/>the<sp/>glyph<sp/>data<sp/>search<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/>decode-&gt;decode_ptr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/>decode-&gt;decode_ptr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>decode-&gt;glyph_width<sp/>=<sp/>u8g2_font_decode_get_unsigned_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_char_width);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>decode-&gt;glyph_height<sp/>=<sp/>u8g2_font_decode_get_unsigned_bits(decode,u8g2-&gt;font_info.bits_per_char_height);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>decode-&gt;fg_color<sp/>=<sp/>u8g2-&gt;draw_color;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>decode-&gt;bg_color<sp/>=<sp/>(decode-&gt;fg_color<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/>Description:</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/>Decode<sp/>and<sp/>draw<sp/>a<sp/>glyph.</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/><sp/>glyph_data:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>compressed<sp/>glyph<sp/>data<sp/>of<sp/>the<sp/>font</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;font_decode.target_x<sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>position</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;font_decode.target_y<sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>position</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;font_decode.is_transparent<sp/><sp/><sp/><sp/>Transparent<sp/>mode</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/>Width<sp/>(delta<sp/>x<sp/>advance)<sp/>of<sp/>the<sp/>glyph.</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/>Calls:</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2_font_decode_len()</highlight></codeline>
<codeline lineno="610"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>optimized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal">int8_t<sp/>u8g2_font_decode_glyph(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*glyph_data)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>uint8_t<sp/>a,<sp/>b;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>int8_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>int8_t<sp/>d;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>int8_t<sp/>h;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>u8g2_font_decode_t<sp/>*decode<sp/>=<sp/>&amp;(u8g2-&gt;font_decode);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>u8g2_font_setup_decode(u8g2,<sp/>glyph_data);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>values<sp/>in<sp/>u8g2-&gt;font_decode<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>u8g2-&gt;font_decode.glyph_height;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>u8g2_font_decode_get_signed_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_char_x);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>u8g2_font_decode_get_signed_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_char_y);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>u8g2_font_decode_get_signed_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_delta_x);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>decode-&gt;glyph_width<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;target_x<sp/>=<sp/>u8g2_add_vector_x(decode-&gt;target_x,<sp/>x,<sp/>-(h+y),<sp/>decode-&gt;dir);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;target_y<sp/>=<sp/>u8g2_add_vector_y(decode-&gt;target_y,<sp/>x,<sp/>-(h+y),<sp/>decode-&gt;dir);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2_add_vector(&amp;(decode-&gt;target_x),<sp/>&amp;(decode-&gt;target_y),<sp/>x,<sp/>-(h+y),<sp/>decode-&gt;dir);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;target_x<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;target_y<sp/>-=<sp/>h+y;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u8g2_add_vector(&amp;(decode-&gt;target_x),<sp/>&amp;(decode-&gt;target_y),<sp/>x,<sp/>-(h+y),<sp/>decode-&gt;dir);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_INTERSECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_uint_t<sp/>x0,<sp/>x1,<sp/>y0,<sp/>y1;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>decode-&gt;target_x;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>decode-&gt;target_y;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(decode-&gt;dir)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>+=<sp/>h;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>-=<sp/>h;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>down,<sp/>because<sp/>of<sp/>assymetric<sp/>boundaries<sp/>for<sp/>the<sp/>interseciton<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1++;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>+=<sp/>decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>-=<sp/>decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>down,<sp/>because<sp/>of<sp/>assymetric<sp/>boundaries<sp/>for<sp/>the<sp/>interseciton<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1++;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>-=<sp/>h;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>down,<sp/>because<sp/>of<sp/>assymetric<sp/>boundaries<sp/>for<sp/>the<sp/>interseciton<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1++;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>h;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>-=<sp/>decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>down,<sp/>because<sp/>of<sp/>assymetric<sp/>boundaries<sp/>for<sp/>the<sp/>interseciton<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1++;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_FONT_ROTATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>+=<sp/>h;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2_IsIntersection(u8g2,<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1)<sp/>==<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_INTERSECTION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>local<sp/>x/y<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>decode<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>u8g2_font_decode_get_unsigned_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_0);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>u8g2_font_decode_get_unsigned_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_1);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_font_decode_len(u8g2,<sp/>a,<sp/>0);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_font_decode_len(u8g2,<sp/>b,<sp/>1);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>u8g2_font_decode_get_unsigned_bits(decode,<sp/>1)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>decode-&gt;y<sp/>&gt;=<sp/>h<sp/>)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>u8g2<sp/>draw<sp/>color,<sp/>because<sp/>this<sp/>is<sp/>modified<sp/>by<sp/>the<sp/>decode<sp/>algo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>decode-&gt;fg_color;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">int8_t<sp/>u8g2_font_2x_decode_glyph(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*glyph_data)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>uint8_t<sp/>a,<sp/>b;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>int8_t<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>int8_t<sp/>d;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>int8_t<sp/>h;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>u8g2_font_decode_t<sp/>*decode<sp/>=<sp/>&amp;(u8g2-&gt;font_decode);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>u8g2_font_setup_decode(u8g2,<sp/>glyph_data);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>values<sp/>in<sp/>u8g2-&gt;font_decode<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>u8g2-&gt;font_decode.glyph_height;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>u8g2_font_decode_get_signed_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_char_x);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>u8g2_font_decode_get_signed_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_char_y);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>u8g2_font_decode_get_signed_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_delta_x);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>decode-&gt;glyph_width<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;target_x<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;target_y<sp/>-=<sp/>2*h+y;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_INTERSECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_uint_t<sp/>x0,<sp/>x1,<sp/>y0,<sp/>y1;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>decode-&gt;target_x;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>decode-&gt;target_y;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>2*decode-&gt;glyph_width;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>+=<sp/>2*h;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2_IsIntersection(u8g2,<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1)<sp/>==<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2*d;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_INTERSECTION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>local<sp/>x/y<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>decode-&gt;y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>decode<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>u8g2_font_decode_get_unsigned_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_0);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>u8g2_font_decode_get_unsigned_bits(decode,<sp/>u8g2-&gt;font_info.bits_per_1);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_font_2x_decode_len(u8g2,<sp/>a,<sp/>0);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_font_2x_decode_len(u8g2,<sp/>b,<sp/>1);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>u8g2_font_decode_get_unsigned_bits(decode,<sp/>1)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>decode-&gt;y<sp/>&gt;=<sp/>h<sp/>)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>u8g2<sp/>draw<sp/>color,<sp/>because<sp/>this<sp/>is<sp/>modified<sp/>by<sp/>the<sp/>decode<sp/>algo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>decode-&gt;fg_color;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d*2;</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/>Description:</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/>Find<sp/>the<sp/>starting<sp/>point<sp/>of<sp/>the<sp/>glyph<sp/>data.</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/>encoding:<sp/>Encoding<sp/>(ASCII<sp/>or<sp/>Unicode)<sp/>of<sp/>the<sp/>glyph</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>glyph<sp/>data<sp/>or<sp/>NULL,<sp/>if<sp/>the<sp/>encoding<sp/>is<sp/>not<sp/>avialable<sp/>in<sp/>the<sp/>font.</highlight></codeline>
<codeline lineno="781"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*u8g2_font_get_glyph_data(u8g2_t<sp/>*u8g2,<sp/>uint16_t<sp/>encoding)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*font<sp/>=<sp/>u8g2-&gt;font;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>font<sp/>+=<sp/>U8G2_FONT_DATA_STRUCT_SIZE;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>encoding<sp/>&lt;=<sp/>255<sp/>)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>encoding<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8g2-&gt;font_info.start_pos_lower_a;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>encoding<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8g2-&gt;font_info.start_pos_upper_A;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>1<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8x8_pgm_read(<sp/>font<sp/>)<sp/>==<sp/>encoding<sp/>)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>font+2;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>encoding<sp/>and<sp/>glyph<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*unicode_lookup_table;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">//<sp/>removed,<sp/>there<sp/>is<sp/>now<sp/>the<sp/>new<sp/>index<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/><sp/>__unix__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(<sp/>u8g2-&gt;last_font_data<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>encoding<sp/>&gt;=<sp/>u8g2-&gt;last_unicode<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>font<sp/>=<sp/>u8g2-&gt;last_font_data;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8g2-&gt;font_info.start_pos_unicode;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>unicode_lookup_table<sp/>=<sp/>font;<sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>596:<sp/>search<sp/>for<sp/>the<sp/>glyph<sp/>start<sp/>in<sp/>the<sp/>unicode<sp/>lookup<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8g2_font_get_word(unicode_lookup_table,<sp/>0);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8g2_font_get_word(unicode_lookup_table,<sp/>2);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unicode_lookup_table+=4;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>e<sp/>&lt;<sp/>encoding<sp/>);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8x8_pgm_read(<sp/>font<sp/>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>|=<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">//<sp/>removed,<sp/>there<sp/>is<sp/>now<sp/>the<sp/>new<sp/>index<sp/>table<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/><sp/>__unix__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>encoding<sp/>&lt;<sp/>e<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>encoding<sp/>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="comment">//<sp/>removed,<sp/>there<sp/>is<sp/>now<sp/>the<sp/>new<sp/>index<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/><sp/>__unix__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>u8g2-&gt;last_font_data<sp/>=<sp/>font;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>u8g2-&gt;last_unicode<sp/>=<sp/>encoding;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">//#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>font+3;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>encoding<sp/>and<sp/>glyph<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>+=<sp/>u8x8_pgm_read(<sp/>font<sp/>+<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_font_draw_glyph(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>uint16_t<sp/>encoding)</highlight></codeline>
<codeline lineno="870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_decode.target_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_decode.target_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//u8g2-&gt;font_decode.is_transparent<sp/>=<sp/>is_transparent;<sp/>this<sp/>is<sp/>already<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//u8g2-&gt;font_decode.dir<sp/>=<sp/>dir;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*glyph_data<sp/>=<sp/>u8g2_font_get_glyph_data(u8g2,<sp/>encoding);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glyph_data<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>u8g2_font_decode_glyph(u8g2,<sp/>glyph_data);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_font_2x_draw_glyph(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>uint16_t<sp/>encoding)</highlight></codeline>
<codeline lineno="885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_decode.target_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_decode.target_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*glyph_data<sp/>=<sp/>u8g2_font_get_glyph_data(u8g2,<sp/>encoding);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glyph_data<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>u8g2_font_2x_decode_glyph(u8g2,<sp/>glyph_data);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal">uint8_t<sp/>u8g2_IsGlyph(u8g2_t<sp/>*u8g2,<sp/>uint16_t<sp/>requested_encoding)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>updated<sp/>to<sp/>new<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2_font_get_glyph_data(u8g2,<sp/>requested_encoding)<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>side<sp/>effect:<sp/>updates<sp/>u8g2-&gt;font_decode<sp/>and<sp/>u8g2-&gt;glyph_x_offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal">int8_t<sp/>u8g2_GetGlyphWidth(u8g2_t<sp/>*u8g2,<sp/>uint16_t<sp/>requested_encoding)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*glyph_data<sp/>=<sp/>u8g2_font_get_glyph_data(u8g2,<sp/>requested_encoding);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glyph_data<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>u8g2_font_setup_decode(u8g2,<sp/>glyph_data);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>u8g2-&gt;glyph_x_offset<sp/>=<sp/>u8g2_font_decode_get_signed_bits(&amp;(u8g2-&gt;font_decode),<sp/>u8g2-&gt;font_info.bits_per_char_x);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>u8g2_font_decode_get_signed_bits(&amp;(u8g2-&gt;font_decode),<sp/>u8g2-&gt;font_info.bits_per_char_y);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>glyph<sp/>width<sp/>is<sp/>here:<sp/>u8g2-&gt;font_decode.glyph_width<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_font_decode_get_signed_bits(&amp;(u8g2-&gt;font_decode),<sp/>u8g2-&gt;font_info.bits_per_delta_x);</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/><sp/>set<sp/>one<sp/>of:</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/><sp/>U8G2_FONT_MODE_TRANSPARENT</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/><sp/><sp/>U8G2_FONT_MODE_SOLID</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/><sp/>U8G2_FONT_MODE_NONE</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/>This<sp/>has<sp/>been<sp/>changed<sp/>for<sp/>the<sp/>new<sp/>font<sp/>procedures<sp/><sp/></highlight></codeline>
<codeline lineno="930"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontMode(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/>is_transparent)</highlight></codeline>
<codeline lineno="932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_decode.is_transparent<sp/>=<sp/>is_transparent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>font<sp/>procedures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawGlyph(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>uint16_t<sp/>encoding)</highlight></codeline>
<codeline lineno="937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(u8g2-&gt;font_decode.dir)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>u8g2-&gt;font_calc_vref(u8g2);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>u8g2-&gt;font_calc_vref(u8g2);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>u8g2-&gt;font_calc_vref(u8g2);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>u8g2-&gt;font_calc_vref(u8g2);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>y<sp/>+=<sp/>u8g2-&gt;font_calc_vref(u8g2);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_font_draw_glyph(u8g2,<sp/>x,<sp/>y,<sp/>encoding);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawGlyphX2(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>uint16_t<sp/>encoding)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>y<sp/>+=<sp/>2*u8g2-&gt;font_calc_vref(u8g2);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_font_2x_draw_glyph(u8g2,<sp/>x,<sp/>y,<sp/>encoding);</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_draw_string(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>U8G2_NOINLINE;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_draw_string(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>delta,<sp/>sum;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>u8x8_utf8_init(u8g2_GetU8x8(u8g2));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*str);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>u8g2_DrawGlyph(u8g2,<sp/>x,<sp/>y,<sp/>e);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_FONT_ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(u8g2-&gt;font_decode.dir)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>requires<sp/>10<sp/>bytes<sp/>more<sp/>on<sp/>avr</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>u8g2_add_vector_x(x,<sp/>delta,<sp/>0,<sp/>u8g2-&gt;font_decode.dir);</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>u8g2_add_vector_y(y,<sp/>delta,<sp/>0,<sp/>u8g2-&gt;font_decode.dir);</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_draw_string_2x(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>U8G2_NOINLINE;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_draw_string_2x(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>delta,<sp/>sum;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>u8x8_utf8_init(u8g2_GetU8x8(u8g2));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*str);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>u8g2_DrawGlyphX2(u8g2,<sp/>x,<sp/>y,<sp/>e);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawStr(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_ascii_next;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_draw_string(u8g2,<sp/>x,<sp/>y,<sp/>str);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawStrX2(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_ascii_next;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_draw_string_2x(u8g2,<sp/>x,<sp/>y,<sp/>str);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1052"><highlight class="comment">source:<sp/>https://en.wikipedia.org/wiki/UTF-8</highlight></codeline>
<codeline lineno="1053"><highlight class="comment">Bits<sp/><sp/><sp/><sp/>from<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/><sp/><sp/>Byte<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>3<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>5<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>6</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>U+0000<sp/><sp/><sp/><sp/><sp/><sp/>U+007F<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xxxxxxx</highlight></codeline>
<codeline lineno="1055"><highlight class="comment">11<sp/><sp/>U+0080<sp/><sp/><sp/><sp/><sp/><sp/>U+07FF<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>110xxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1056"><highlight class="comment">16<sp/><sp/>U+0800<sp/><sp/><sp/><sp/><sp/><sp/>U+FFFF<sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1110xxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1057"><highlight class="comment">21<sp/><sp/>U+10000<sp/><sp/><sp/><sp/><sp/>U+1FFFFF<sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>11110xxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1058"><highlight class="comment">26<sp/><sp/>U+200000<sp/><sp/><sp/><sp/>U+3FFFFFF<sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/>111110xx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1059"><highlight class="comment">31<sp/><sp/>U+4000000<sp/><sp/><sp/>U+7FFFFFFF<sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1111110x<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/></highlight></codeline>
<codeline lineno="1060"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawUTF8(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_utf8_next;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_draw_string(u8g2,<sp/>x,<sp/>y,<sp/>str);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawUTF8X2(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_utf8_next;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_draw_string_2x(u8g2,<sp/>x,<sp/>y,<sp/>str);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawExtendedUTF8(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>uint8_t<sp/>to_left,<sp/>u8g2_kerning_t<sp/>*kerning,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_utf8_next;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e_prev<sp/>=<sp/>0x0ffff;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>delta,<sp/>sum,<sp/>k;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>u8x8_utf8_init(u8g2_GetU8x8(u8g2));</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*str);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>u8g2_GetGlyphWidth(u8g2,<sp/>e);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to_left<sp/>)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>u8g2_GetKerning(u8g2,<sp/>kerning,<sp/>e,<sp/>e_prev);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>k;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>u8g2_GetKerning(u8g2,<sp/>kerning,<sp/>e_prev,<sp/>e);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>k;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e_prev<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawGlyph(u8g2,<sp/>x,<sp/>y,<sp/>e);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to_left<sp/>)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>k;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal">u8g2_uint_t<sp/>u8g2_DrawExtUTF8(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>uint8_t<sp/>to_left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*kerning_table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_utf8_next;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e_prev<sp/>=<sp/>0x0ffff;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>delta,<sp/>sum,<sp/>k;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>u8x8_utf8_init(u8g2_GetU8x8(u8g2));</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*str);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>u8g2_GetGlyphWidth(u8g2,<sp/>e);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to_left<sp/>)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>u8g2_GetKerningByTable(u8g2,<sp/>kerning_table,<sp/>e,<sp/>e_prev);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>k;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>u8g2_GetKerningByTable(u8g2,<sp/>kerning_table,<sp/>e_prev,<sp/>e);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>k;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e_prev<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to_left<sp/>)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_DrawGlyph(u8g2,<sp/>x,<sp/>y,<sp/>e);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to_left<sp/>)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//x<sp/>+=<sp/>delta;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//x<sp/>-=<sp/>k;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment">/*===============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>set<sp/>ascent/descent<sp/>for<sp/>reference<sp/>point<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_UpdateRefHeight(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_ref_ascent<sp/>=<sp/>u8g2-&gt;font_info.ascent_A;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_ref_descent<sp/>=<sp/>u8g2-&gt;font_info.descent_g;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font_height_mode<sp/>==<sp/>U8G2_FONT_HEIGHT_MODE_TEXT<sp/>)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font_height_mode<sp/>==<sp/>U8G2_FONT_HEIGHT_MODE_XTEXT<sp/>)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font_ref_ascent<sp/>&lt;<sp/>u8g2-&gt;font_info.ascent_para<sp/>)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;font_ref_ascent<sp/>=<sp/>u8g2-&gt;font_info.ascent_para;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font_ref_descent<sp/>&gt;<sp/>u8g2-&gt;font_info.descent_para<sp/>)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;font_ref_descent<sp/>=<sp/>u8g2-&gt;font_info.descent_para;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font_ref_ascent<sp/>&lt;<sp/>u8g2-&gt;font_info.max_char_height+u8g2-&gt;font_info.y_offset<sp/>)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;font_ref_ascent<sp/>=<sp/>u8g2-&gt;font_info.max_char_height+u8g2-&gt;font_info.y_offset;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font_ref_descent<sp/>&gt;<sp/>u8g2-&gt;font_info.y_offset<sp/>)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;font_ref_descent<sp/>=<sp/>u8g2-&gt;font_info.y_offset;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontRefHeightText(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_height_mode<sp/>=<sp/>U8G2_FONT_HEIGHT_MODE_TEXT;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>u8g2_UpdateRefHeight(u8g2);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontRefHeightExtendedText(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_height_mode<sp/>=<sp/>U8G2_FONT_HEIGHT_MODE_XTEXT;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>u8g2_UpdateRefHeight(u8g2);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontRefHeightAll(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_height_mode<sp/>=<sp/>U8G2_FONT_HEIGHT_MODE_ALL;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>u8g2_UpdateRefHeight(u8g2);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">/*===============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>callback<sp/>procedures<sp/>to<sp/>correct<sp/>the<sp/>y<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal">u8g2_uint_t<sp/>u8g2_font_calc_vref_font(U8X8_UNUSED<sp/>u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontPosBaseline(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_calc_vref<sp/>=<sp/>u8g2_font_calc_vref_font;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal">u8g2_uint_t<sp/>u8g2_font_calc_vref_bottom(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(u8g2_uint_t)(u8g2-&gt;font_ref_descent);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontPosBottom(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_calc_vref<sp/>=<sp/>u8g2_font_calc_vref_bottom;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal">u8g2_uint_t<sp/>u8g2_font_calc_vref_top(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>tmp;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reference<sp/>pos<sp/>is<sp/>one<sp/>pixel<sp/>above<sp/>the<sp/>upper<sp/>edge<sp/>of<sp/>the<sp/>reference<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>(u8g2_uint_t)(u8g2-&gt;font_ref_ascent);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>tmp++;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontPosTop(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_calc_vref<sp/>=<sp/>u8g2_font_calc_vref_top;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal">u8g2_uint_t<sp/>u8g2_font_calc_vref_center(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>int8_t<sp/>tmp;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>u8g2-&gt;font_ref_ascent;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>tmp<sp/>-=<sp/>u8g2-&gt;font_ref_descent;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>tmp<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/>tmp<sp/>+=<sp/>u8g2-&gt;font_ref_descent;<sp/><sp/></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontPosCenter(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_calc_vref<sp/>=<sp/>u8g2_font_calc_vref_center;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">/*===============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFont(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><sp/>*font)</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font<sp/>!=<sp/>font<sp/>)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/><sp/>__unix__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>u8g2-&gt;last_font_data<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>u8g2-&gt;last_unicode<sp/>=<sp/>0x0ffff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="comment">//#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2-&gt;font<sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_read_font_info(&amp;(u8g2-&gt;font_info),<sp/>font);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_UpdateRefHeight(u8g2);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>u8g2_SetFontPosBaseline(u8g2);<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>removed<sp/>with<sp/>issue<sp/>195<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="comment">/*===============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8g2_is_all_valid(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>U8G2_NOINLINE;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8g2_is_all_valid(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>u8x8_utf8_init(u8g2_GetU8x8(u8g2));</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*str);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2_font_get_glyph_data(u8g2,<sp/>e)<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal">uint8_t<sp/>u8g2_IsAllValidUTF8(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_utf8_next;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_is_all_valid(u8g2,<sp/>str);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>string<sp/>calculation<sp/>is<sp/>stilll<sp/>not<sp/>100%<sp/>perfect<sp/>as<sp/>it<sp/>addes<sp/>the<sp/>initial<sp/>string<sp/>offset<sp/>to<sp/>the<sp/>overall<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_string_width(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>U8G2_NOINLINE;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_string_width(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/><sp/>w,<sp/>dx;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_BALANCED_STR_WIDTH_CALCULATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>int8_t<sp/>initial_x_offset<sp/>=<sp/>-64;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_decode.glyph_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>u8x8_utf8_init(u8g2_GetU8x8(u8g2));</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>total<sp/>width<sp/>to<sp/>zero,<sp/>this<sp/>will<sp/>be<sp/>expanded<sp/>during<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;str=&lt;%s&gt;\n&quot;,<sp/>str);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*str);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>u8g2_GetGlyphWidth(u8g2,<sp/>e);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delta<sp/>x<sp/>value<sp/>of<sp/>the<sp/>glyph,<sp/>side<sp/>effect:<sp/>updates<sp/>u8g2-&gt;glyph_x_offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_BALANCED_STR_WIDTH_CALCULATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>initial_x_offset<sp/>==<sp/>-64<sp/>)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_x_offset<sp/>=<sp/>u8g2-&gt;glyph_x_offset;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;&apos;%c&apos;<sp/>x=%d<sp/>dx=%d<sp/>w=%d<sp/>io=%d<sp/>&quot;,<sp/>e,<sp/>u8g2-&gt;glyph_x_offset,<sp/>dx,<sp/>u8g2-&gt;font_decode.glyph_width,<sp/>initial_x_offset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>dx;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>adjust<sp/>the<sp/>last<sp/>glyph,<sp/>check<sp/>for<sp/>issue<sp/>#16:<sp/>do<sp/>not<sp/>adjust<sp/>if<sp/>width<sp/>is<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;font_decode.glyph_width<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;string<sp/>width<sp/>adjust<sp/>dx=%d<sp/>glyph_width=%d<sp/>x-offset=%d\n&quot;,<sp/>dx,<sp/>u8g2-&gt;font_decode.glyph_width,<sp/>u8g2-&gt;glyph_x_offset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>-=<sp/>dx;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>u8g2-&gt;font_decode.glyph_width;<sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>real<sp/>pixel<sp/>width<sp/>of<sp/>the<sp/>glyph,<sp/>sideeffect<sp/>of<sp/>GetGlyphWidth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>#46:<sp/>we<sp/>have<sp/>to<sp/>add<sp/>the<sp/>x<sp/>offset<sp/>also<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>u8g2-&gt;glyph_x_offset;<sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>value<sp/>is<sp/>set<sp/>as<sp/>a<sp/>side<sp/>effect<sp/>of<sp/>u8g2_GetGlyphWidth()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_BALANCED_STR_WIDTH_CALCULATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>https://github.com/olikraus/u8g2/issues/1561<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>initial_x_offset<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w+=initial_x_offset;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;w=%d<sp/>\n&quot;,<sp/>w);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;<sp/><sp/></highlight></codeline>
<codeline lineno="1378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal">int8_t<sp/>u8g2_GetXOffsetGlyph(u8g2_t<sp/>*u8g2,<sp/>uint16_t<sp/>encoding)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>u8g2_GetGlyphWidth(u8g2,<sp/>encoding);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delta<sp/>x<sp/>value<sp/>of<sp/>the<sp/>glyph,<sp/>side<sp/>effect:<sp/>updates<sp/>u8g2-&gt;glyph_x_offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2-&gt;glyph_x_offset;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal">int8_t<sp/>u8g2_GetXOffsetUTF8(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*utf8)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>uint16_t<sp/>e;<sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>u8x8_utf8_init(u8g2_GetU8x8(u8g2));</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>encoding<sp/>from<sp/>UTF8<sp/>byte<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u8x8_utf8_next(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*utf8);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e<sp/>&lt;<sp/>0x0fffe<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>0x0fffe<sp/>means:<sp/>just<sp/>continue<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>utf8++;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_GetXOffsetGlyph(u8g2,<sp/>e);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_GetGlyphHorizontalProperties(u8g2_t<sp/>*u8g2,<sp/>uint16_t<sp/>requested_encoding,<sp/>uint8_t<sp/>*w,<sp/>int8_t<sp/>*ox,<sp/>int8_t<sp/>*dx)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*glyph_data<sp/>=<sp/>u8g2_font_get_glyph_data(u8g2,<sp/>requested_encoding);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glyph_data<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>u8g2_font_setup_decode(u8g2,<sp/>glyph_data);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>*w<sp/>=<sp/>u8g2-&gt;font_decode.glyph_width;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>*ox<sp/>=<sp/><sp/>u8g2_font_decode_get_signed_bits(&amp;(u8g2-&gt;font_decode),<sp/>u8g2-&gt;font_info.bits_per_char_x);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>u8g2_font_decode_get_signed_bits(&amp;(u8g2-&gt;font_decode),<sp/>u8g2-&gt;font_info.bits_per_char_y);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>*dx<sp/>=<sp/>u8g2_font_decode_get_signed_bits(&amp;(u8g2-&gt;font_decode),<sp/>u8g2-&gt;font_info.bits_per_delta_x);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>u8g<sp/>compatible<sp/>GetStrX<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal">int8_t<sp/>u8g2_GetStrX(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>uint8_t<sp/>w;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>int8_t<sp/>dx;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>int8_t<sp/>ox<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>u8g2_GetGlyphHorizontalProperties(u8g2,<sp/>*s,<sp/>&amp;w,<sp/>&amp;ox,<sp/>&amp;dx);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ox;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1427"><highlight class="comment">Warning:<sp/>This<sp/>function<sp/>needs<sp/>to<sp/>be<sp/>fixed.<sp/>I<sp/>think<sp/>it<sp/>was<sp/>taken<sp/>over<sp/>from<sp/>u8glib,<sp/>but<sp/>not<sp/>fixed<sp/>as<sp/>of<sp/>now<sp/></highlight></codeline>
<codeline lineno="1428"><highlight class="comment">The<sp/>main<sp/>difference<sp/>for<sp/>this<sp/>procedure<sp/>compared<sp/>to<sp/>the<sp/>normal<sp/>get<sp/>width,<sp/>should<sp/>be,<sp/>that<sp/>the<sp/>initial</highlight></codeline>
<codeline lineno="1429"><highlight class="comment">offset<sp/>is<sp/>removed</highlight></codeline>
<codeline lineno="1430"><highlight class="comment"></highlight></codeline>
<codeline lineno="1431"><highlight class="comment">Idea:<sp/>for<sp/>the<sp/>user<sp/>interface<sp/>it<sp/>probably<sp/>would<sp/>be<sp/>better<sp/>to<sp/>add<sp/>the<sp/>xoffset<sp/>of<sp/>the<sp/>first<sp/>char<sp/>to<sp/>the<sp/>end,<sp/>so<sp/>that<sp/>the<sp/>overall<sp/>word<sp/>looks<sp/>better.</highlight></codeline>
<codeline lineno="1432"><highlight class="comment">Maybe<sp/>then<sp/>the<sp/>procedure<sp/>should<sp/>be<sp/>called<sp/>differently,<sp/>maybe<sp/>balanced<sp/>width<sp/>instead<sp/>of<sp/>exact<sp/>width</highlight></codeline>
<codeline lineno="1433"><highlight class="comment"></highlight></codeline>
<codeline lineno="1434"><highlight class="comment">u8g2_calculate_exact_string_width<sp/>is<sp/>now<sp/>OBSOLETE,<sp/>instead<sp/>the<sp/>above<sp/>str<sp/>width<sp/>calculation<sp/>has<sp/>been<sp/>updated:</highlight></codeline>
<codeline lineno="1435"><highlight class="comment">https://github.com/olikraus/u8g2/issues/1561</highlight></codeline>
<codeline lineno="1436"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OBSOLETE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8g2_uint_t<sp/>u8g2_calculate_exact_string_width(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>uint16_t<sp/>enc;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/><sp/>w;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cnt;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>uint8_t<sp/>gw;<sp/></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>int8_t<sp/>ox,<sp/>dx;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>total<sp/>minimal<sp/>width<sp/>to<sp/>zero,<sp/>this<sp/>will<sp/>be<sp/>expanded<sp/>during<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>empty<sp/>string,<sp/>width<sp/>is<sp/>already<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>enc<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*s);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>enc<sp/>==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>enc<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>glyph<sp/>properties<sp/>of<sp/>the<sp/>first<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_GetGlyphHorizontalProperties(u8g2,<sp/>enc,<sp/>&amp;gw,<sp/>&amp;ox,<sp/>&amp;dx);<sp/><sp/></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>&gt;<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gw;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>strlen(s)<sp/>==<sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>width(s[0])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>strlen(s)<sp/>==<sp/>2:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>-<sp/>offx(s[0])<sp/>+<sp/>deltax(s[0])<sp/>+<sp/>offx(s[1])<sp/>+<sp/>width(s[1])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>strlen(s)<sp/>==<sp/>3:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>-<sp/>offx(s[0])<sp/>+<sp/>deltax(s[0])<sp/>+<sp/>deltax(s[1])<sp/>+<sp/>offx(s[2])<sp/>+<sp/>width(s[2])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>that<sp/>the<sp/>string<sp/>has<sp/>size<sp/>2<sp/>or<sp/>more,<sp/>than<sp/>start<sp/>with<sp/>negative<sp/>offset-x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>string<sp/>with<sp/>size<sp/>1,<sp/>this<sp/>will<sp/>be<sp/>nullified<sp/>after<sp/>the<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>-ox;<sp/><sp/></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>enc<sp/>=<sp/>u8g2-&gt;u8x8.next_cb(u8g2_GetU8x8(u8g2),<sp/>(uint8_t)*str);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>enc==<sp/>0x0ffff<sp/>)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>enc<sp/>!=<sp/>0x0fffe<sp/>)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_GetGlyphHorizontalProperties(u8g2,<sp/>enc,<sp/>&amp;gw,<sp/>&amp;ox,<sp/>&amp;dx);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>are<sp/>still<sp/>more<sp/>characters,<sp/>add<sp/>the<sp/>delta<sp/>to<sp/>the<sp/>next<sp/>glyph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>dx;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>finally<sp/>calculate<sp/>the<sp/>width<sp/>of<sp/>the<sp/>last<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>here<sp/>is<sp/>another<sp/>exception,<sp/>if<sp/>the<sp/>last<sp/>char<sp/>is<sp/>a<sp/>blank,<sp/>use<sp/>the<sp/>dx<sp/>value<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gw<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>-=<sp/>dx;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>last<sp/>dx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>g<sp/>was<sp/>not<sp/>updated<sp/>in<sp/>the<sp/>for<sp/>loop<sp/>(strlen()<sp/>==<sp/>1),<sp/>then<sp/>the<sp/>initial<sp/>offset<sp/>x<sp/>gets<sp/>removed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>gw;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>ox;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//w<sp/>+=<sp/>dx;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal">u8g2_uint_t<sp/>u8g2_GetStrWidth(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_ascii_next;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_string_width(u8g2,<sp/>s);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OBSOLETE</highlight></codeline>
<codeline lineno="1531"><highlight class="comment">u8g2_uint_t<sp/>u8g2_GetExactStrWidth(u8g2_t<sp/>*u8g2,<sp/>const<sp/>char<sp/>*s)</highlight></codeline>
<codeline lineno="1532"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_ascii_next;</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"><sp/><sp/>return<sp/>u8g2_calculate_exact_string_width(u8g2,<sp/>s);</highlight></codeline>
<codeline lineno="1535"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1536"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1539"><highlight class="comment">source:<sp/>https://en.wikipedia.org/wiki/UTF-8</highlight></codeline>
<codeline lineno="1540"><highlight class="comment">Bits<sp/><sp/><sp/><sp/>from<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/><sp/><sp/>Byte<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>3<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>5<sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>6</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>U+0000<sp/><sp/><sp/><sp/><sp/><sp/>U+007F<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xxxxxxx</highlight></codeline>
<codeline lineno="1542"><highlight class="comment">11<sp/><sp/>U+0080<sp/><sp/><sp/><sp/><sp/><sp/>U+07FF<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>110xxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1543"><highlight class="comment">16<sp/><sp/>U+0800<sp/><sp/><sp/><sp/><sp/><sp/>U+FFFF<sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1110xxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1544"><highlight class="comment">21<sp/><sp/>U+10000<sp/><sp/><sp/><sp/><sp/>U+1FFFFF<sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>11110xxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1545"><highlight class="comment">26<sp/><sp/>U+200000<sp/><sp/><sp/><sp/>U+3FFFFFF<sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/>111110xx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx</highlight></codeline>
<codeline lineno="1546"><highlight class="comment">31<sp/><sp/>U+4000000<sp/><sp/><sp/>U+7FFFFFFF<sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1111110x<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/><sp/><sp/>10xxxxxx<sp/><sp/></highlight></codeline>
<codeline lineno="1547"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal">u8g2_uint_t<sp/>u8g2_GetUTF8Width(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>u8g2-&gt;u8x8.next_cb<sp/>=<sp/>u8x8_utf8_next;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8g2_string_width(u8g2,<sp/>str);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetFontDirection(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_FONT_ROTATION<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>u8g2-&gt;font_decode.dir<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/helper/U8g2/clib/u8g2_font.c"/>
  </compounddef>
</doxygen>
