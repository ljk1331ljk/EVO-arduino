<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_evo_motor" kind="class" language="C++" prot="public">
    <compoundname>EvoMotor</compoundname>
    <includes refid="_evo_motor_8h" local="no">EvoMotor.h</includes>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_evo_motor_1a73db3936299272b483a26532132d478a" prot="private" static="no" strong="no">
        <type></type>
        <name>runMode</name>
        <qualifiedname>EvoMotor::runMode</qualifiedname>
        <enumvalue id="class_evo_motor_1a73db3936299272b483a26532132d478aa58d0946dde6fd6e5cd14dfc8f9cc6c1c" prot="private">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_evo_motor_1a73db3936299272b483a26532132d478aaadbbe1b8f018558d016e1582080c20b9" prot="private">
          <name>TIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_evo_motor_1a73db3936299272b483a26532132d478aa6738118ee65006913c115993164e66cc" prot="private">
          <name>COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_evo_motor_1a73db3936299272b483a26532132d478aa2f54358fd0404e888961fb4ce078eed5" prot="private">
          <name>ANGLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_evo_motor_1a73db3936299272b483a26532132d478aa78da84a1ee15ab422e3570edb55243f3" prot="private">
          <name>TARGET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_evo_motor_1a73db3936299272b483a26532132d478aa3a17dbbe4a027e7ffb441e242b4e034d" prot="private">
          <name>STALLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_evo_motor_1a73db3936299272b483a26532132d478aaf451fd671e65a3d2366d87308d89b626" prot="private">
          <name>HOLDPOS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="73" column="5" bodyfile="src/motors/EvoMotor.h" bodystart="74" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_evo_motor_1ad7528a12af73edb6d087385ca0292345" prot="private" static="no" mutable="no">
        <type>enum EvoMotor::runMode</type>
        <definition>enum EvoMotor::runMode EvoMotor::_runMode</definition>
        <argsstring></argsstring>
        <name>_runMode</name>
        <qualifiedname>EvoMotor::_runMode</qualifiedname>
        <initializer>= runMode::NONE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="82" column="15"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1af803a152981207abe69a4a01a76f6188" prot="private" static="no" mutable="no">
        <type><ref refid="_evo_motor_8h_1a3f29f8952bca737db7bc832cd0a6d6f3" kindref="member">MotorType</ref></type>
        <definition>MotorType EvoMotor::_motorType</definition>
        <argsstring></argsstring>
        <name>_motorType</name>
        <qualifiedname>EvoMotor::_motorType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="84" column="15" bodyfile="src/motors/EvoMotor.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a8ad4eb02c94296a3239bba8f25446749" prot="private" static="no" mutable="no">
        <type><ref refid="_evo_motor_8h_1ab699736bb74479e355616050ebf95493" kindref="member">MotorPort</ref></type>
        <definition>MotorPort EvoMotor::_motorPort</definition>
        <argsstring></argsstring>
        <name>_motorPort</name>
        <qualifiedname>EvoMotor::_motorPort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="85" column="15" bodyfile="src/motors/EvoMotor.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a9eebf6d5e0644b34a6fe1a077c4fda28" prot="private" static="no" mutable="no">
        <type><ref refid="struct_motor_pins" kindref="compound">MotorPins</ref></type>
        <definition>MotorPins EvoMotor::_motorPins</definition>
        <argsstring></argsstring>
        <name>_motorPins</name>
        <qualifiedname>EvoMotor::_motorPins</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="86" column="15" bodyfile="src/motors/EvoMotor.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a45ff9c4a56723f79f4918cd80024079a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_maxSpd</definition>
        <argsstring></argsstring>
        <name>_maxSpd</name>
        <qualifiedname>EvoMotor::_maxSpd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="88" column="9" bodyfile="src/motors/EvoMotor.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a987a83967d3fdce40690f2117fe5af34" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_minSpd</definition>
        <argsstring></argsstring>
        <name>_minSpd</name>
        <qualifiedname>EvoMotor::_minSpd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="88" column="17" bodyfile="src/motors/EvoMotor.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a227a9e026f6cd4d6f1926f37a9c51429" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EvoMotor::_motorFlip</definition>
        <argsstring></argsstring>
        <name>_motorFlip</name>
        <qualifiedname>EvoMotor::_motorFlip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="89" column="10" bodyfile="src/motors/EvoMotor.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a61f7bd8bdab9131b65fbb87b88750b6e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EvoMotor::_encoderAvailable</definition>
        <argsstring></argsstring>
        <name>_encoderAvailable</name>
        <qualifiedname>EvoMotor::_encoderAvailable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="89" column="21" bodyfile="src/motors/EvoMotor.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1adfe03a2c525bcf3abb03b1fe76f04137" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_countPerRevolution</definition>
        <argsstring></argsstring>
        <name>_countPerRevolution</name>
        <qualifiedname>EvoMotor::_countPerRevolution</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="90" column="9" bodyfile="src/motors/EvoMotor.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a922051c1e7fe49603816b6f7988e1c03" prot="private" static="no" mutable="no">
        <type><ref refid="_evo_motor_8h_1a3fd9015b7911abf9a34b57933dadd40f" kindref="member">MotorStop</ref></type>
        <definition>MotorStop EvoMotor::_motorState</definition>
        <argsstring></argsstring>
        <name>_motorState</name>
        <qualifiedname>EvoMotor::_motorState</qualifiedname>
        <initializer>= <ref refid="_evo_motor_8h_1a3fd9015b7911abf9a34b57933dadd40fae509e364ab4c8f25b108b70b0840b142" kindref="member">COAST</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="93" column="15" bodyfile="src/motors/EvoMotor.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1ad51b18a8374858b709b6fe00413c294f" prot="private" static="no" mutable="no">
        <type><ref refid="_evo_motor_8h_1a3fd9015b7911abf9a34b57933dadd40f" kindref="member">MotorStop</ref></type>
        <definition>MotorStop EvoMotor::_motorStopBehaviour</definition>
        <argsstring></argsstring>
        <name>_motorStopBehaviour</name>
        <qualifiedname>EvoMotor::_motorStopBehaviour</qualifiedname>
        <initializer>= <ref refid="_evo_motor_8h_1a3fd9015b7911abf9a34b57933dadd40fa8b23c50cc938e0b366df8d8eeeb1bf9f" kindref="member">BRAKE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="93" column="28" bodyfile="src/motors/EvoMotor.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a7dc8f8eddf0b4eb7ae5a2ebced686ab9" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t EvoMotor::_holdPower</definition>
        <argsstring></argsstring>
        <name>_holdPower</name>
        <qualifiedname>EvoMotor::_holdPower</qualifiedname>
        <initializer>= 2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="94" column="14" bodyfile="src/motors/EvoMotor.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a945d9f030757b549514b3d3dd8448b1d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_stallThreshold</definition>
        <argsstring></argsstring>
        <name>_stallThreshold</name>
        <qualifiedname>EvoMotor::_stallThreshold</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="95" column="9" bodyfile="src/motors/EvoMotor.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1add89206efb38fb7068411866738d5c3a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_targetValue</definition>
        <argsstring></argsstring>
        <name>_targetValue</name>
        <qualifiedname>EvoMotor::_targetValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="96" column="9" bodyfile="src/motors/EvoMotor.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1ae04be6cbb1ddeea9dc7264ff5584be49" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_targetSpeed</definition>
        <argsstring></argsstring>
        <name>_targetSpeed</name>
        <qualifiedname>EvoMotor::_targetSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="96" column="22" bodyfile="src/motors/EvoMotor.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1ae6bf083221377281e92e447b73255d3b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_targetThen</definition>
        <argsstring></argsstring>
        <name>_targetThen</name>
        <qualifiedname>EvoMotor::_targetThen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="96" column="35" bodyfile="src/motors/EvoMotor.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a2c7dae0934c5bf9c19299ad4a29b6ab0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_targetEncoder</definition>
        <argsstring></argsstring>
        <name>_targetEncoder</name>
        <qualifiedname>EvoMotor::_targetEncoder</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="96" column="47" bodyfile="src/motors/EvoMotor.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a1b9ce34ac8557b19a621368e11a774da" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EvoMotor::_measuredSpeed</definition>
        <argsstring></argsstring>
        <name>_measuredSpeed</name>
        <qualifiedname>EvoMotor::_measuredSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="97" column="9" bodyfile="src/motors/EvoMotor.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a398576331671dc23385c5646cd484a43" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float EvoMotor::_kp</definition>
        <argsstring></argsstring>
        <name>_kp</name>
        <qualifiedname>EvoMotor::_kp</qualifiedname>
        <initializer>= 2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="98" column="11" bodyfile="src/motors/EvoMotor.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a9d61b30e2c06c59836d27b3aa66c92b9" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float EvoMotor::_kd</definition>
        <argsstring></argsstring>
        <name>_kd</name>
        <qualifiedname>EvoMotor::_kd</qualifiedname>
        <initializer>= 5000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="98" column="16" bodyfile="src/motors/EvoMotor.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1abc4f6df47f14fdc8ffcab6b6b36bab4a" prot="private" static="no" mutable="no">
        <type>ESP32Encoder</type>
        <definition>ESP32Encoder EvoMotor::encoder</definition>
        <argsstring></argsstring>
        <name>encoder</name>
        <qualifiedname>EvoMotor::encoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="100" column="18" bodyfile="src/motors/EvoMotor.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1acbe9813880b50914240ba9e0b94f1181" prot="private" static="no" mutable="no">
        <type>EvoPWMDriver &amp;</type>
        <definition>EvoPWMDriver&amp; EvoMotor::driver</definition>
        <argsstring></argsstring>
        <name>driver</name>
        <qualifiedname>EvoMotor::driver</qualifiedname>
        <initializer>= EvoPWMDriver::getInstance()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="101" column="18" bodyfile="src/motors/EvoMotor.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a78012d47205614ef2c937abb59130a06" prot="private" static="no" mutable="no">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t EvoMotor::motorTaskHandle</definition>
        <argsstring></argsstring>
        <name>motorTaskHandle</name>
        <qualifiedname>EvoMotor::motorTaskHandle</qualifiedname>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="102" column="18" bodyfile="src/motors/EvoMotor.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_evo_motor_1a67509d619ff8125c587e232c156ea891" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EvoMotor::motorTaskSuspended</definition>
        <argsstring></argsstring>
        <name>motorTaskSuspended</name>
        <qualifiedname>EvoMotor::motorTaskSuspended</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="103" column="10" bodyfile="src/motors/EvoMotor.h" bodystart="103" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_evo_motor_1a17bbbf5989c1ea97b6ce9be0221432a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::pauseMotorTask</definition>
        <argsstring>()</argsstring>
        <name>pauseMotorTask</name>
        <qualifiedname>EvoMotor::pauseMotorTask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1aaf62474c9bc373b7543b2295a1a8166c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::resumeMotorTask</definition>
        <argsstring>()</argsstring>
        <name>resumeMotorTask</name>
        <qualifiedname>EvoMotor::resumeMotorTask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a451bc58fa07cf9071844b9869e996505" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::move</definition>
        <argsstring>(int speed)</argsstring>
        <name>move</name>
        <qualifiedname>EvoMotor::move</qualifiedname>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1afd99ccce7555f3aa9567dc0c4efba568" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setParameters</definition>
        <argsstring>(MotorPort motorPort, bool motorFlip, int maxSpd, int minSpd, float kp, float kd, bool encoderAvailable, int countPerRevolution=0)</argsstring>
        <name>setParameters</name>
        <qualifiedname>EvoMotor::setParameters</qualifiedname>
        <param>
          <type><ref refid="_evo_motor_8h_1ab699736bb74479e355616050ebf95493" kindref="member">MotorPort</ref></type>
          <declname>motorPort</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>motorFlip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSpd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minSpd</declname>
        </param>
        <param>
          <type>float</type>
          <declname>kp</declname>
        </param>
        <param>
          <type>float</type>
          <declname>kd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>encoderAvailable</declname>
        </param>
        <param>
          <type>int</type>
          <declname>countPerRevolution</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="109" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_evo_motor_1a17d42e0b08c1222eca48678b7e37943c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void EvoMotor::motorControlTask</definition>
        <argsstring>(void *parameter)</argsstring>
        <name>motorControlTask</name>
        <qualifiedname>EvoMotor::motorControlTask</qualifiedname>
        <param>
          <type>void *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="106" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a2baf379578eebf7815971d1a4526cf2e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void EvoMotor::motorSpeedTask</definition>
        <argsstring>(void *parameter)</argsstring>
        <name>motorSpeedTask</name>
        <qualifiedname>EvoMotor::motorSpeedTask</qualifiedname>
        <param>
          <type>void *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="107" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_evo_motor_1a6346f5971155f78a2efd2e51fd77b31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EvoMotor::EvoMotor</definition>
        <argsstring>(MotorPort motorPort, MotorType motorType=GENERICWITHENCODER, bool motorFlip=false)</argsstring>
        <name>EvoMotor</name>
        <qualifiedname>EvoMotor::EvoMotor</qualifiedname>
        <param>
          <type><ref refid="_evo_motor_8h_1ab699736bb74479e355616050ebf95493" kindref="member">MotorPort</ref></type>
          <declname>motorPort</declname>
        </param>
        <param>
          <type><ref refid="_evo_motor_8h_1a3f29f8952bca737db7bc832cd0a6d6f3" kindref="member">MotorType</ref></type>
          <declname>motorType</declname>
          <defval><ref refid="_evo_motor_8h_1a3f29f8952bca737db7bc832cd0a6d6f3a53a00f62d33156cf1939616942f3fde7" kindref="member">GENERICWITHENCODER</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>motorFlip</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="class_evo_motor" kindref="compound">EvoMotor</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>motorPort</parametername>
</parameternamelist>
<parameterdescription>
<para>The motor port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>motorType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of motor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>motorFlip</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the motor direction should be flipped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="118" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1abc3637db9cefe0fdfd6a99c72c0b0c1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>EvoMotor::begin</qualifiedname>
        <briefdescription>
<para>Initializes the motor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="123" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a9fa8b158812910747a764639a6134113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::flipEncoderDirection</definition>
        <argsstring>(bool flip)</argsstring>
        <name>flipEncoderDirection</name>
        <qualifiedname>EvoMotor::flipEncoderDirection</qualifiedname>
        <param>
          <type>bool</type>
          <declname>flip</declname>
        </param>
        <briefdescription>
<para>Flips the direction of the encoder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flip</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the encoder direction should be flipped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1abc8d2428917b40c1420706b4f0162232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setSpeedLimit</definition>
        <argsstring>(int maxSpd, int minSpd)</argsstring>
        <name>setSpeedLimit</name>
        <qualifiedname>EvoMotor::setSpeedLimit</qualifiedname>
        <param>
          <type>int</type>
          <declname>maxSpd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minSpd</declname>
        </param>
        <briefdescription>
<para>Sets the minimum and maximum speed of the motor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxSpd</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum speed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minSpd</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum speed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1aafbf01e74f7d4bf03c1c7615cf9b8c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::getSpeedLimit</definition>
        <argsstring>(int *maxSpd, int *minSpd)</argsstring>
        <name>getSpeedLimit</name>
        <qualifiedname>EvoMotor::getSpeedLimit</qualifiedname>
        <param>
          <type>int *</type>
          <declname>maxSpd</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minSpd</declname>
        </param>
        <briefdescription>
<para>Gets the speed limits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxSpd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the maximum speed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minSpd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the minimum speed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="143" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1abbcad00bdaf3275b0164ecfa13ad966e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setEncoderAvailable</definition>
        <argsstring>(bool avail)</argsstring>
        <name>setEncoderAvailable</name>
        <qualifiedname>EvoMotor::setEncoderAvailable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>avail</declname>
        </param>
        <briefdescription>
<para>Sets encoder availability. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="148" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a944778da0033279bceb0026902577345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoMotor::isEncoderAvailable</definition>
        <argsstring>()</argsstring>
        <name>isEncoderAvailable</name>
        <qualifiedname>EvoMotor::isEncoderAvailable</qualifiedname>
        <briefdescription>
<para>Checks if encoder is available. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if encoder is available, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="154" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a5b2f286924597207a538ee522cbdda4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setCountPerRevolution</definition>
        <argsstring>(int countPerRevolution)</argsstring>
        <name>setCountPerRevolution</name>
        <qualifiedname>EvoMotor::setCountPerRevolution</qualifiedname>
        <param>
          <type>int</type>
          <declname>countPerRevolution</declname>
        </param>
        <briefdescription>
<para>Sets encoder count per revolution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="159" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1ab2e17c576940847b38a02c923859d3cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EvoMotor::getCountPerRevolution</definition>
        <argsstring>()</argsstring>
        <name>getCountPerRevolution</name>
        <qualifiedname>EvoMotor::getCountPerRevolution</qualifiedname>
        <briefdescription>
<para>Gets encoder count per revolution. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The count per revolution. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="165" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a81a3f806b55458d700aafc6c5d5f21d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setCount</definition>
        <argsstring>(int count)</argsstring>
        <name>setCount</name>
        <qualifiedname>EvoMotor::setCount</qualifiedname>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Sets the encoder count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="170" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1ad3859f851356b2e878408fc06c036a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EvoMotor::getCount</definition>
        <argsstring>()</argsstring>
        <name>getCount</name>
        <qualifiedname>EvoMotor::getCount</qualifiedname>
        <briefdescription>
<para>Gets the encoder count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The encoder count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="176" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1ae16e2596364e4322edf40e9cda5a768a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::resetCount</definition>
        <argsstring>()</argsstring>
        <name>resetCount</name>
        <qualifiedname>EvoMotor::resetCount</qualifiedname>
        <briefdescription>
<para>Resets the encoder count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="181" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a49a24183c8f1684114e246e2b797ebb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setAngle</definition>
        <argsstring>(int degrees)</argsstring>
        <name>setAngle</name>
        <qualifiedname>EvoMotor::setAngle</qualifiedname>
        <param>
          <type>int</type>
          <declname>degrees</declname>
        </param>
        <briefdescription>
<para>Sets the current motor angle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="186" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a28faa613ee6d55bc6d06f40a7c669125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EvoMotor::getAngle</definition>
        <argsstring>()</argsstring>
        <name>getAngle</name>
        <qualifiedname>EvoMotor::getAngle</qualifiedname>
        <briefdescription>
<para>Gets the current motor angle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The angle in degrees. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="192" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a47281b8e341fb6349fffbae7ebcebe90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::resetAngle</definition>
        <argsstring>()</argsstring>
        <name>resetAngle</name>
        <qualifiedname>EvoMotor::resetAngle</qualifiedname>
        <briefdescription>
<para>Resets the motor angle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="197" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a5eb90564a2077ec6938a2dbe9739b03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EvoMotor::isStalled</definition>
        <argsstring>()</argsstring>
        <name>isStalled</name>
        <qualifiedname>EvoMotor::isStalled</qualifiedname>
        <briefdescription>
<para>Checks if the motor is stalled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if stalled, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="203" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1aa49f3e7a159936f700e3623ee987da7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setStallThreshold</definition>
        <argsstring>(int threshold)</argsstring>
        <name>setStallThreshold</name>
        <qualifiedname>EvoMotor::setStallThreshold</qualifiedname>
        <param>
          <type>int</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Sets motor stall thresholds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="208" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1adf9244197dd011acb9251f255e575109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setStopBehaviour</definition>
        <argsstring>(MotorStop motorStopState)</argsstring>
        <name>setStopBehaviour</name>
        <qualifiedname>EvoMotor::setStopBehaviour</qualifiedname>
        <param>
          <type><ref refid="_evo_motor_8h_1a3fd9015b7911abf9a34b57933dadd40f" kindref="member">MotorStop</ref></type>
          <declname>motorStopState</declname>
        </param>
        <briefdescription>
<para>Sets motor stop behavior. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="213" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1ad32a14a56a1d3c463cd0dd0db3de378b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>EvoMotor::stop</qualifiedname>
        <briefdescription>
<para>Stops the motor based on the stop behaviour set using setStopBehaviour(MotorState motorStopState). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a6edf0927edb7c319bc31f6e2620beb40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::hold</definition>
        <argsstring>()</argsstring>
        <name>hold</name>
        <qualifiedname>EvoMotor::hold</qualifiedname>
        <briefdescription>
<para>Holds the motor in its current position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="223" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a1765a3289194334dae18e6c247153024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setHoldPower</definition>
        <argsstring>(uint16_t power)</argsstring>
        <name>setHoldPower</name>
        <qualifiedname>EvoMotor::setHoldPower</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>power</declname>
        </param>
        <briefdescription>
<para>Set power used when holding. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>power</parametername>
</parameternamelist>
<parameterdescription>
<para>power to hold (0-4096) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="229" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1ab4c99fbfbe3a027d2d6e4c692e7da077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::coast</definition>
        <argsstring>()</argsstring>
        <name>coast</name>
        <qualifiedname>EvoMotor::coast</qualifiedname>
        <briefdescription>
<para>Removes power from the motors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="234" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a1d9542d3a6ee558e0fcd5705ec4ad90c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::brake</definition>
        <argsstring>()</argsstring>
        <name>brake</name>
        <qualifiedname>EvoMotor::brake</qualifiedname>
        <briefdescription>
<para>Applys braking force on the motor to stop the motor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="239" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a580820b3328cbaa82acda794427ae279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::run</definition>
        <argsstring>(int speed)</argsstring>
        <name>run</name>
        <qualifiedname>EvoMotor::run</qualifiedname>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Runs the motor at a specified speed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor speed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="245" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a1995987be4d479325904f1aca2b8f581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::runCount</definition>
        <argsstring>(int speed, int count, bool blocking=true)</argsstring>
        <name>runCount</name>
        <qualifiedname>EvoMotor::runCount</qualifiedname>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Runs the motor for a specified encoder count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor speed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoder count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait for action to be completed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="253" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a986a8cc81c95b6bdfa4b530dee27c8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::runAngle</definition>
        <argsstring>(int speed, int degrees, bool blocking=true)</argsstring>
        <name>runAngle</name>
        <qualifiedname>EvoMotor::runAngle</qualifiedname>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>degrees</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Runs the motor for a specified motor degree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor speed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait for action to be completed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="261" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1af17bf5cc456bdde4da82bac1b184a259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::runTime</definition>
        <argsstring>(int speed, int timeMS, bool blocking=true)</argsstring>
        <name>runTime</name>
        <qualifiedname>EvoMotor::runTime</qualifiedname>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeMS</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Runs the motor for a specified time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor speed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeMS</parametername>
</parameternamelist>
<parameterdescription>
<para>Time in miliseconds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait for action to be completed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="269" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1adf49cff95e155537fc66c859f583ebf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::runTarget</definition>
        <argsstring>(int speed, int angle, MotorStop then=MotorStop::HOLD, bool blocking=true)</argsstring>
        <name>runTarget</name>
        <qualifiedname>EvoMotor::runTarget</qualifiedname>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="_evo_motor_8h_1a3fd9015b7911abf9a34b57933dadd40f" kindref="member">MotorStop</ref></type>
          <declname>then</declname>
          <defval><ref refid="_evo_motor_8h_1a3fd9015b7911abf9a34b57933dadd40fa9cfa27b414cab750fb14ec07cdf5cf6a" kindref="member">MotorStop::HOLD</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Runs the motor to a specified absolute position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor speed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor absolute degree. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>then</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor stop action after moving to target. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait for action to be completed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="278" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1ae7631696972fa1f46e6867b783b1f8dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::setTargetPD</definition>
        <argsstring>(float kp, float kd)</argsstring>
        <name>setTargetPD</name>
        <qualifiedname>EvoMotor::setTargetPD</qualifiedname>
        <param>
          <type>float</type>
          <declname>kp</declname>
        </param>
        <param>
          <type>float</type>
          <declname>kd</declname>
        </param>
        <briefdescription>
<para>Sets PD control values for <ref refid="class_evo_motor_1adf49cff95e155537fc66c859f583ebf3" kindref="member">runTarget()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>Proportional gain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>Derivative gain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="285" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1afb115b5a2d484ff07dff67f0b60955dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::getTargetPD</definition>
        <argsstring>(float *kp, float *kd)</argsstring>
        <name>getTargetPD</name>
        <qualifiedname>EvoMotor::getTargetPD</qualifiedname>
        <param>
          <type>float *</type>
          <declname>kp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>kd</declname>
        </param>
        <briefdescription>
<para>Gets the PD control values for <ref refid="class_evo_motor_1adf49cff95e155537fc66c859f583ebf3" kindref="member">runTarget()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store proportional gain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store derivative gain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="292" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a62ccc4393b54d91717677acb0887cb7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvoMotor::runUntilStalled</definition>
        <argsstring>(int speed, bool blocking=true)</argsstring>
        <name>runUntilStalled</name>
        <qualifiedname>EvoMotor::runUntilStalled</qualifiedname>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Runs the motor until it is stalled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Motor speed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait for action to be completed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="299" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_evo_motor_1a1f29bf3fb57e9e7b8b9c36aaa6c3d453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EvoMotor::getSpeed</definition>
        <argsstring>()</argsstring>
        <name>getSpeed</name>
        <qualifiedname>EvoMotor::getSpeed</qualifiedname>
        <briefdescription>
<para>Gets the motor speed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>speed in deg/s </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/motors/EvoMotor.h" line="305" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class to control a motor using EvoPWMDriver and an encoder. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/motors/EvoMotor.h" line="70" column="1" bodyfile="src/motors/EvoMotor.h" bodystart="71" bodyend="306"/>
    <listofallmembers>
      <member refid="class_evo_motor_1adfe03a2c525bcf3abb03b1fe76f04137" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_countPerRevolution</name></member>
      <member refid="class_evo_motor_1a61f7bd8bdab9131b65fbb87b88750b6e" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_encoderAvailable</name></member>
      <member refid="class_evo_motor_1a7dc8f8eddf0b4eb7ae5a2ebced686ab9" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_holdPower</name></member>
      <member refid="class_evo_motor_1a9d61b30e2c06c59836d27b3aa66c92b9" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_kd</name></member>
      <member refid="class_evo_motor_1a398576331671dc23385c5646cd484a43" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_kp</name></member>
      <member refid="class_evo_motor_1a45ff9c4a56723f79f4918cd80024079a" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_maxSpd</name></member>
      <member refid="class_evo_motor_1a1b9ce34ac8557b19a621368e11a774da" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_measuredSpeed</name></member>
      <member refid="class_evo_motor_1a987a83967d3fdce40690f2117fe5af34" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_minSpd</name></member>
      <member refid="class_evo_motor_1a227a9e026f6cd4d6f1926f37a9c51429" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_motorFlip</name></member>
      <member refid="class_evo_motor_1a9eebf6d5e0644b34a6fe1a077c4fda28" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_motorPins</name></member>
      <member refid="class_evo_motor_1a8ad4eb02c94296a3239bba8f25446749" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_motorPort</name></member>
      <member refid="class_evo_motor_1a922051c1e7fe49603816b6f7988e1c03" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_motorState</name></member>
      <member refid="class_evo_motor_1ad51b18a8374858b709b6fe00413c294f" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_motorStopBehaviour</name></member>
      <member refid="class_evo_motor_1af803a152981207abe69a4a01a76f6188" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_motorType</name></member>
      <member refid="class_evo_motor_1ad7528a12af73edb6d087385ca0292345" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_runMode</name></member>
      <member refid="class_evo_motor_1a945d9f030757b549514b3d3dd8448b1d" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_stallThreshold</name></member>
      <member refid="class_evo_motor_1a2c7dae0934c5bf9c19299ad4a29b6ab0" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_targetEncoder</name></member>
      <member refid="class_evo_motor_1ae04be6cbb1ddeea9dc7264ff5584be49" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_targetSpeed</name></member>
      <member refid="class_evo_motor_1ae6bf083221377281e92e447b73255d3b" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_targetThen</name></member>
      <member refid="class_evo_motor_1add89206efb38fb7068411866738d5c3a" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>_targetValue</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478aa2f54358fd0404e888961fb4ce078eed5" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>ANGLE</name></member>
      <member refid="class_evo_motor_1abc3637db9cefe0fdfd6a99c72c0b0c1c" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>begin</name></member>
      <member refid="class_evo_motor_1a1d9542d3a6ee558e0fcd5705ec4ad90c" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>brake</name></member>
      <member refid="class_evo_motor_1ab4c99fbfbe3a027d2d6e4c692e7da077" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>coast</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478aa6738118ee65006913c115993164e66cc" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>COUNT</name></member>
      <member refid="class_evo_motor_1acbe9813880b50914240ba9e0b94f1181" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>driver</name></member>
      <member refid="class_evo_motor_1abc4f6df47f14fdc8ffcab6b6b36bab4a" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>encoder</name></member>
      <member refid="class_evo_motor_1a6346f5971155f78a2efd2e51fd77b31c" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>EvoMotor</name></member>
      <member refid="class_evo_motor_1a9fa8b158812910747a764639a6134113" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>flipEncoderDirection</name></member>
      <member refid="class_evo_motor_1a28faa613ee6d55bc6d06f40a7c669125" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>getAngle</name></member>
      <member refid="class_evo_motor_1ad3859f851356b2e878408fc06c036a70" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>getCount</name></member>
      <member refid="class_evo_motor_1ab2e17c576940847b38a02c923859d3cb" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>getCountPerRevolution</name></member>
      <member refid="class_evo_motor_1a1f29bf3fb57e9e7b8b9c36aaa6c3d453" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>getSpeed</name></member>
      <member refid="class_evo_motor_1aafbf01e74f7d4bf03c1c7615cf9b8c95" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>getSpeedLimit</name></member>
      <member refid="class_evo_motor_1afb115b5a2d484ff07dff67f0b60955dc" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>getTargetPD</name></member>
      <member refid="class_evo_motor_1a6edf0927edb7c319bc31f6e2620beb40" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>hold</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478aaf451fd671e65a3d2366d87308d89b626" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>HOLDPOS</name></member>
      <member refid="class_evo_motor_1a944778da0033279bceb0026902577345" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>isEncoderAvailable</name></member>
      <member refid="class_evo_motor_1a5eb90564a2077ec6938a2dbe9739b03d" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>isStalled</name></member>
      <member refid="class_evo_motor_1a17d42e0b08c1222eca48678b7e37943c" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>motorControlTask</name></member>
      <member refid="class_evo_motor_1a2baf379578eebf7815971d1a4526cf2e" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>motorSpeedTask</name></member>
      <member refid="class_evo_motor_1a78012d47205614ef2c937abb59130a06" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>motorTaskHandle</name></member>
      <member refid="class_evo_motor_1a67509d619ff8125c587e232c156ea891" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>motorTaskSuspended</name></member>
      <member refid="class_evo_motor_1a451bc58fa07cf9071844b9869e996505" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>move</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478aa58d0946dde6fd6e5cd14dfc8f9cc6c1c" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>NONE</name></member>
      <member refid="class_evo_motor_1a17bbbf5989c1ea97b6ce9be0221432a4" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>pauseMotorTask</name></member>
      <member refid="class_evo_motor_1a47281b8e341fb6349fffbae7ebcebe90" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>resetAngle</name></member>
      <member refid="class_evo_motor_1ae16e2596364e4322edf40e9cda5a768a" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>resetCount</name></member>
      <member refid="class_evo_motor_1aaf62474c9bc373b7543b2295a1a8166c" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>resumeMotorTask</name></member>
      <member refid="class_evo_motor_1a580820b3328cbaa82acda794427ae279" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>run</name></member>
      <member refid="class_evo_motor_1a986a8cc81c95b6bdfa4b530dee27c8ee" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>runAngle</name></member>
      <member refid="class_evo_motor_1a1995987be4d479325904f1aca2b8f581" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>runCount</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478a" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>runMode</name></member>
      <member refid="class_evo_motor_1adf49cff95e155537fc66c859f583ebf3" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>runTarget</name></member>
      <member refid="class_evo_motor_1af17bf5cc456bdde4da82bac1b184a259" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>runTime</name></member>
      <member refid="class_evo_motor_1a62ccc4393b54d91717677acb0887cb7c" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>runUntilStalled</name></member>
      <member refid="class_evo_motor_1a49a24183c8f1684114e246e2b797ebb1" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setAngle</name></member>
      <member refid="class_evo_motor_1a81a3f806b55458d700aafc6c5d5f21d4" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setCount</name></member>
      <member refid="class_evo_motor_1a5b2f286924597207a538ee522cbdda4a" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setCountPerRevolution</name></member>
      <member refid="class_evo_motor_1abbcad00bdaf3275b0164ecfa13ad966e" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setEncoderAvailable</name></member>
      <member refid="class_evo_motor_1a1765a3289194334dae18e6c247153024" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setHoldPower</name></member>
      <member refid="class_evo_motor_1afd99ccce7555f3aa9567dc0c4efba568" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>setParameters</name></member>
      <member refid="class_evo_motor_1abc8d2428917b40c1420706b4f0162232" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setSpeedLimit</name></member>
      <member refid="class_evo_motor_1aa49f3e7a159936f700e3623ee987da7f" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setStallThreshold</name></member>
      <member refid="class_evo_motor_1adf9244197dd011acb9251f255e575109" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setStopBehaviour</name></member>
      <member refid="class_evo_motor_1ae7631696972fa1f46e6867b783b1f8dc" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>setTargetPD</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478aa3a17dbbe4a027e7ffb441e242b4e034d" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>STALLED</name></member>
      <member refid="class_evo_motor_1ad32a14a56a1d3c463cd0dd0db3de378b" prot="public" virt="non-virtual"><scope>EvoMotor</scope><name>stop</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478aa78da84a1ee15ab422e3570edb55243f3" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>TARGET</name></member>
      <member refid="class_evo_motor_1a73db3936299272b483a26532132d478aaadbbe1b8f018558d016e1582080c20b9" prot="private" virt="non-virtual"><scope>EvoMotor</scope><name>TIME</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
