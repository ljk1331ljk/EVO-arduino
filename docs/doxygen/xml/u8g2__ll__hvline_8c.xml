<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="u8g2__ll__hvline_8c" kind="file" language="C++">
    <compoundname>u8g2_ll_hvline.c</compoundname>
    <includes refid="u8g2_8h" local="yes">u8g2.h</includes>
    <includes local="no">assert.h</includes>
    <incdepgraph>
      <node id="2">
        <label>u8g2.h</label>
        <link refid="u8g2_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/helper/U8g2/clib/u8g2_ll_hvline.c</label>
        <link refid="u8g2__ll__hvline_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>u8x8.h</label>
        <link refid="u8x8_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="u8g2__ll__hvline_8c_1aef8d14b9bab43b2194b1658bc65ba994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_ll_hvline_vertical_top_lsb</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)</argsstring>
        <name>u8g2_ll_hvline_vertical_top_lsb</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_ll_hvline.c" line="72" column="6" bodyfile="src/helper/U8g2/clib/u8g2_ll_hvline.c" bodystart="72" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__ll__hvline_8c_1a558061428b9522a77c1f1f2d5c3a9551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_ll_hvline_horizontal_right_lsb</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)</argsstring>
        <name>u8g2_ll_hvline_horizontal_right_lsb</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_ll_hvline.c" line="244" column="6" bodyfile="src/helper/U8g2/clib/u8g2_ll_hvline.c" bodystart="244" bodyend="299"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>u8g2_ll_hvline.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>low<sp/>level<sp/>hvline</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Universal<sp/>8bit<sp/>Graphics<sp/>Library<sp/>(https://github.com/olikraus/u8g2/)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>olikraus@gmail.com</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.<sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>*ptr<sp/>|=<sp/>or_mask</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>*ptr<sp/>^=<sp/>xor_mask</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>color<sp/>=<sp/>0:<sp/><sp/><sp/>or_mask<sp/>=<sp/>1,<sp/>xor_mask<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>color<sp/>=<sp/>1:<sp/><sp/><sp/>or_mask<sp/>=<sp/>1,<sp/>xor_mask<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>color<sp/>=<sp/>2:<sp/><sp/><sp/>or_mask<sp/>=<sp/>0,<sp/>xor_mask<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>if<sp/>(<sp/>color<sp/>&lt;=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>or_mask<sp/><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/>if<sp/>(<sp/>color<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>xor_mask<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;u8g2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*=================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/>u8g2_ll_hvline_vertical_top_lsb</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>SSD13xx</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>UC1701<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_HVLINE_SPEED_OPTIMIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>x,y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Upper<sp/>left<sp/>position<sp/>of<sp/>the<sp/>line<sp/>within<sp/>the<sp/>local<sp/>buffer<sp/>(not<sp/>the<sp/>display!)</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>of<sp/>the<sp/>line<sp/>in<sp/>pixel,<sp/>len<sp/>must<sp/>not<sp/>be<sp/>0</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/>dir<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/>horizontal<sp/>line<sp/>(left<sp/>to<sp/>right)</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1:<sp/>vertical<sp/>line<sp/>(top<sp/>to<sp/>bottom)</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/>asumption:<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>all<sp/>clipping<sp/>done</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_ll_hvline_vertical_top_lsb(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>uint16_t<sp/>offset;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*ptr;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bit_pos,<sp/>mask;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>uint8_t<sp/>or_mask,<sp/>xor_mask;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__unix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*max_ptr<sp/>=<sp/>u8g2-&gt;tile_buf_ptr<sp/>+<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width*u8g2-&gt;tile_buf_height*8;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(x<sp/>&gt;=<sp/>u8g2-&gt;buf_x0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(x<sp/>&lt;<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width*8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(y<sp/>&gt;=<sp/>u8g2-&gt;buf_y0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(y<sp/>&lt;<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height*8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>bytes<sp/>are<sp/>vertical,<sp/>lsb<sp/>on<sp/>top<sp/>(y=0),<sp/>msb<sp/>at<sp/>bottom<sp/>(y=7)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>bit_pos<sp/>=<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>truncate<sp/>is<sp/>ok<sp/>here...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>bit_pos<sp/>&amp;=<sp/>7;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>because<sp/>only<sp/>the<sp/>lowest<sp/>3<sp/>bits<sp/>are<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>mask<sp/>&lt;&lt;=<sp/>bit_pos;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>or_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>xor_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>&lt;=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>or_mask<sp/><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>xor_mask<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y<sp/>might<sp/>be<sp/>8<sp/>or<sp/>16<sp/>bit,<sp/>but<sp/>we<sp/>need<sp/>16<sp/>bit,<sp/>so<sp/>use<sp/>a<sp/>16<sp/>bit<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>offset<sp/>&amp;=<sp/>~7;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>offset<sp/>*=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/>u8g2-&gt;tile_buf_ptr;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__unix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ptr<sp/>&lt;<sp/>max_ptr);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>|=<sp/>or_mask;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>^=<sp/>xor_mask;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__unix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ptr<sp/>&lt;<sp/>max_ptr);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>|=<sp/>or_mask;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>^=<sp/>xor_mask;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bit_pos++;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bit_pos<sp/>&amp;=<sp/>7;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bit_pos<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr+=u8g2-&gt;pixel_buf_width;<sp/></highlight><highlight class="comment">/*<sp/>6<sp/>Jan<sp/>17:<sp/>Changed<sp/>u8g2-&gt;width<sp/>to<sp/>u8g2-&gt;pixel_buf_width,<sp/>issue<sp/>#148<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>&lt;=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or_mask<sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xor_mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>or_mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>xor_mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_HVLINE_SPEED_OPTIMIZATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/>x,y<sp/>position<sp/>within<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="160"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_draw_pixel_vertical_top_lsb(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>uint16_t<sp/>offset;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*ptr;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bit_pos,<sp/>mask;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(x<sp/>&gt;=<sp/>u8g2-&gt;buf_x0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(x<sp/>&lt;<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width*8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(y<sp/>&gt;=<sp/>u8g2-&gt;buf_y0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(y<sp/>&lt;<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height*8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>bytes<sp/>are<sp/>vertical,<sp/>lsb<sp/>on<sp/>top<sp/>(y=0),<sp/>msb<sp/>at<sp/>bottom<sp/>(y=7)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>bit_pos<sp/>=<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>truncate<sp/>is<sp/>ok<sp/>here...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>bit_pos<sp/>&amp;=<sp/>7;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>because<sp/>only<sp/>the<sp/>lowest<sp/>3<sp/>bits<sp/>are<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>mask<sp/>&lt;&lt;=<sp/>bit_pos;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y<sp/>might<sp/>be<sp/>8<sp/>or<sp/>16<sp/>bit,<sp/>but<sp/>we<sp/>need<sp/>16<sp/>bit,<sp/>so<sp/>use<sp/>a<sp/>16<sp/>bit<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>offset<sp/>&amp;=<sp/>~7;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>offset<sp/>*=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/>u8g2-&gt;tile_buf_ptr;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>&lt;=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>^=<sp/>mask;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/>x,y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Upper<sp/>left<sp/>position<sp/>of<sp/>the<sp/>line<sp/>within<sp/>the<sp/>local<sp/>buffer<sp/>(not<sp/>the<sp/>display!)</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>of<sp/>the<sp/>line<sp/>in<sp/>pixel,<sp/>len<sp/>must<sp/>not<sp/>be<sp/>0</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/>dir<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/>horizontal<sp/>line<sp/>(left<sp/>to<sp/>right)</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1:<sp/>vertical<sp/>line<sp/>(top<sp/>to<sp/>bottom)</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/>asumption:<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>all<sp/>clipping<sp/>done</highlight></codeline>
<codeline lineno="200"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_ll_hvline_vertical_top_lsb(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_draw_pixel_vertical_top_lsb(u8g2,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_draw_pixel_vertical_top_lsb(u8g2,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y++;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_HVLINE_SPEED_OPTIMIZATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*=================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/>u8g2_ll_hvline_horizontal_right_lsb</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/>ST7920</highlight></codeline>
<codeline lineno="230"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_HVLINE_SPEED_OPTIMIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/>x,y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Upper<sp/>left<sp/>position<sp/>of<sp/>the<sp/>line<sp/>within<sp/>the<sp/>local<sp/>buffer<sp/>(not<sp/>the<sp/>display!)</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>of<sp/>the<sp/>line<sp/>in<sp/>pixel,<sp/>len<sp/>must<sp/>not<sp/>be<sp/>0</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/>dir<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/>horizontal<sp/>line<sp/>(left<sp/>to<sp/>right)</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1:<sp/>vertical<sp/>line<sp/>(top<sp/>to<sp/>bottom)</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/>asumption:<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/>all<sp/>clipping<sp/>done</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SH1122,<sp/>LD7032,<sp/>ST7920,<sp/>ST7986,<sp/>LC7981,<sp/>T6963,<sp/>SED1330,<sp/>RA8835,<sp/>MAX7219,<sp/>LS0<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_ll_hvline_horizontal_right_lsb(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>uint16_t<sp/>offset;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*ptr;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bit_pos;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>uint8_t<sp/>mask;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tile_width<sp/>=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>bit_pos<sp/>=<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>truncate<sp/>is<sp/>ok<sp/>here...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>bit_pos<sp/>&amp;=<sp/>7;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>because<sp/>only<sp/>the<sp/>lowest<sp/>3<sp/>bits<sp/>are<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>mask<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>mask<sp/>&gt;&gt;=<sp/>bit_pos;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y<sp/>might<sp/>be<sp/>8<sp/>or<sp/>16<sp/>bit,<sp/>but<sp/>we<sp/>need<sp/>16<sp/>bit,<sp/>so<sp/>use<sp/>a<sp/>16<sp/>bit<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>offset<sp/>*=<sp/>tile_width;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>offset<sp/>+=<sp/>x&gt;&gt;3;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/>u8g2-&gt;tile_buf_ptr;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>&lt;=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>^=<sp/>mask;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mask<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//x++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>&lt;=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>^=<sp/>mask;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>tile_width;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//y++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_HVLINE_SPEED_OPTIMIZATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/>x,y<sp/>position<sp/>within<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="306"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SH1122,<sp/>LD7032,<sp/>ST7920,<sp/>ST7986,<sp/>LC7981,<sp/>T6963,<sp/>SED1330,<sp/>RA8835,<sp/>MAX7219,<sp/>LS0<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_draw_pixel_horizontal_right_lsb(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>uint16_t<sp/>offset;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*ptr;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bit_pos,<sp/>mask;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(x<sp/>&gt;=<sp/>u8g2-&gt;buf_x0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(x<sp/>&lt;<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width*8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(y<sp/>&gt;=<sp/>u8g2-&gt;buf_y0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert(y<sp/>&lt;<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height*8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>bytes<sp/>are<sp/>vertical,<sp/>lsb<sp/>on<sp/>top<sp/>(y=0),<sp/>msb<sp/>at<sp/>bottom<sp/>(y=7)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>bit_pos<sp/>=<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>truncate<sp/>is<sp/>ok<sp/>here...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>bit_pos<sp/>&amp;=<sp/>7;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>because<sp/>only<sp/>the<sp/>lowest<sp/>3<sp/>bits<sp/>are<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>mask<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>mask<sp/>&gt;&gt;=<sp/>bit_pos;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>x<sp/>&gt;&gt;=<sp/>3;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y<sp/>might<sp/>be<sp/>8<sp/>or<sp/>16<sp/>bit,<sp/>but<sp/>we<sp/>need<sp/>16<sp/>bit,<sp/>so<sp/>use<sp/>a<sp/>16<sp/>bit<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>offset<sp/>*=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>offset<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/>u8g2-&gt;tile_buf_ptr;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>&lt;=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;draw_color<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>^=<sp/>mask;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/>x,y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Upper<sp/>left<sp/>position<sp/>of<sp/>the<sp/>line<sp/>within<sp/>the<sp/>local<sp/>buffer<sp/>(not<sp/>the<sp/>display!)</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>of<sp/>the<sp/>line<sp/>in<sp/>pixel,<sp/>len<sp/>must<sp/>not<sp/>be<sp/>0</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/>dir<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/>horizontal<sp/>line<sp/>(left<sp/>to<sp/>right)</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1:<sp/>vertical<sp/>line<sp/>(top<sp/>to<sp/>bottom)</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/>asumption:<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>all<sp/>clipping<sp/>done</highlight></codeline>
<codeline lineno="347"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SH1122,<sp/>LD7032,<sp/>ST7920,<sp/>ST7986,<sp/>LC7981,<sp/>T6963,<sp/>SED1330,<sp/>RA8835,<sp/>MAX7219,<sp/>LS0<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_ll_hvline_horizontal_right_lsb(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_draw_pixel_horizontal_right_lsb(u8g2,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2_draw_pixel_horizontal_right_lsb(u8g2,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y++;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>len<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_HVLINE_SPEED_OPTIMIZATION<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/helper/U8g2/clib/u8g2_ll_hvline.c"/>
  </compounddef>
</doxygen>
