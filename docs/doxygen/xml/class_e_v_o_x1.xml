<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_e_v_o_x1" kind="class" language="C++" prot="public">
    <compoundname>EVOX1</compoundname>
    <includes refid="_e_v_o_x1_8h" local="no">EVOX1.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_e_v_o_x1_1af25408a7256e13e8dd1b958e42bd4ca6" prot="private" static="no" mutable="no">
        <type>U8G2_SSD1306_128X64_NONAME_F_HW_I2C</type>
        <definition>U8G2_SSD1306_128X64_NONAME_F_HW_I2C EVOX1::display</definition>
        <argsstring></argsstring>
        <name>display</name>
        <qualifiedname>EVOX1::display</qualifiedname>
        <briefdescription>
<para>OLED display instance using U8G2 library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="49" column="41" bodyfile="src/EVOX1.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_v_o_x1_1ac35df0bfa755ece3175697b8c22aeb00" prot="private" static="no" mutable="no">
        <type>Adafruit_NeoPixel</type>
        <definition>Adafruit_NeoPixel EVOX1::rgb</definition>
        <argsstring></argsstring>
        <name>rgb</name>
        <qualifiedname>EVOX1::rgb</qualifiedname>
        <briefdescription>
<para>RGB LED instance using Adafruit NeoPixel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="54" column="23" bodyfile="src/EVOX1.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_v_o_x1_1a3e58b33added127cb5219d4b6fdbec4a" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t EVOX1::_fontSize</definition>
        <argsstring></argsstring>
        <name>_fontSize</name>
        <qualifiedname>EVOX1::_fontSize</qualifiedname>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Size of font for display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="59" column="13" bodyfile="src/EVOX1.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_v_o_x1_1a43bd32c1a1b0d97ab5aadade389289b1" prot="private" static="no" mutable="no">
        <type><ref refid="_e_v_o_x1_8h_1a481bba4ee500a381c7ae5b767e641bdc" kindref="member">PinState</ref></type>
        <definition>PinState EVOX1::pinState</definition>
        <argsstring></argsstring>
        <name>pinState</name>
        <qualifiedname>EVOX1::pinState</qualifiedname>
        <initializer>= RGB_LED_STATE</initializer>
        <briefdescription>
<para>Initial of pin state of the multiplexed pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="64" column="14" bodyfile="src/EVOX1.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_v_o_x1_1a0e80d22348855596141d70accba4a63e" prot="private" static="no" mutable="no">
        <type>I2CDevice &amp;</type>
        <definition>I2CDevice&amp; EVOX1::i2CDevice</definition>
        <argsstring></argsstring>
        <name>i2CDevice</name>
        <qualifiedname>EVOX1::i2CDevice</qualifiedname>
        <initializer>= I2CDevice::getInstance()</initializer>
        <briefdescription>
<para>Singleton instance of I2CDevice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="79" column="15" bodyfile="src/EVOX1.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_v_o_x1_1a61461b320f95800a29fb9071321a3ae8" prot="private" static="no" mutable="no">
        <type>EvoPWMDriver &amp;</type>
        <definition>EvoPWMDriver&amp; EVOX1::evoPWMDriver</definition>
        <argsstring></argsstring>
        <name>evoPWMDriver</name>
        <qualifiedname>EVOX1::evoPWMDriver</qualifiedname>
        <initializer>= EvoPWMDriver::getInstance()</initializer>
        <briefdescription>
<para>Singleton instance of EvoPWMDriver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="84" column="18" bodyfile="src/EVOX1.h" bodystart="84" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_e_v_o_x1_1a68727c7ee42efbbbb8a83aad2d8dc026" prot="public" static="no" mutable="no">
        <type>EvoBQ25887</type>
        <definition>EvoBQ25887 EVOX1::charger</definition>
        <argsstring></argsstring>
        <name>charger</name>
        <qualifiedname>EVOX1::charger</qualifiedname>
        <initializer>= EvoBQ25887()</initializer>
        <briefdescription>
<para>Battery charger instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="107" column="16" bodyfile="src/EVOX1.h" bodystart="107" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_e_v_o_x1_1a18d660e086a3a48e8e2f0d2c9fe84dfe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EVOX1::EVOX1</definition>
        <argsstring>(const EVOX1 &amp;)=delete</argsstring>
        <name>EVOX1</name>
        <qualifiedname>EVOX1::EVOX1</qualifiedname>
        <param>
          <type>const <ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Deleted copy constructor to prevent copying. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a555775df46b67fb8b35be45894463eab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref> &amp;</type>
        <definition>EVOX1 &amp; EVOX1::operator=</definition>
        <argsstring>(const EVOX1 &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>EVOX1::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Deleted assignment operator to prevent assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="74" column="11"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_e_v_o_x1_1ad6fa48fd17460ccbe0f4d415355d99ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EVOX1::EVOX1</definition>
        <argsstring>()</argsstring>
        <name>EVOX1</name>
        <qualifiedname>EVOX1::EVOX1</qualifiedname>
        <briefdescription>
<para>Gets the singleton instance of <ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="90" column="5" bodyfile="src/EVOX1.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1acfa5db0e8275e769bf7a44eb862567a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>EVOX1::begin</qualifiedname>
        <briefdescription>
<para>Initializes the <ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref> board and its peripherals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="112" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a1ce7c07c25a2a66dda417208d04cf658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::selectI2CChannel</definition>
        <argsstring>(I2CChannel channel)</argsstring>
        <name>selectI2CChannel</name>
        <qualifiedname>EVOX1::selectI2CChannel</qualifiedname>
        <param>
          <type>I2CChannel</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Selects an I2C channel on the multiplexer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The I2C channel to select. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a5a17f181e3fe81dccaea80148e01cc5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVOX1::scanI2CChannel</definition>
        <argsstring>(I2CChannel channel, uint8_t *addresses, int maxAddresses)</argsstring>
        <name>scanI2CChannel</name>
        <qualifiedname>EVOX1::scanI2CChannel</qualifiedname>
        <param>
          <type>I2CChannel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>addresses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAddresses</declname>
        </param>
        <briefdescription>
<para>Scans for I2C devices on a specific channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The I2C channel to scan. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addresses</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store detected device addresses. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxAddresses</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of addresses that can be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of devices found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="127" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a2d8b5b3b782f5cf68b0032798192d076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float EVOX1::getTopBattery</definition>
        <argsstring>()</argsstring>
        <name>getTopBattery</name>
        <qualifiedname>EVOX1::getTopBattery</qualifiedname>
        <briefdescription>
<para>Gets the voltage of the top battery. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The voltage of the top battery in volts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="135" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a98c96b3a7ec90a3065371fc246f7ec1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float EVOX1::getBottomBattery</definition>
        <argsstring>()</argsstring>
        <name>getBottomBattery</name>
        <qualifiedname>EVOX1::getBottomBattery</qualifiedname>
        <briefdescription>
<para>Gets the voltage of the bottom battery. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The voltage of the bottom battery in volts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="141" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a5dc350b8ace794ae36b14564905d21ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float EVOX1::getBattery</definition>
        <argsstring>()</argsstring>
        <name>getBattery</name>
        <qualifiedname>EVOX1::getBattery</qualifiedname>
        <briefdescription>
<para>Gets the combined battery voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The total battery voltage in volts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="147" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a9bcae9bed5af1697e95853e34e032744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::clearDisplay</definition>
        <argsstring>()</argsstring>
        <name>clearDisplay</name>
        <qualifiedname>EVOX1::clearDisplay</qualifiedname>
        <briefdescription>
<para>Clears the OLED display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="154" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a596f6a9e60e2c410ac663f720f0a0f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::writeToDisplay</definition>
        <argsstring>(int value, int x, int y, bool clear=false, bool draw=false)</argsstring>
        <name>writeToDisplay</name>
        <qualifiedname>EVOX1::writeToDisplay</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Writes an integer to the display at a specific position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value to display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X-coordinate position (0-128). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y-coordinate position (0-64). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clear</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to clear the screen before drawing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to immediately draw the screen. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="164" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1aa22b3f7707142bf83d9c37f51732dbb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::writeToDisplay</definition>
        <argsstring>(double f, int x, int y, bool clear=false, bool draw=false)</argsstring>
        <name>writeToDisplay</name>
        <qualifiedname>EVOX1::writeToDisplay</qualifiedname>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Writes a floating-point number to the display at a specific position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating-point number to display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X-coordinate position (0-128). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y-coordinate position (0-64). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clear</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to clear the screen before drawing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to immediately draw the screen. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="174" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a31f6412aca8e1e0b424ebaab2cc12d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::writeToDisplay</definition>
        <argsstring>(const char *c, int x, int y, bool clear=false, bool draw=false)</argsstring>
        <name>writeToDisplay</name>
        <qualifiedname>EVOX1::writeToDisplay</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Writes a string to the display at a specific position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X-coordinate position (0-128). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y-coordinate position (0-64). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clear</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to clear the screen before drawing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to immediately draw the screen. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="184" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1aba2d0ef27e85bd9293d77a50cdbe5dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::writeLineToDisplay</definition>
        <argsstring>(int value, int line, bool clear=false, bool draw=false)</argsstring>
        <name>writeLineToDisplay</name>
        <qualifiedname>EVOX1::writeLineToDisplay</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="186" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a64746a53d6c97e51258f6d2b2c6a16e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::writeLineToDisplay</definition>
        <argsstring>(double f, int line, bool clear=false, bool draw=false)</argsstring>
        <name>writeLineToDisplay</name>
        <qualifiedname>EVOX1::writeLineToDisplay</qualifiedname>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1ab9143ac79b8a68ca39faaac9b8f14098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::writeLineToDisplay</definition>
        <argsstring>(const char *c, int line, bool clear=false, bool draw=false)</argsstring>
        <name>writeLineToDisplay</name>
        <qualifiedname>EVOX1::writeLineToDisplay</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>draw</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="190" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a547b6e5ab9b035462cc1148031d37faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::drawDisplay</definition>
        <argsstring>()</argsstring>
        <name>drawDisplay</name>
        <qualifiedname>EVOX1::drawDisplay</qualifiedname>
        <briefdescription>
<para>Refreshes the display by rendering the current buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a4524bcd7f2e78decfeadffb33a5555a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::setFontSize</definition>
        <argsstring>(uint8_t size)</argsstring>
        <name>setFontSize</name>
        <qualifiedname>EVOX1::setFontSize</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sets the font size for the display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The font size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="201" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a1c1b7f315b41d4802c4a6e56220b37f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::waitForButton</definition>
        <argsstring>()</argsstring>
        <name>waitForButton</name>
        <qualifiedname>EVOX1::waitForButton</qualifiedname>
        <briefdescription>
<para>Waits for a button press and release before continuing execution. (To be deprecated, use waitForBumped(int debouncems)) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="208" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1ab9578f4c445db1302952166848d52e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::waitForPress</definition>
        <argsstring>(int debouncems=0)</argsstring>
        <name>waitForPress</name>
        <qualifiedname>EVOX1::waitForPress</qualifiedname>
        <param>
          <type>int</type>
          <declname>debouncems</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Waits for a button press before continuing execution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debouncems</parametername>
</parameternamelist>
<parameterdescription>
<para>delay in milliseconds after button is pressed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="214" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1aebc87ebd48a283cc52cb2150cc1b79fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::waitForRelease</definition>
        <argsstring>(int debouncems=0)</argsstring>
        <name>waitForRelease</name>
        <qualifiedname>EVOX1::waitForRelease</qualifiedname>
        <param>
          <type>int</type>
          <declname>debouncems</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Waits for a button released before continuing execution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debouncems</parametername>
</parameternamelist>
<parameterdescription>
<para>delay in milliseconds after button is released. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="220" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1add6dcc30412b45d868d3f85c07ecc21a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::waitForBump</definition>
        <argsstring>(int debouncems=0)</argsstring>
        <name>waitForBump</name>
        <qualifiedname>EVOX1::waitForBump</qualifiedname>
        <param>
          <type>int</type>
          <declname>debouncems</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Waits for a button press and release before continuing execution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debouncems</parametername>
</parameternamelist>
<parameterdescription>
<para>delay in milliseconds after button is pressed and button is released. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="226" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a7d956df679f8d7f3cb1573a07d478a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_v_o_x1_8h_1aa46074d34fe2d6631c6bd9dc74633657" kindref="member">ButtonState</ref></type>
        <definition>ButtonState EVOX1::getButton</definition>
        <argsstring>()</argsstring>
        <name>getButton</name>
        <qualifiedname>EVOX1::getButton</qualifiedname>
        <briefdescription>
<para>Gets the state of the button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The state of the button. PRESSED or RELEASED. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="232" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a0b6466b1faaf530c58c3cd8dcfb974d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::playTone</definition>
        <argsstring>(uint frequency, int duration)</argsstring>
        <name>playTone</name>
        <qualifiedname>EVOX1::playTone</qualifiedname>
        <param>
          <type>uint</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
<para>Plays a tone on the buzzer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>The frequency of the tone in Hz. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the tone in milliseconds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="241" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_v_o_x1_1a7257fd59f8b9fc14e983e898d17ad9e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVOX1::setRGB</definition>
        <argsstring>(int r, int g, int b)</argsstring>
        <name>setRGB</name>
        <qualifiedname>EVOX1::setRGB</qualifiedname>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Sets the color of the RGB LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Red intensity (0-255). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Green intensity (0-255). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Blue intensity (0-255). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="251" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_e_v_o_x1_1af3a2cbe75b2c841d30b2031845780e25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref> &amp;</type>
        <definition>static EVOX1 &amp; EVOX1::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>EVOX1::getInstance</qualifiedname>
        <briefdescription>
<para>Gets the singleton instance of <ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the singleton instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EVOX1.h" line="98" column="18" bodyfile="src/EVOX1.h" bodystart="98" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Manages the <ref refid="class_e_v_o_x1" kindref="compound">EVOX1</ref> controller, handling display, battery, I2C, buttons, and RGB functions. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements a singleton pattern to ensure only one instance is created. </para>
    </detaileddescription>
    <location file="src/EVOX1.h" line="43" column="1" bodyfile="src/EVOX1.h" bodystart="44" bodyend="252"/>
    <listofallmembers>
      <member refid="class_e_v_o_x1_1a3e58b33added127cb5219d4b6fdbec4a" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>_fontSize</name></member>
      <member refid="class_e_v_o_x1_1acfa5db0e8275e769bf7a44eb862567a6" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>begin</name></member>
      <member refid="class_e_v_o_x1_1a68727c7ee42efbbbb8a83aad2d8dc026" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>charger</name></member>
      <member refid="class_e_v_o_x1_1a9bcae9bed5af1697e95853e34e032744" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>clearDisplay</name></member>
      <member refid="class_e_v_o_x1_1af25408a7256e13e8dd1b958e42bd4ca6" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>display</name></member>
      <member refid="class_e_v_o_x1_1a547b6e5ab9b035462cc1148031d37faf" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>drawDisplay</name></member>
      <member refid="class_e_v_o_x1_1a61461b320f95800a29fb9071321a3ae8" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>evoPWMDriver</name></member>
      <member refid="class_e_v_o_x1_1a18d660e086a3a48e8e2f0d2c9fe84dfe" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>EVOX1</name></member>
      <member refid="class_e_v_o_x1_1ad6fa48fd17460ccbe0f4d415355d99ad" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>EVOX1</name></member>
      <member refid="class_e_v_o_x1_1a5dc350b8ace794ae36b14564905d21ce" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>getBattery</name></member>
      <member refid="class_e_v_o_x1_1a98c96b3a7ec90a3065371fc246f7ec1a" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>getBottomBattery</name></member>
      <member refid="class_e_v_o_x1_1a7d956df679f8d7f3cb1573a07d478a3f" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>getButton</name></member>
      <member refid="class_e_v_o_x1_1af3a2cbe75b2c841d30b2031845780e25" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>getInstance</name></member>
      <member refid="class_e_v_o_x1_1a2d8b5b3b782f5cf68b0032798192d076" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>getTopBattery</name></member>
      <member refid="class_e_v_o_x1_1a0e80d22348855596141d70accba4a63e" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>i2CDevice</name></member>
      <member refid="class_e_v_o_x1_1a555775df46b67fb8b35be45894463eab" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>operator=</name></member>
      <member refid="class_e_v_o_x1_1a43bd32c1a1b0d97ab5aadade389289b1" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>pinState</name></member>
      <member refid="class_e_v_o_x1_1a0b6466b1faaf530c58c3cd8dcfb974d6" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>playTone</name></member>
      <member refid="class_e_v_o_x1_1ac35df0bfa755ece3175697b8c22aeb00" prot="private" virt="non-virtual"><scope>EVOX1</scope><name>rgb</name></member>
      <member refid="class_e_v_o_x1_1a5a17f181e3fe81dccaea80148e01cc5e" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>scanI2CChannel</name></member>
      <member refid="class_e_v_o_x1_1a1ce7c07c25a2a66dda417208d04cf658" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>selectI2CChannel</name></member>
      <member refid="class_e_v_o_x1_1a4524bcd7f2e78decfeadffb33a5555a8" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>setFontSize</name></member>
      <member refid="class_e_v_o_x1_1a7257fd59f8b9fc14e983e898d17ad9e7" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>setRGB</name></member>
      <member refid="class_e_v_o_x1_1add6dcc30412b45d868d3f85c07ecc21a" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>waitForBump</name></member>
      <member refid="class_e_v_o_x1_1a1c1b7f315b41d4802c4a6e56220b37f9" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>waitForButton</name></member>
      <member refid="class_e_v_o_x1_1ab9578f4c445db1302952166848d52e7b" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>waitForPress</name></member>
      <member refid="class_e_v_o_x1_1aebc87ebd48a283cc52cb2150cc1b79fe" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>waitForRelease</name></member>
      <member refid="class_e_v_o_x1_1aba2d0ef27e85bd9293d77a50cdbe5dbc" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>writeLineToDisplay</name></member>
      <member refid="class_e_v_o_x1_1a64746a53d6c97e51258f6d2b2c6a16e4" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>writeLineToDisplay</name></member>
      <member refid="class_e_v_o_x1_1ab9143ac79b8a68ca39faaac9b8f14098" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>writeLineToDisplay</name></member>
      <member refid="class_e_v_o_x1_1a596f6a9e60e2c410ac663f720f0a0f59" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>writeToDisplay</name></member>
      <member refid="class_e_v_o_x1_1aa22b3f7707142bf83d9c37f51732dbb3" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>writeToDisplay</name></member>
      <member refid="class_e_v_o_x1_1a31f6412aca8e1e0b424ebaab2cc12d14" prot="public" virt="non-virtual"><scope>EVOX1</scope><name>writeToDisplay</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
