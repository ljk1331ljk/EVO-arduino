<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="u8g2__hvline_8c" kind="file" language="C++">
    <compoundname>u8g2_hvline.c</compoundname>
    <includes refid="u8g2_8h" local="yes">u8g2.h</includes>
    <includes local="no">assert.h</includes>
    <incdepgraph>
      <node id="2">
        <label>u8g2.h</label>
        <link refid="u8g2_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/helper/U8g2/clib/u8g2_hvline.c</label>
        <link refid="u8g2__hvline_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>u8x8.h</label>
        <link refid="u8x8_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="u8g2__hvline_8c_1af283a764d5a260fe82ce88863224c72a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t u8g2_clip_intersection2</definition>
        <argsstring>(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)</argsstring>
        <name>u8g2_clip_intersection2</name>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>u8g2_uint_t *</type>
          <declname>len</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>c</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_hvline.c" line="61" column="16" bodyfile="src/helper/U8g2/clib/u8g2_hvline.c" bodystart="61" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__hvline_8c_1afa926a5ddf59b1b9f66a3b79b40ffc2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_draw_hv_line_2dir</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)</argsstring>
        <name>u8g2_draw_hv_line_2dir</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_hvline.c" line="132" column="6" bodyfile="src/helper/U8g2/clib/u8g2_hvline.c" bodystart="132" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__hvline_8c_1a4743202f437c3528a75001fa602c22ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_DrawHVLine</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)</argsstring>
        <name>u8g2_DrawHVLine</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_hvline.c" line="150" column="6" bodyfile="src/helper/U8g2/clib/u8g2_hvline.c" bodystart="150" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__hvline_8c_1a71693f142580bdf7b1f8c97e16c88705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_DrawHLine</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)</argsstring>
        <name>u8g2_DrawHLine</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_hvline.c" line="203" column="6" bodyfile="src/helper/U8g2/clib/u8g2_hvline.c" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__hvline_8c_1a8686b8040daf03938b587cc7b8242c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_DrawVLine</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)</argsstring>
        <name>u8g2_DrawVLine</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_hvline.c" line="212" column="6" bodyfile="src/helper/U8g2/clib/u8g2_hvline.c" bodystart="212" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__hvline_8c_1a3a389e6557911ee8c8b349d89bfca19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_DrawPixel</definition>
        <argsstring>(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)</argsstring>
        <name>u8g2_DrawPixel</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>u8g2_uint_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_hvline.c" line="221" column="6" bodyfile="src/helper/U8g2/clib/u8g2_hvline.c" bodystart="221" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__hvline_8c_1a65b996efcab73ddb144d861eca9cca42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetDrawColor</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t color)</argsstring>
        <name>u8g2_SetDrawColor</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_hvline.c" line="249" column="6" bodyfile="src/helper/U8g2/clib/u8g2_hvline.c" bodystart="249" bodyend="254"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>u8g2_hvline.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Universal<sp/>8bit<sp/>Graphics<sp/>Library<sp/>(https://github.com/olikraus/u8g2/)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>olikraus@gmail.com</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.<sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>Calltree</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/>void<sp/>u8g2_DrawHVLine(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;cb-&gt;draw_l90</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2_draw_hv_line_2dir</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>u8g2-&gt;ll_hvline(u8g2,<sp/>x,<sp/>y,<sp/>len,<sp/>dir);</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;u8g2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>intersection<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>Description:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>clip<sp/>range<sp/>from<sp/>pos<sp/>a<sp/>(included)<sp/>with<sp/>line<sp/>len<sp/>(a+len<sp/>excluded)<sp/>agains<sp/>c<sp/>(included)<sp/>to<sp/>d<sp/>(excluded)</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>Assumptions:</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>len<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>c<sp/>&lt;=<sp/>d<sp/><sp/><sp/><sp/><sp/><sp/>(this<sp/>is<sp/>not<sp/>checked)</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>will<sp/>return<sp/>0<sp/>if<sp/>there<sp/>is<sp/>no<sp/>intersection<sp/>and<sp/>if<sp/>a<sp/>&gt;<sp/>b</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8g2_clip_intersection2(u8g2_uint_t<sp/>*ap,<sp/>u8g2_uint_t<sp/>*len,<sp/>u8g2_uint_t<sp/>c,<sp/>u8g2_uint_t<sp/>d)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>a<sp/>=<sp/>*ap;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>u8g2_uint_t<sp/>b;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>b<sp/><sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>b<sp/>+=<sp/>*len;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>Description:</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>range<sp/>from<sp/>a<sp/>(included)<sp/>to<sp/>b<sp/>(excluded)<sp/>agains<sp/>c<sp/>(included)<sp/>to<sp/>d<sp/>(excluded)</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>Assumptions:</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>&lt;=<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(violation<sp/>is<sp/>checked<sp/>and<sp/>handled<sp/>correctly)</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>&lt;=<sp/>d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this<sp/>is<sp/>not<sp/>checked)</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>will<sp/>return<sp/>0<sp/>if<sp/>there<sp/>is<sp/>no<sp/>intersection<sp/>and<sp/>if<sp/>a<sp/>&gt;<sp/>b</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>optimized<sp/>clipping:<sp/>c<sp/>is<sp/>set<sp/>to<sp/>0<sp/>--&gt;<sp/>27<sp/>Oct<sp/>2018:<sp/>again<sp/>removed<sp/>the<sp/>c==0<sp/>assumption</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>replaced<sp/>by<sp/>uint8_t<sp/>u8g2_clip_intersection2</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>the<sp/>a&gt;b<sp/>case<sp/>correctly.<sp/>If<sp/>code<sp/>and<sp/>time<sp/>is<sp/>critical,<sp/>this<sp/>could<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>removed<sp/>completly<sp/>(be<sp/>aware<sp/>about<sp/>memory<sp/>curruption<sp/>for<sp/>wrong<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>arguments)<sp/>or<sp/>return<sp/>0<sp/>for<sp/>a&gt;b<sp/>(will<sp/>lead<sp/>to<sp/>skipped<sp/>lines<sp/>for<sp/>wrong<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>arguments)<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>removing<sp/>the<sp/>following<sp/>if<sp/>clause<sp/>completly<sp/>may<sp/>lead<sp/>to<sp/>memory<sp/>corruption<sp/>of<sp/>a&gt;b<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a<sp/>&gt;<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>replacing<sp/>this<sp/>if<sp/>with<sp/>a<sp/>simple<sp/>&quot;return<sp/>0;&quot;<sp/>will<sp/>not<sp/>handle<sp/>the<sp/>case<sp/>with<sp/>negative<sp/>a<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a<sp/>&lt;<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b--;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>from<sp/>now<sp/>on,<sp/>the<sp/>asumption<sp/>a<sp/>&lt;=<sp/>b<sp/>is<sp/>ok<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a<sp/>&gt;=<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>&lt;=<sp/>c<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a<sp/>&lt;<sp/>c<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>&gt;<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>*ap<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>b<sp/>-=<sp/>a;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>*len<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>draw<sp/>procedures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/>x,y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Upper<sp/>left<sp/>position<sp/>of<sp/>the<sp/>line<sp/>within<sp/>the<sp/>pixel<sp/>buffer<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>of<sp/>the<sp/>line<sp/>in<sp/>pixel,<sp/>len<sp/>must<sp/>not<sp/>be<sp/>0</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/>dir<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/>horizontal<sp/>line<sp/>(left<sp/>to<sp/>right)</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1:<sp/>vertical<sp/>line<sp/>(top<sp/>to<sp/>bottom)</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>This<sp/>function<sp/>first<sp/>adjusts<sp/>the<sp/>y<sp/>position<sp/>to<sp/>the<sp/>local<sp/>buffer.<sp/>Then<sp/>it</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/>will<sp/>clip<sp/>the<sp/>line<sp/>and<sp/>call<sp/>u8g2_draw_low_level_hv_line()</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_draw_hv_line_2dir(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clipping<sp/>happens<sp/>before<sp/>the<sp/>display<sp/>rotation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>transform<sp/>to<sp/>pixel<sp/>buffer<sp/>coordinates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>y<sp/>-=<sp/>u8g2-&gt;pixel_curr_row;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>u8g2-&gt;ll_hvline(u8g2,<sp/>x,<sp/>y,<sp/>len,<sp/>dir);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/>This<sp/>is<sp/>the<sp/>toplevel<sp/>function<sp/>for<sp/>the<sp/>hv<sp/>line<sp/>draw<sp/>procedures.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/>This<sp/>function<sp/>should<sp/>be<sp/>called<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/>&quot;dir&quot;<sp/>may<sp/>have<sp/>4<sp/>directions:<sp/>0<sp/>(left<sp/>to<sp/>right),<sp/>1,<sp/>2,<sp/>3<sp/>(down<sp/>up)</highlight></codeline>
<codeline lineno="149"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_DrawHVLine(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len,<sp/>uint8_t<sp/>dir)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>a<sp/>call<sp/>to<sp/>the<sp/>callback<sp/>function<sp/>(e.g.<sp/>u8g2_draw_l90_r0).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>callback<sp/>may<sp/>rotate<sp/>the<sp/>hv<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>rotation<sp/>this<sp/>will<sp/>call<sp/>u8g2_draw_hv_line_4dir()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_CLIP_WINDOW_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;is_page_clip_window_intersection<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_CLIP_WINDOW_SUPPORT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>len<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>to<sp/>two<sp/>directions<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>len<sp/>&gt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>==<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>==<sp/>3<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y++;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>&amp;=<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clip<sp/>against<sp/>the<sp/>user<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&lt;<sp/>u8g2-&gt;user_y0<sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&gt;=<sp/>u8g2-&gt;user_y1<sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2_clip_intersection2(&amp;x,<sp/>&amp;len,<sp/>u8g2-&gt;user_x0,<sp/>u8g2-&gt;user_x1)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&lt;<sp/>u8g2-&gt;user_x0<sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&gt;=<sp/>u8g2-&gt;user_x1<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2_clip_intersection2(&amp;y,<sp/>&amp;len,<sp/>u8g2-&gt;user_y0,<sp/>u8g2-&gt;user_y1)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8g2-&gt;cb-&gt;draw_l90(u8g2,<sp/>x,<sp/>y,<sp/>len,<sp/>dir);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_DrawHLine(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>U8G2_WITH_INTERSECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>u8g2_IsIntersection(u8g2,<sp/>x,<sp/>y,<sp/>x+len,<sp/>y+1)<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif<sp/>/*<sp/>U8G2_WITH_INTERSECTION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/>x,<sp/>y,<sp/>len,<sp/>0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_DrawVLine(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y,<sp/>u8g2_uint_t<sp/>len)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>U8G2_WITH_INTERSECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>u8g2_IsIntersection(u8g2,<sp/>x,<sp/>y,<sp/>x+1,<sp/>y+len)<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif<sp/>/*<sp/>U8G2_WITH_INTERSECTION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/>x,<sp/>y,<sp/>len,<sp/>1);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_DrawPixel(u8g2_t<sp/>*u8g2,<sp/>u8g2_uint_t<sp/>x,<sp/>u8g2_uint_t<sp/>y)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8G2_WITH_INTERSECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&lt;<sp/>u8g2-&gt;user_y0<sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&gt;=<sp/>u8g2-&gt;user_y1<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&lt;<sp/>u8g2-&gt;user_x0<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&gt;=<sp/>u8g2-&gt;user_x1<sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8G2_WITH_INTERSECTION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>u8g2_DrawHVLine(u8g2,<sp/>x,<sp/>y,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/>Assign<sp/>the<sp/>draw<sp/>color<sp/>for<sp/>all<sp/>drawing<sp/>functions.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/>color<sp/>may<sp/>be<sp/>0<sp/>or<sp/>1.<sp/>The<sp/>actual<sp/>color<sp/>is<sp/>defined<sp/>by<sp/>the<sp/>display.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/>With<sp/>color<sp/>=<sp/>1<sp/>the<sp/>drawing<sp/>function<sp/>will<sp/>set<sp/>the<sp/>display<sp/>memory<sp/>to<sp/>1.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/>For<sp/>OLEDs<sp/>this<sp/>ususally<sp/>means,<sp/>that<sp/>the<sp/>pixel<sp/>is<sp/>enabled<sp/>and<sp/>the<sp/>LED<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/>at<sp/>the<sp/>pixel<sp/>is<sp/>turned<sp/>on.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/>On<sp/>an<sp/>LCD<sp/>it<sp/>usually<sp/>means<sp/>that<sp/>the<sp/>LCD<sp/>segment<sp/>of<sp/>the<sp/>pixel<sp/>is<sp/>enabled,<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/>which<sp/>absorbs<sp/>the<sp/>light.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/>For<sp/>eInk/ePaper<sp/>it<sp/>means<sp/>black<sp/>ink.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"></highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/>7<sp/>Jan<sp/>2017:<sp/>Allow<sp/>color<sp/>value<sp/>2<sp/>for<sp/>XOR<sp/>operation.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetDrawColor(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/>color)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>color;<sp/></highlight><highlight class="comment">/*<sp/>u8g2_SetDrawColor:<sp/>just<sp/>assign<sp/>the<sp/>argument<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>color<sp/>&gt;=<sp/>3<sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2-&gt;draw_color<sp/>=<sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>u8g2_SetDrawColor:<sp/>make<sp/>color<sp/>as<sp/>one<sp/>if<sp/>arg<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/helper/U8g2/clib/u8g2_hvline.c"/>
  </compounddef>
</doxygen>
