<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="u8g2__buffer_8c" kind="file" language="C++">
    <compoundname>u8g2_buffer.c</compoundname>
    <includes refid="u8g2_8h" local="yes">u8g2.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="2">
        <label>u8g2.h</label>
        <link refid="u8g2_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/helper/U8g2/clib/u8g2_buffer.c</label>
        <link refid="u8g2__buffer_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>u8x8.h</label>
        <link refid="u8x8_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="u8g2__buffer_8c_1a78b2ad9380a74451c5606006bcc8112a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_ClearBuffer</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_ClearBuffer</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="40" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a422abb028962418acd5831fe9dafd998" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8g2_send_tile_row</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t src_tile_row, uint8_t dest_tile_row)</argsstring>
        <name>u8g2_send_tile_row</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>src_tile_row</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dest_tile_row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="51" column="13" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="51" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a55d89b87938f4aa3069b22f16c27b75c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void u8g2_send_buffer</definition>
        <argsstring>(u8g2_t *u8g2) U8X8_NOINLINE</argsstring>
        <name>u8g2_send_buffer</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="72" column="13" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="72" bodyend="90" declfile="src/helper/U8g2/clib/u8g2_buffer.c" declline="71" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a2e078ed8964176d48796331a17378ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SendBuffer</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_SendBuffer</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="93" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a0d5833f7ddda345b9c0ed4854b51bfff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_SetBufferCurrTileRow</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t row)</argsstring>
        <name>u8g2_SetBufferCurrTileRow</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="100" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a5eb4fe70b927f7c6f5408495ca54b7d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_FirstPage</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_FirstPage</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="107" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="107" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1ac0bd8ef813eb3fc2a8fae01993fbd6a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t u8g2_NextPage</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_NextPage</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="116" column="9" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="116" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a7604500e5d8ca4ad6331a1fcb1a91285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_UpdateDisplayArea</definition>
        <argsstring>(u8g2_t *u8g2, uint8_t tx, uint8_t ty, uint8_t tw, uint8_t th)</argsstring>
        <name>u8g2_UpdateDisplayArea</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ty</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tw</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>th</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="153" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="153" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a2d8dd89598894ad23190622da91e5bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_UpdateDisplay</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_UpdateDisplay</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="178" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a75f89259c3874e3b8c64abf73f9c4045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_WriteBufferPBM</definition>
        <argsstring>(u8g2_t *u8g2, void(*out)(const char *s))</argsstring>
        <name>u8g2_WriteBufferPBM</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>void(*)(const char *s)</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="187" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1ac059bc7910b5268fca69df040545d5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_WriteBufferXBM</definition>
        <argsstring>(u8g2_t *u8g2, void(*out)(const char *s))</argsstring>
        <name>u8g2_WriteBufferXBM</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>void(*)(const char *s)</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="193" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a4ef13e40d5d1c16a06f225c5b3156794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_WriteBufferPBM2</definition>
        <argsstring>(u8g2_t *u8g2, void(*out)(const char *s))</argsstring>
        <name>u8g2_WriteBufferPBM2</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>void(*)(const char *s)</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="202" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="202" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__buffer_8c_1a654cfc73d411207f12773b357bbc0192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_WriteBufferXBM2</definition>
        <argsstring>(u8g2_t *u8g2, void(*out)(const char *s))</argsstring>
        <name>u8g2_WriteBufferXBM2</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>void(*)(const char *s)</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_buffer.c" line="208" column="6" bodyfile="src/helper/U8g2/clib/u8g2_buffer.c" bodystart="208" bodyend="212"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>u8g2_buffer.c<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Universal<sp/>8bit<sp/>Graphics<sp/>Library<sp/>(https://github.com/olikraus/u8g2/)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>olikraus@gmail.com</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.<sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;u8g2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_ClearBuffer(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>cnt<sp/>=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>cnt<sp/>*=<sp/>u8g2-&gt;tile_buf_height;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>cnt<sp/>*=<sp/>8;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>memset(u8g2-&gt;tile_buf_ptr,<sp/>0,<sp/>cnt);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_send_tile_row(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/>src_tile_row,<sp/>uint8_t<sp/>dest_tile_row)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*ptr;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>uint16_t<sp/>offset;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>uint8_t<sp/>w;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>src_tile_row;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/>u8g2-&gt;tile_buf_ptr;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>offset<sp/>*=<sp/>w;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>offset<sp/>*=<sp/>8;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>u8x8_DrawTile(u8g2_GetU8x8(u8g2),<sp/>0,<sp/>dest_tile_row,<sp/>w,<sp/>ptr);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/>write<sp/>the<sp/>buffer<sp/>to<sp/>the<sp/>display<sp/>RAM.<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>For<sp/>most<sp/>displays,<sp/>this<sp/>will<sp/>make<sp/>the<sp/>content<sp/>visible<sp/>to<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/>Some<sp/>displays<sp/>(like<sp/>the<sp/>SSD1606)<sp/>require<sp/>a<sp/>u8x8_RefreshDisplay()</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_send_buffer(u8g2_t<sp/>*u8g2)<sp/>U8X8_NOINLINE;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_send_buffer(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>uint8_t<sp/>src_row;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>uint8_t<sp/>src_max;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>uint8_t<sp/>dest_row;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>uint8_t<sp/>dest_max;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>src_row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>src_max<sp/>=<sp/>u8g2-&gt;tile_buf_height;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>dest_row<sp/>=<sp/>u8g2-&gt;tile_curr_row;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>dest_max<sp/>=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_send_tile_row(u8g2,<sp/>src_row,<sp/>dest_row);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>src_row++;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_row++;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>src_row<sp/>&lt;<sp/>src_max<sp/>&amp;&amp;<sp/>dest_row<sp/>&lt;<sp/>dest_max<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>same<sp/>as<sp/>u8g2_send_buffer<sp/>but<sp/>also<sp/>send<sp/>the<sp/>DISPLAY_REFRESH<sp/>message<sp/>(used<sp/>by<sp/>SSD1606)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SendBuffer(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>u8g2_send_buffer(u8g2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>u8x8_RefreshDisplay(<sp/>u8g2_GetU8x8(u8g2)<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_SetBufferCurrTileRow(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/>row)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>u8g2-&gt;tile_curr_row<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>u8g2-&gt;cb-&gt;update_dimension(u8g2);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>u8g2-&gt;cb-&gt;update_page_win(u8g2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_FirstPage(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;is_auto_page_clear<sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_ClearBuffer(u8g2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>u8g2_SetBufferCurrTileRow(u8g2,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">uint8_t<sp/>u8g2_NextPage(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>uint8_t<sp/>row;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>u8g2_send_buffer(u8g2);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>row<sp/>=<sp/>u8g2-&gt;tile_curr_row;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>row<sp/>+=<sp/>u8g2-&gt;tile_buf_height;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>row<sp/>&gt;=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_RefreshDisplay(<sp/>u8g2_GetU8x8(u8g2)<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;is_auto_page_clear<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_ClearBuffer(u8g2);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>u8g2_SetBufferCurrTileRow(u8g2,<sp/>row);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/>Description:</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/>Update<sp/>a<sp/>sub<sp/>area<sp/>of<sp/>the<sp/>display,<sp/>given<sp/>by<sp/>tile<sp/>position,<sp/>width<sp/>and<sp/>height.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>arguments<sp/>are<sp/>&quot;tile&quot;<sp/>coordinates.<sp/>Any<sp/>u8g2<sp/>rotation<sp/>is<sp/>ignored.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>procedure<sp/>only<sp/>checks<sp/>whether<sp/>full<sp/>buffer<sp/>mode<sp/>is<sp/>active.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>There<sp/>is<sp/>no<sp/>error<sp/>checking<sp/>for<sp/>the<sp/>arguments:<sp/>It<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/>user<sp/>to<sp/>ensure,<sp/>that<sp/>the<sp/>provided<sp/>arguments<sp/>are<sp/>correct.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/>Limitations:</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Only<sp/>available<sp/>in<sp/>full<sp/>buffer<sp/>mode<sp/>(will<sp/>not<sp/>do<sp/>anything<sp/>in<sp/>page<sp/>mode)</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Tile<sp/>positions<sp/>and<sp/>sizes<sp/>(pixel<sp/>position<sp/>divided<sp/>by<sp/>8)</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Any<sp/>display<sp/>rotation/mirror<sp/>is<sp/>ignored</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Only<sp/>works<sp/>with<sp/>displays,<sp/>which<sp/>support<sp/>U8x8<sp/>API</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Will<sp/>not<sp/>send<sp/>the<sp/>e-paper<sp/>refresh<sp/>message<sp/>(will<sp/>probably<sp/>not<sp/>work<sp/>with<sp/>e-paper<sp/>devices)</highlight></codeline>
<codeline lineno="152"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_UpdateDisplayArea(u8g2_t<sp/>*u8g2,<sp/>uint8_t<sp/><sp/>tx,<sp/>uint8_t<sp/>ty,<sp/>uint8_t<sp/>tw,<sp/>uint8_t<sp/>th)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>uint16_t<sp/>page_size;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*ptr;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check,<sp/>whether<sp/>we<sp/>are<sp/>in<sp/>full<sp/>buffer<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u8g2-&gt;tile_buf_height<sp/>!=<sp/>u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>in<sp/>full<sp/>buffer<sp/>mode,<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>page_size<sp/>=<sp/>u8g2-&gt;pixel_buf_width;<sp/><sp/></highlight><highlight class="comment">/*<sp/>8*u8g2-&gt;u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/>u8g2_GetBufferPtr(u8g2);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>tx*8;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>page_size*ty;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>th<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_DrawTile(<sp/>u8g2_GetU8x8(u8g2),<sp/>tx,<sp/>ty,<sp/>tw,<sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>page_size;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ty++;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>th--;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>same<sp/>as<sp/>sendBuffer,<sp/>but<sp/>does<sp/>not<sp/>send<sp/>the<sp/>ePaper<sp/>refresh<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_UpdateDisplay(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>u8g2_send_buffer(u8g2);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vertical_top<sp/>memory<sp/>architecture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_WriteBufferPBM(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*out)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s))</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>u8x8_capture_write_pbm_pre(u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>out);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>u8x8_capture_write_pbm_buffer(u8g2_GetBufferPtr(u8g2),<sp/>u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>u8x8_capture_get_pixel_1,<sp/>out);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_WriteBufferXBM(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*out)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s))</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>u8x8_capture_write_xbm_pre(u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>out);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>u8x8_capture_write_xbm_buffer(u8g2_GetBufferPtr(u8g2),<sp/>u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>u8x8_capture_get_pixel_1,<sp/>out);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>horizontal<sp/>right<sp/>memory<sp/>architecture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SH1122,<sp/>LD7032,<sp/>ST7920,<sp/>ST7986,<sp/>LC7981,<sp/>T6963,<sp/>SED1330,<sp/>RA8835,<sp/>MAX7219,<sp/>LS0<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_WriteBufferPBM2(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*out)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s))</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>u8x8_capture_write_pbm_pre(u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>out);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>u8x8_capture_write_pbm_buffer(u8g2_GetBufferPtr(u8g2),<sp/>u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>u8x8_capture_get_pixel_2,<sp/>out);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_WriteBufferXBM2(u8g2_t<sp/>*u8g2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*out)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s))</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>u8x8_capture_write_xbm_pre(u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>out);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>u8x8_capture_write_xbm_buffer(u8g2_GetBufferPtr(u8g2),<sp/>u8g2_GetBufferTileWidth(u8g2),<sp/>u8g2_GetBufferTileHeight(u8g2),<sp/>u8x8_capture_get_pixel_2,<sp/>out);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/helper/U8g2/clib/u8g2_buffer.c"/>
  </compounddef>
</doxygen>
