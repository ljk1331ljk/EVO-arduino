<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_u8x8lib_8cpp" kind="file" language="C++">
    <compoundname>U8x8lib.cpp</compoundname>
    <includes refid="_u8x8lib_8h" local="yes">U8x8lib.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/helper/U8g2/U8x8lib.cpp</label>
        <link refid="_u8x8lib_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>U8x8lib.h</label>
        <link refid="_u8x8lib_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>clib/u8x8.h</label>
        <link refid="u8x8_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>U8x8lib.cpp</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Arduino<sp/>specific<sp/>low<sp/>level<sp/>functions</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Universal<sp/>8bit<sp/>Graphics<sp/>Library<sp/>(https://github.com/olikraus/u8g2/)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>olikraus@gmail.com</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;U8x8lib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARDUINO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_HW_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SPI.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_HW_I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_HW_I2C_TEENSY3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;i2c_t3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Wire.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_2ND_HW_I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8X8_HAVE_HW_I2C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ARDUINO<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>U8X8::write(uint8_t<sp/>v)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dy<sp/>=<sp/>u8x8_pgm_read(u8x8.font<sp/>+<sp/>3);<sp/></highlight><highlight class="comment">/*<sp/>new<sp/>2019<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ty<sp/>+=<sp/>dy;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>tx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dx<sp/>=<sp/>u8x8_pgm_read(u8x8.font<sp/>+<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>new<sp/>2019<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_DrawGlyph(&amp;u8x8,<sp/>tx,<sp/>ty,<sp/>v);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>tx<sp/>+=<sp/>dx;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>ARDUINO<sp/>GPIO<sp/>&amp;<sp/>DELAY<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARDUINO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_USE_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_gpio_and_delay_arduino(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/>U8X8_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_GPIO_AND_DELAY_INIT:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>U8X8_PIN_CNT;<sp/>i++)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;pins[i]<sp/>!=<sp/>U8X8_PIN_NONE)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>U8X8_PIN_OUTPUT_CNT)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(u8x8-&gt;pins[i],<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INPUT_PULLUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(u8x8-&gt;pins[i],<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(u8x8-&gt;pins[i],<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(u8x8-&gt;pins[i],<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>case<sp/>is<sp/>not<sp/>compiled<sp/>for<sp/>any<sp/>AVR,<sp/>because<sp/>AVR<sp/>uC<sp/>are<sp/>so<sp/>slow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>that<sp/>this<sp/>delay<sp/>does<sp/>not<sp/>matter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_DELAY_NANO:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(arg_int<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_DELAY_10MICRO:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>at<sp/>the<sp/>moment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_DELAY_100NANO:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>at<sp/>the<sp/>moment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_DELAY_MILLI:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(arg_int);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_DELAY_I2C:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg_int<sp/>is<sp/>1<sp/>or<sp/>4:<sp/>100KHz<sp/>(5us)<sp/>or<sp/>400KHz<sp/>(1.25us)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>delayMicroseconds(arg_int<sp/>&lt;=<sp/>2<sp/>?<sp/>5<sp/>:<sp/>2);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_GPIO_I2C_CLOCK:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_GPIO_I2C_DATA:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg_int<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(u8x8_GetPinValue(u8x8,<sp/>msg),<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(u8x8_GetPinValue(u8x8,<sp/>msg),<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INPUT_PULLUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(u8x8_GetPinValue(u8x8,<sp/>msg),<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(u8x8_GetPinValue(u8x8,<sp/>msg),<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(u8x8_GetPinValue(u8x8,<sp/>msg),<sp/>1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>&gt;=<sp/>U8X8_MSG_GPIO(0))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>u8x8_GetPinValue(u8x8,<sp/>msg);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>U8X8_PIN_NONE)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8_GetPinIndex(u8x8,<sp/>msg)<sp/>&lt;<sp/>U8X8_PIN_OUTPUT_CNT)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(i,<sp/>arg_int);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8_GetPinIndex(u8x8,<sp/>msg)<sp/>==<sp/>U8X8_PIN_OUTPUT_CNT)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>yield()<sp/>for<sp/>the<sp/>first<sp/>pin<sp/>only,<sp/>u8x8<sp/>will<sp/>always<sp/>request<sp/>all<sp/>the<sp/>pins,<sp/>so<sp/>this<sp/>should<sp/>be<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8x8_SetGPIOResult(u8x8,<sp/>digitalRead(i)<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>U8X8_USE_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>3<sp/>WIRE<sp/>SOFTWARE<sp/>SPI<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/>replacement<sp/>for<sp/>a<sp/>more<sp/>faster<sp/>u8x8_byte_3wire_sw_spi</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/>in<sp/>general<sp/>u8x8_byte_3wire_sw_spi<sp/>could<sp/>be<sp/>a<sp/>fallback:</highlight></codeline>
<codeline lineno="187"><highlight class="comment"></highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/>uint8_t<sp/>u8x8_byte_arduino_3wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/>void<sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>u8x8_byte_3wire_sw_spi(u8x8,<sp/>msg,arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AVR_ARCH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AVR_ARCH__<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(U8X8_USE_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>pin<sp/>information<sp/>(very<sp/>strange),<sp/>so<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">uint8_t<sp/>u8x8_byte_arduino_3wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_3wire_sw_spi(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>__AVR_ARCH__<sp/>==<sp/>4<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>5<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>51<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>6<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>completely<sp/>replaces<sp/>u8x8_byte_4wire_sw_spi*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_3wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>uint8_t<sp/>takeover_edge<sp/>=<sp/>u8x8_GetSPIClockPhase(u8x8);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>uint16_t<sp/>b;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>static<sp/>vars<sp/>are<sp/>recalculated<sp/>in<sp/>U8X8_MSG_BYTE_START_TRANSFER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>so,<sp/>it<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>use<sp/>multiple<sp/>displays<sp/>with<sp/>different<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_clock_port;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_data_port;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>last_dc;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(takeover_edge<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_dc<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>|=<sp/>256;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>156,<sp/>check<sp/>for<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>F_CPU<sp/>&lt;=<sp/>17000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>9;<sp/>i++)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>9;<sp/>i++)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>256)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>|=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_dc<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>|=<sp/>256;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>156,<sp/>check<sp/>for<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>F_CPU<sp/>&lt;=<sp/>17000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>9;<sp/>i++)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>9;<sp/>i++)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>256)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>|=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>wait<sp/>required<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>SPI:<sp/>setup<sp/>correct<sp/>level<sp/>of<sp/>the<sp/>clock<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetSPIClock(u8x8,<sp/>u8x8_GetSPIClockPhase(u8x8));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>last_dc<sp/>=<sp/>arg_int;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_enable_level);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_clock_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_clock_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_clock_n_mask<sp/>=<sp/>~arduino_clock_mask;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_DATA]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_data_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_DATA]));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_data_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_DATA]);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_data_n_mask<sp/>=<sp/>~arduino_data_mask;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">uint8_t<sp/>u8x8_byte_arduino_3wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_3wire_sw_spi(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>4<sp/>WIRE<sp/>SOFTWARE<sp/>SPI<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/>replacement<sp/>for<sp/>a<sp/>more<sp/>faster<sp/>u8x8_byte_4wire_sw_spi</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/>in<sp/>general<sp/>u8x8_byte_4wire_sw_spi<sp/>could<sp/>be<sp/>a<sp/>fallback:</highlight></codeline>
<codeline lineno="366"><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/>uint8_t<sp/>u8x8_byte_arduino_4wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/>void<sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>u8x8_byte_4wire_sw_spi(u8x8,<sp/>msg,arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"></highlight></codeline>
<codeline lineno="373"><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AVR_ARCH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AVR_ARCH__<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(U8X8_USE_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>pin<sp/>information<sp/>(very<sp/>strange),<sp/>so<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">uint8_t<sp/>u8x8_byte_arduino_4wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_4wire_sw_spi(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>__AVR_ARCH__<sp/>==<sp/>4<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>5<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>51<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>6<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>completely<sp/>replaces<sp/>u8x8_byte_4wire_sw_spi*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_4wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>uint8_t<sp/>SREG_backup;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i,<sp/>b;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>uint8_t<sp/>takeover_edge<sp/>=<sp/>u8x8_GetSPIClockPhase(u8x8);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>not_takeover_edge<sp/>=<sp/>1<sp/>-<sp/>takeover_edge;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>static<sp/>vars<sp/>are<sp/>recalculated<sp/>in<sp/>U8X8_MSG_BYTE_START_TRANSFER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>so,<sp/>it<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>use<sp/>multiple<sp/>displays<sp/>with<sp/>different<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_clock_port;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_data_port;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(takeover_edge<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SREG_backup<sp/>=<sp/>SREG;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>156,<sp/>check<sp/>for<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>F_CPU<sp/>&lt;=<sp/>17000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>128)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>|=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SREG<sp/>=<sp/>SREG_backup;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SREG_backup<sp/>=<sp/>SREG;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>156,<sp/>check<sp/>for<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>F_CPU<sp/>&lt;=<sp/>17000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>128)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>|=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SREG<sp/>=<sp/>SREG_backup;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>wait<sp/>required<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>SPI:<sp/>setup<sp/>correct<sp/>level<sp/>of<sp/>the<sp/>clock<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetSPIClock(u8x8,<sp/>u8x8_GetSPIClockPhase(u8x8));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetDC(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_enable_level);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_clock_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_clock_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_clock_n_mask<sp/>=<sp/>~arduino_clock_mask;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_DATA]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_data_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_DATA]));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_data_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_DATA]);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_data_n_mask<sp/>=<sp/>~arduino_data_mask;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__SAM3X8E__)<sp/></highlight><highlight class="comment">/*<sp/>Arduino<sp/>DUE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>completely<sp/>replaces<sp/>u8x8_byte_4wire_sw_spi*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_4wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i,<sp/>b;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>uint16_t<sp/>us<sp/>=<sp/>((u8x8-&gt;display_info-&gt;sck_pulse_width_ns<sp/>+<sp/>999)<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>uint8_t<sp/>takeover_edge<sp/>=<sp/>u8x8_GetSPIClockPhase(u8x8);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>not_takeover_edge<sp/>=<sp/>1<sp/>-<sp/>takeover_edge;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>static<sp/>vars<sp/>are<sp/>recalculated<sp/>in<sp/>U8X8_MSG_BYTE_START_TRANSFER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>so,<sp/>it<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>use<sp/>multiple<sp/>displays<sp/>with<sp/>different<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/>static<sp/>volatile<sp/>uint32_t<sp/>*arduino_clock_port;</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/>static<sp/>uint32_t<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/>static<sp/>uint32_t<sp/>arduino_clock_n_mask;</highlight></codeline>
<codeline lineno="549"><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/>static<sp/>volatile<sp/>uint32_t<sp/>*arduino_data_port;</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/>static<sp/>uint32_t<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/>static<sp/>uint32_t<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WoReg<sp/>*arduinoSetClockPort,<sp/>*arduinoUnsetClockPort;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>WoReg<sp/>*arduinoSetDataPort,<sp/>*arduinoUnsetDataPort;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(takeover_edge<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>b<sp/>&amp;<sp/>128<sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>|=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>128)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoSetDataPort<sp/>=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoUnsetDataPort<sp/>=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delayMicroseconds(us);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoSetClockPort<sp/>=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(us);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoUnsetClockPort<sp/>=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>b<sp/>&amp;<sp/>128<sp/>)</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>|=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port<sp/>&amp;=<sp/>arduino_data_n_mask;</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>128)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoSetDataPort<sp/>=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoUnsetDataPort<sp/>=<sp/>arduino_data_mask;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delayMicroseconds(us);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*arduino_clock_port<sp/>&amp;=<sp/>arduino_clock_n_mask;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoUnsetClockPort<sp/>=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(us);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*arduino_clock_port<sp/>|=<sp/>arduino_clock_mask;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduinoSetClockPort<sp/>=<sp/>arduino_clock_mask;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>wait<sp/>required<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>SPI:<sp/>setup<sp/>correct<sp/>level<sp/>of<sp/>the<sp/>clock<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetSPIClock(u8x8,<sp/>u8x8_GetSPIClockPhase(u8x8));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetDC(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_enable_level);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/>arduino_clock_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]));</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>arduino_clock_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]);</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/>arduino_clock_n_mask<sp/>=<sp/>~arduino_clock_mask;</highlight></codeline>
<codeline lineno="653"><highlight class="comment"></highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/>arduino_data_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_DATA]));</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/>arduino_data_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_DATA]);</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/>arduino_data_n_mask<sp/>=<sp/>~arduino_data_mask;</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>arduinoSetClockPort<sp/>=<sp/>&amp;digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK])-&gt;PIO_SODR;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>arduinoUnsetClockPort<sp/>=<sp/>&amp;digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK])-&gt;PIO_CODR;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_clock_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>arduinoSetDataPort<sp/>=<sp/>&amp;digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_DATA])-&gt;PIO_SODR;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>arduinoUnsetDataPort<sp/>=<sp/>&amp;digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_SPI_DATA])-&gt;PIO_CODR;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_data_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_SPI_DATA]);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal">uint8_t<sp/>u8x8_byte_arduino_4wire_sw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_4wire_sw_spi(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>3<sp/>WIRE<sp/>HARDWARE<sp/>SPI<sp/>with<sp/>8<sp/>bit<sp/>HW<sp/>SPI<sp/>Subsystem<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="690"><highlight class="comment">references:</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/>https://github.com/olikraus/ucglib/blob/master/cppsrc/Ucglib.cpp#L581</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/>https://github.com/olikraus/u8g2/issues/1041</highlight></codeline>
<codeline lineno="693"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_hw_spi_3w_buffer[9];</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_hw_spi_3w_bytepos;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>arduino_hw_spi_3w_dc;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>dc==0,<sp/>256<sp/>=<sp/>dc==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arduino_hw_spi_3w_init()</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>memset(arduino_hw_spi_3w_buffer,<sp/>0,<sp/>9);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>arduino_hw_spi_3w_bytepos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arduino_hw_spi_3w_flush(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_HW_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>arduino_hw_spi_3w_bytepos;<sp/>i++)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.transfer(arduino_hw_spi_3w_buffer[i]);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arduino_hw_spi_3w_sendbyte(uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>val;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>lsb;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>msb;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}<sp/>data16;<sp/></highlight><highlight class="comment">//<sp/>well<sp/>well,<sp/>not<sp/>legal<sp/>ISO<sp/>9899<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>data16.val<sp/>=<sp/>(arduino_hw_spi_3w_dc<sp/>+<sp/>data)<sp/>&lt;&lt;<sp/>(7<sp/>-<sp/>arduino_hw_spi_3w_bytepos);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__BYTE_ORDER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__BYTE_ORDER__<sp/>==<sp/>__ORDER_LITTLE_ENDIAN__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>arduino_hw_spi_3w_buffer[arduino_hw_spi_3w_bytepos]<sp/>|=<sp/>data16.msb;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>++arduino_hw_spi_3w_bytepos;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>arduino_hw_spi_3w_buffer[arduino_hw_spi_3w_bytepos]<sp/>|=<sp/>data16.lsb;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>arduino_hw_spi_3w_buffer[arduino_hw_spi_3w_bytepos]<sp/>|=<sp/>data16.lsb;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>++arduino_hw_spi_3w_bytepos;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>arduino_hw_spi_3w_buffer[arduino_hw_spi_3w_bytepos]<sp/>|=<sp/>data16.msb;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>__BYTE_ORDER__<sp/><sp/>not<sp/>defined<sp/>(no<sp/>gcc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assume<sp/>little<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>arduino_hw_spi_3w_buffer[arduino_hw_spi_3w_bytepos]<sp/>|=<sp/>data16.msb;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>++arduino_hw_spi_3w_bytepos;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>arduino_hw_spi_3w_buffer[arduino_hw_spi_3w_bytepos]<sp/>|=<sp/>data16.lsb;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arduino_hw_spi_3w_bytepos<sp/>==<sp/>8)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_hw_spi_3w_flush();</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_hw_spi_3w_init();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_3wire_hw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_HW_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>uint8_t<sp/>internal_spi_mode;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_hw_spi_3w_sendbyte((uint8_t)*data);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;bus_clock<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>769<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8-&gt;bus_clock<sp/>=<sp/>u8x8-&gt;display_info-&gt;sck_clock_hz;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP_PLATFORM)<sp/>||<sp/>defined(ARDUINO_ARCH_ESP32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ESP32<sp/>has<sp/>the<sp/>following<sp/>begin:<sp/>SPI.begin(int8_t<sp/>sck=SCK,<sp/>int8_t<sp/>miso=MISO,<sp/>int8_t<sp/>mosi=MOSI,<sp/>int8_t<sp/>ss=-1);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>sure<sp/>about<sp/>ESP8266<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>bugfix<sp/>from<sp/>PR<sp/>2123<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK]<sp/>!=<sp/>U8X8_PIN_NONE<sp/>&amp;&amp;<sp/>u8x8-&gt;pins[U8X8_PIN_I2C_DATA]<sp/>!=<sp/>U8X8_PIN_NONE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]<sp/>!=<sp/>U8X8_PIN_NONE<sp/>&amp;&amp;<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_DATA]<sp/>!=<sp/>U8X8_PIN_NONE)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI.begin(int8_t<sp/>sck=SCK,<sp/>int8_t<sp/>miso=MISO,<sp/>int8_t<sp/>mosi=MOSI,<sp/>int8_t<sp/>ss=-1);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>actually<sp/>MISO<sp/>is<sp/>not<sp/>used,<sp/>but<sp/>what<sp/>else<sp/>could<sp/>be<sp/>used<sp/>here???<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI.begin(u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK],<sp/>MISO,<sp/>u8x8-&gt;pins[U8X8_PIN_I2C_DATA]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.begin(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK],<sp/>MISO,<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_DATA]);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_hw_spi_3w_dc<sp/>=<sp/>arg_int<sp/>?<sp/>256<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>mode<sp/>has<sp/>to<sp/>be<sp/>mapped<sp/>to<sp/>the<sp/>mode<sp/>of<sp/>the<sp/>current<sp/>controller;</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>least<sp/>Uno,<sp/>Due,<sp/>101<sp/>have<sp/>different<sp/>SPI_MODEx<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;spi_mode)</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE1;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE2;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE3;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>10600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.beginTransaction(</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPISettings(u8x8-&gt;bus_clock,<sp/>MSBFIRST,<sp/>internal_spi_mode));</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;sck_pulse_width_ns<sp/>&lt;<sp/>70)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV2);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;sck_pulse_width_ns<sp/>&lt;<sp/>140)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV4);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV8);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setDataMode(internal_spi_mode);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setBitOrder(MSBFIRST);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_enable_level);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8x8,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U8X8_MSG_DELAY_NANO,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_hw_spi_3w_init();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8x8,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U8X8_MSG_DELAY_NANO,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arduino_hw_spi_3w_bytepos)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_hw_spi_3w_flush();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>10600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.endTransaction();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.end();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>U8X8_HAVE_HW_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>4<sp/>WIRE<sp/>HARDWARE<sp/>SPI<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_USE_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_hw_spi(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_HW_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(ESP_PLATFORM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>uint8_t<sp/>internal_spi_mode;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP_PLATFORM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T.M.L<sp/>2023-02-28:<sp/>use<sp/>the<sp/>block<sp/>transfer<sp/>function<sp/>on<sp/>ESP,<sp/>which<sp/>does<sp/>not<sp/>overwrite<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.writeBytes((uint8_t<sp/>*)arg_ptr,<sp/>arg_int);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.6.5<sp/>offers<sp/>a<sp/>block<sp/>transfer,<sp/>but<sp/>the<sp/>problem<sp/>is,<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>is<sp/>overwritten<sp/>with<sp/>the<sp/>incoming<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>can<sp/>not<sp/>be<sp/>used...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI.transfer((uint8_t<sp/>*)arg_ptr,<sp/>arg_int);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.transfer((uint8_t)*data);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;bus_clock<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>769<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8-&gt;bus_clock<sp/>=<sp/>u8x8-&gt;display_info-&gt;sck_clock_hz;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>wait<sp/>required<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>SPI:<sp/>setup<sp/>correct<sp/>level<sp/>of<sp/>the<sp/>clock<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed,<sp/>use<sp/>SPI.begin()<sp/>instead:<sp/>pinMode(11,<sp/>OUTPUT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed,<sp/>use<sp/>SPI.begin()<sp/>instead:<sp/>pinMode(13,<sp/>OUTPUT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed,<sp/>use<sp/>SPI.begin()<sp/>instead:<sp/>digitalWrite(13,<sp/>u8x8_GetSPIClockPhase(u8x8));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>hardware<sp/>with<sp/>SPI.begin()<sp/>instead<sp/>of<sp/>previous<sp/>digitalWrite()<sp/>and<sp/>pinMode()<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>#377<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>#378:<sp/>removed<sp/>ESP8266<sp/>support,<sp/>which<sp/>is<sp/>implemented<sp/>differently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP_PLATFORM)<sp/>||<sp/>defined(ARDUINO_ARCH_ESP32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ESP32<sp/>has<sp/>the<sp/>following<sp/>begin:<sp/>SPI.begin(int8_t<sp/>sck=SCK,<sp/>int8_t<sp/>miso=MISO,<sp/>int8_t<sp/>mosi=MOSI,<sp/>int8_t<sp/>ss=-1);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>sure<sp/>about<sp/>ESP8266<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK]<sp/>!=<sp/>U8X8_PIN_NONE<sp/>&amp;&amp;<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_DATA]<sp/>!=<sp/>U8X8_PIN_NONE)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI.begin(int8_t<sp/>sck=SCK,<sp/>int8_t<sp/>miso=MISO,<sp/>int8_t<sp/>mosi=MOSI,<sp/>int8_t<sp/>ss=-1);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>actually<sp/>MISO<sp/>is<sp/>not<sp/>used,<sp/>but<sp/>what<sp/>else<sp/>could<sp/>be<sp/>used<sp/>here???<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.begin(u8x8-&gt;pins[U8X8_PIN_SPI_CLOCK],<sp/>MISO,<sp/>u8x8-&gt;pins[U8X8_PIN_SPI_DATA]);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetDC(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>mode<sp/>has<sp/>to<sp/>be<sp/>mapped<sp/>to<sp/>the<sp/>mode<sp/>of<sp/>the<sp/>current<sp/>controller,<sp/>at<sp/>least<sp/>Uno,<sp/>Due,<sp/>101<sp/>have<sp/>different<sp/>SPI_MODEx<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;spi_mode)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE1;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE2;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE3;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>10600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.beginTransaction(SPISettings(u8x8-&gt;bus_clock,<sp/>MSBFIRST,<sp/>internal_spi_mode));</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;sck_pulse_width_ns<sp/>&lt;<sp/>70)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV2);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;sck_pulse_width_ns<sp/>&lt;<sp/>140)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV4);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV8);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setDataMode(internal_spi_mode);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setBitOrder(MSBFIRST);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_enable_level);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>10600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.endTransaction();</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.end();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>U8X8_HAVE_HW_SPI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>U8X8_HAVE_HW_SPI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>issue<sp/>#244<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_2nd_hw_spi(U8X8_UNUSED<sp/>u8x8_t<sp/>*u8x8,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>msg,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>arg_int,<sp/>U8X8_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_2ND_HW_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>uint8_t<sp/>internal_spi_mode;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.6.5<sp/>offers<sp/>a<sp/>block<sp/>transfer,<sp/>but<sp/>the<sp/>problem<sp/>is,<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>is<sp/>overwritten<sp/>with<sp/>the<sp/>incoming<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>can<sp/>not<sp/>be<sp/>used...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI.transfer((uint8_t<sp/>*)arg_ptr,<sp/>arg_int);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI1.transfer((uint8_t)*data);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;bus_clock<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>769<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8-&gt;bus_clock<sp/>=<sp/>u8x8-&gt;display_info-&gt;sck_clock_hz;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>wait<sp/>required<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>SPI1:<sp/>setup<sp/>correct<sp/>level<sp/>of<sp/>the<sp/>clock<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed,<sp/>use<sp/>SPI.begin()<sp/>instead:<sp/>pinMode(11,<sp/>OUTPUT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed,<sp/>use<sp/>SPI.begin()<sp/>instead:<sp/>pinMode(13,<sp/>OUTPUT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed,<sp/>use<sp/>SPI.begin()<sp/>instead:<sp/>digitalWrite(13,<sp/>u8x8_GetSPIClockPhase(u8x8));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>hardware<sp/>with<sp/>SPI.begin()<sp/>instead<sp/>of<sp/>previous<sp/>digitalWrite()<sp/>and<sp/>pinMode()<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI1.begin();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetDC(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI1<sp/>mode<sp/>has<sp/>to<sp/>be<sp/>mapped<sp/>to<sp/>the<sp/>mode<sp/>of<sp/>the<sp/>current<sp/>controller,<sp/>at<sp/>least<sp/>Uno,<sp/>Due,<sp/>101<sp/>have<sp/>different<sp/>SPI_MODEx<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;spi_mode)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE1;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE2;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>internal_spi_mode<sp/>=<sp/>SPI_MODE3;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>10600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI1.beginTransaction(SPISettings(u8x8-&gt;bus_clock,<sp/>MSBFIRST,<sp/>internal_spi_mode));</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI1.begin();</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;sck_pulse_width_ns<sp/>&lt;<sp/>70)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI1.setClockDivider(SPI_CLOCK_DIV2);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;display_info-&gt;sck_pulse_width_ns<sp/>&lt;<sp/>140)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI1.setClockDivider(SPI_CLOCK_DIV4);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI1.setClockDivider(SPI_CLOCK_DIV8);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI1.setDataMode(internal_spi_mode);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI1.setBitOrder(MSBFIRST);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_enable_level);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>10600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI1.endTransaction();</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI1.end();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fast<sp/>SW<sp/>I2C<sp/>for<sp/>AVR<sp/>uC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(U8X8_USE_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>pin<sp/>information<sp/>(very<sp/>strange),<sp/>so<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_sw_i2c(U8X8_UNUSED<sp/>u8x8_t<sp/>*u8x8,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>msg,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>arg_int,<sp/>U8X8_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_sw_i2c(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(U8X8_USE_ARDUINO_AVR_SW_I2C_OPTIMIZATION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_sw_i2c(U8X8_UNUSED<sp/>u8x8_t<sp/>*u8x8,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>msg,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>arg_int,<sp/>U8X8_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_sw_i2c(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>__AVR_ARCH__<sp/>==<sp/>4<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>5<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>51<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>6<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>static<sp/>vars<sp/>are<sp/>recalculated<sp/>in<sp/>U8X8_MSG_BYTE_START_TRANSFER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>so,<sp/>it<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>use<sp/>multiple<sp/>displays<sp/>with<sp/>different<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_i2c_clock_port;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_i2c_clock_mask;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_i2c_clock_n_mask;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_i2c_data_port;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_i2c_data_mask;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_i2c_data_n_mask;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/>software<sp/>i2c,</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/><sp/>ignores<sp/>ACK<sp/>response<sp/>(which<sp/>is<sp/>anyway<sp/>not<sp/>provided<sp/>by<sp/>some<sp/>displays)</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/><sp/>also<sp/>does<sp/>not<sp/>allow<sp/>reading<sp/>from<sp/>the<sp/>device</highlight></codeline>
<codeline lineno="1148"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_delay(u8x8_t<sp/>*u8x8)<sp/>U8X8_NOINLINE;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_delay(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_10MICRO,<sp/>u8x8-&gt;display_info-&gt;i2c_bus_clock_100kHz);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_I2C,<sp/>u8x8-&gt;display_info-&gt;i2c_bus_clock_100kHz);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_init(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>*arduino_i2c_clock_port<sp/>|=<sp/>arduino_i2c_clock_mask;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>*arduino_i2c_data_port<sp/>|=<sp/>arduino_i2c_data_mask;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>actually,<sp/>the<sp/>scl<sp/>line<sp/>is<sp/>not<sp/>observed,<sp/>so<sp/>this<sp/>procedure<sp/>does<sp/>not<sp/>return<sp/>a<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_read_scl_and_delay(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>as<sp/>input<sp/>(line<sp/>will<sp/>be<sp/>high)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>*arduino_i2c_clock_port<sp/>|=<sp/>arduino_i2c_clock_mask;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_clear_scl(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>*arduino_i2c_clock_port<sp/>&amp;=<sp/>arduino_i2c_clock_n_mask;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_read_sda(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>as<sp/>input<sp/>(line<sp/>will<sp/>be<sp/>high)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>*arduino_i2c_data_port<sp/>|=<sp/>arduino_i2c_data_mask;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_clear_sda(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>open<sp/>collector<sp/>and<sp/>drive<sp/>low<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>*arduino_i2c_data_port<sp/>&amp;=<sp/>arduino_i2c_data_n_mask;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_start(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;i2c_started<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>already<sp/>started:<sp/>do<sp/>restart<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_read_sda(u8x8);<sp/></highlight><highlight class="comment">/*<sp/>SDA<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_read_scl_and_delay(u8x8);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>i2c_read_sda(u8x8);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>the<sp/>start<sp/>condition,<sp/>both<sp/>lines<sp/>go<sp/>from<sp/>1<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>i2c_clear_sda(u8x8);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>i2c_clear_scl(u8x8);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>u8x8-&gt;i2c_started<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_stop(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>SDA<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>i2c_clear_sda(u8x8);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>release<sp/>all<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>i2c_read_scl_and_delay(u8x8);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>SDA<sp/>to<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>i2c_read_sda(u8x8);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>u8x8-&gt;i2c_started<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_write_bit(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_read_sda(u8x8);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_clear_sda(u8x8);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>i2c_read_scl_and_delay(u8x8);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/>i2c_clear_scl(u8x8);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_read_bit(u8x8_t<sp/>*u8x8)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>val;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>drive<sp/>SDA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>i2c_read_sda(u8x8);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>i2c_read_scl_and_delay(u8x8);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>i2c_read_sda(u8x8);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>i2c_delay(u8x8);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>i2c_clear_scl(u8x8);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>val;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c_write_byte(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>b)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>128);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>64);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>32);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>16);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>8);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>4);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>2);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>i2c_write_bit(u8x8,<sp/>b<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>ack<sp/>from<sp/>client<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>0:<sp/>ack<sp/>was<sp/>given<sp/>by<sp/>client<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1:<sp/>nothing<sp/>happend<sp/>during<sp/>ack<sp/>cycle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>i2c_read_bit(u8x8);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_sw_i2c(U8X8_UNUSED<sp/>u8x8_t<sp/>*u8x8,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>msg,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>arg_int,<sp/>U8X8_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i2c_write_byte(u8x8,<sp/>*data);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK],<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK],<sp/>1);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(u8x8-&gt;pins[U8X8_PIN_I2C_DATA],<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(u8x8-&gt;pins[U8X8_PIN_I2C_DATA],<sp/>1);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_init(u8x8);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_i2c_clock_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK]));</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_i2c_clock_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK]);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_i2c_clock_n_mask<sp/>=<sp/>~arduino_i2c_clock_mask;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_I2C_DATA]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_i2c_data_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_I2C_DATA]));</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_i2c_data_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_I2C_DATA]);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_i2c_data_n_mask<sp/>=<sp/>~arduino_i2c_data_mask;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_start(u8x8);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_write_byte(u8x8,<sp/>u8x8_GetI2CAddress(u8x8));</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_stop(u8x8);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>not<sp/>AVR<sp/>architecture,<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_sw_i2c(U8X8_UNUSED<sp/>u8x8_t<sp/>*u8x8,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>msg,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>arg_int,<sp/>U8X8_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_sw_i2c(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>HARDWARE<sp/>I2C<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_hw_i2c(U8X8_UNUSED<sp/>u8x8_t<sp/>*u8x8,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>msg,<sp/>U8X8_UNUSED<sp/>uint8_t<sp/>arg_int,<sp/>U8X8_UNUSED<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_HAVE_HW_I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.write((uint8_t<sp/>*)arg_ptr,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)arg_int);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;bus_clock<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>issue<sp/>769<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8-&gt;bus_clock<sp/>=<sp/>u8x8-&gt;display_info-&gt;i2c_bus_clock_100kHz<sp/>*<sp/>100000UL;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP8266)<sp/>||<sp/>defined(ARDUINO_ARCH_ESP8266)<sp/>||<sp/>defined(ESP_PLATFORM)<sp/>||<sp/>defined(ARDUINO_ARCH_ESP32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>ESP8266/ESP32,<sp/>Wire.begin<sp/>has<sp/>two<sp/>more<sp/>arguments:<sp/>clock<sp/>and<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK]<sp/>!=<sp/>U8X8_PIN_NONE<sp/>&amp;&amp;<sp/>u8x8-&gt;pins[U8X8_PIN_I2C_DATA]<sp/>!=<sp/>U8X8_PIN_NONE)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>argument<sp/>for<sp/>the<sp/>wire<sp/>lib<sp/>is<sp/>the<sp/>clock<sp/>pin.<sp/>In<sp/>u8g2,<sp/>the<sp/>first<sp/>argument<sp/>of<sp/>the<sp/><sp/>clock<sp/>pin<sp/>in<sp/>the<sp/>clock/data<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Wire.begin((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)u8x8-&gt;pins[U8X8_PIN_I2C_DATA],<sp/>u8x8-&gt;pins[U8X8_PIN_I2C_CLOCK]);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>10600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>sure<sp/>when<sp/>the<sp/>setClock<sp/>function<sp/>was<sp/>introduced,<sp/>but<sp/>it<sp/>is<sp/>there<sp/>since<sp/>1.6.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>is<sp/>any<sp/>error<sp/>with<sp/>Wire.setClock()<sp/>just<sp/>remove<sp/>this<sp/>function<sp/>call<sp/>by<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>defining<sp/>U8X8_DO_NOT_SET_WIRE_CLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>U8X8_DO_NOT_SET_WIRE_CLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.setClock(u8x8-&gt;bus_clock);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.beginTransmission(u8x8_GetI2CAddress(u8x8)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>U8X8_USE_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/><sp/>replacement<sp/>for<sp/>a<sp/>more<sp/>faster<sp/>u8x8_byte_8bit_8080mode</highlight></codeline>
<codeline lineno="1388"><highlight class="comment"><sp/><sp/>in<sp/>general<sp/>u8x8_byte_8bit_8080mode<sp/>could<sp/>be<sp/>a<sp/>fallback:</highlight></codeline>
<codeline lineno="1389"><highlight class="comment"></highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/><sp/>uint8_t<sp/>u8x8_byte_arduino_8bit_8080mode(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/>void<sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>u8x8_byte_8bit_8080mode(u8x8,<sp/>msg,arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"></highlight></codeline>
<codeline lineno="1395"><highlight class="comment"></highlight></codeline>
<codeline lineno="1396"><highlight class="comment"></highlight></codeline>
<codeline lineno="1397"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AVR_ARCH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AVR_ARCH__<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(U8X8_USE_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>pin<sp/>information<sp/>(very<sp/>strange),<sp/>so<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_8bit_8080mode(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_8bit_8080mode(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>__AVR_ARCH__<sp/>==<sp/>4<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>5<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>51<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>6<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>completly<sp/>replaces<sp/>u8x8_byte_8bit_8080mode*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_8bit_8080mode(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i,<sp/>b;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>static<sp/>vars<sp/>are<sp/>recalculated<sp/>in<sp/>U8X8_MSG_BYTE_START_TRANSFER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>so,<sp/>it<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>use<sp/>multiple<sp/>displays<sp/>with<sp/>different<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_e_port;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_e_mask;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_e_n_mask;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_data_port[8];</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_mask[8];</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_n_mask[8];</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port[i]<sp/>|=<sp/>arduino_data_mask[i];</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port[i]<sp/>&amp;=<sp/>arduino_data_n_mask[i];</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_e_port<sp/>&amp;=<sp/>arduino_e_n_mask;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AVR<sp/>Architecture<sp/>is<sp/>very<sp/>slow,<sp/>extra<sp/>call<sp/>is<sp/>not<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;sda_setup_time_ns);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;data_setup_time_ns);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_e_port<sp/>|=<sp/>arduino_e_mask;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AVR<sp/>Architecture<sp/>is<sp/>very<sp/>slow,<sp/>extra<sp/>call<sp/>is<sp/>not<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;sck_pulse_width_ns);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;write_pulse_width_ns);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>wait<sp/>required<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ensure<sp/>that<sp/>the<sp/>enable<sp/>signal<sp/>is<sp/>high<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_call(u8x8,<sp/>U8X8_MSG_GPIO_E,<sp/>1);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetDC(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_enable_level);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_E]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_e_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_E]));</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_e_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_E]);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_e_n_mask<sp/>=<sp/>~arduino_e_mask;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_D0]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_data_port[i]<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_D0<sp/>+<sp/>i]));</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_data_mask[i]<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_D0<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_data_n_mask[i]<sp/>=<sp/>~arduino_data_mask[i];</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_8bit_8080mode(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_8bit_8080mode(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="comment">/*=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/>replacement<sp/>for<sp/>a<sp/>more<sp/>faster<sp/>u8x8_byte_ks0108</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/><sp/>in<sp/>general<sp/>u8x8_byte_ks0108<sp/>could<sp/>be<sp/>a<sp/>fallback:</highlight></codeline>
<codeline lineno="1516"><highlight class="comment"></highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/>uint8_t<sp/>u8x8_byte_arduino_ks0108(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/>void<sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>u8x8_byte_ks0108(u8x8,<sp/>msg,arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="comment"></highlight></codeline>
<codeline lineno="1522"><highlight class="comment"></highlight></codeline>
<codeline lineno="1523"><highlight class="comment"></highlight></codeline>
<codeline lineno="1524"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AVR_ARCH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AVR_ARCH__<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(U8X8_USE_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>pin<sp/>information<sp/>(very<sp/>strange),<sp/>so<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_ks0108(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_ks0108(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>__AVR_ARCH__<sp/>==<sp/>4<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>5<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>51<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>6<sp/>||<sp/>__AVR_ARCH__<sp/>==<sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>completly<sp/>replaces<sp/>u8x8_byte_ks0108*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_ks0108(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i,<sp/>b;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*data;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>static<sp/>vars<sp/>are<sp/>recalculated<sp/>in<sp/>U8X8_MSG_BYTE_START_TRANSFER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>so,<sp/>it<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>use<sp/>multiple<sp/>displays<sp/>with<sp/>different<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_e_port;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_e_mask;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_e_n_mask;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*arduino_data_port[8];</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_mask[8];</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>arduino_data_n_mask[8];</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SEND:</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(uint8_t<sp/>*)arg_ptr;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg_int<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg_int--;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port[i]<sp/>|=<sp/>arduino_data_mask[i];</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_data_port[i]<sp/>&amp;=<sp/>arduino_data_n_mask[i];</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_e_port<sp/>|=<sp/>arduino_e_mask;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AVR<sp/>Architecture<sp/>is<sp/>very<sp/>slow,<sp/>extra<sp/>call<sp/>is<sp/>not<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;data_setup_time_ns);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*arduino_e_port<sp/>&amp;=<sp/>arduino_e_n_mask;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AVR<sp/>Architecture<sp/>is<sp/>very<sp/>slow,<sp/>extra<sp/>call<sp/>is<sp/>not<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8x8_gpio_Delay(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;write_pulse_width_ns);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_INIT:</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>chipselect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetCS(u8x8,<sp/>u8x8-&gt;display_info-&gt;chip_disable_level);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>wait<sp/>required<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ensure<sp/>that<sp/>the<sp/>enable<sp/>signal<sp/>is<sp/>low<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_call(u8x8,<sp/>U8X8_MSG_GPIO_E,<sp/>0);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_SET_DC:</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_gpio_SetDC(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_START_TRANSFER:</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_byte_set_ks0108_cs(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_E]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_e_port<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_E]));</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_e_mask<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_E]);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>arduino_e_n_mask<sp/>=<sp/>~arduino_e_mask;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>no<sp/>consistency<sp/>checking<sp/>for<sp/>u8x8-&gt;pins[U8X8_PIN_D0]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_data_port[i]<sp/>=<sp/>portOutputRegister(digitalPinToPort(u8x8-&gt;pins[U8X8_PIN_D0<sp/>+<sp/>i]));</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_data_mask[i]<sp/>=<sp/>digitalPinToBitMask(u8x8-&gt;pins[U8X8_PIN_D0<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arduino_data_n_mask[i]<sp/>=<sp/>~arduino_data_mask[i];</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U8X8_MSG_BYTE_END_TRANSFER:</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8-&gt;gpio_and_delay_cb(u8x8,<sp/>U8X8_MSG_DELAY_NANO,<sp/>u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns,<sp/>NULL);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>u8x8_byte_set_ks0108_cs(u8x8,<sp/>arg_int);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8x8_byte_arduino_ks0108(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>msg,<sp/>uint8_t<sp/>arg_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_ptr)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8x8_byte_ks0108(u8x8,<sp/>msg,<sp/>arg_int,<sp/>arg_ptr);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*ARDUINO*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>U8X8_USE_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1640"><highlight class="comment"><sp/><sp/>use<sp/>U8X8_PIN_NONE<sp/>as<sp/>value<sp/>for<sp/>&quot;reset&quot;,<sp/>if<sp/>there<sp/>is<sp/>no<sp/>reset<sp/>line</highlight></codeline>
<codeline lineno="1641"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8x8_SetPin_SW_I2C(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>clock,<sp/>uint8_t<sp/>data,<sp/>uint8_t<sp/>reset)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_I2C_CLOCK,<sp/>clock);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_I2C_DATA,<sp/>data);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_RESET,<sp/>reset);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_obsolete_com_specific_setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8x8_Setup_SSD13xx_SW_I2C(u8x8_t<sp/>*u8x8,<sp/>u8x8_msg_cb<sp/>display_cb,<sp/>uint8_t<sp/>clock,<sp/>uint8_t<sp/>data,<sp/>uint8_t<sp/>reset)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>u8x8_Setup(u8x8,<sp/>display_cb,<sp/>u8x8_cad_001,<sp/>u8x8_byte_ssd13xx_sw_i2c,<sp/>u8x8_gpio_and_delay_arduino);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>assign<sp/>individual<sp/>pin<sp/>values<sp/>(only<sp/>for<sp/>ARDUINO,<sp/>if<sp/>pin_list<sp/>is<sp/>available)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_I2C_CLOCK,<sp/>clock);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_I2C_DATA,<sp/>data);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_RESET,<sp/>reset);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>obsolete<sp/>com<sp/>specific<sp/>setup<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8x8_SetPin_HW_I2C(u8x8_t<sp/>*u8x8,<sp/>uint8_t<sp/>reset,<sp/>uint8_t<sp/>clock,<sp/>uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="1663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_RESET,<sp/>reset);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_I2C_CLOCK,<sp/>clock);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>u8x8_SetPin(u8x8,<sp/>U8X8_PIN_I2C_DATA,<sp/>data);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>U8X8_USE_PINS</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/helper/U8g2/U8x8lib.cpp"/>
  </compounddef>
</doxygen>
