<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="u8g2__polygon_8c" kind="file" language="C++">
    <compoundname>u8g2_polygon.c</compoundname>
    <includes refid="u8g2_8h" local="yes">u8g2.h</includes>
    <incdepgraph>
      <node id="2">
        <label>u8g2.h</label>
        <link refid="u8g2_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/helper/U8g2/clib/u8g2_polygon.c</label>
        <link refid="u8g2__polygon_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>u8x8.h</label>
        <link refid="u8x8_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpg__point__struct" prot="public">pg_point_struct</innerclass>
    <innerclass refid="structpg__edge__struct" prot="public">pg_edge_struct</innerclass>
    <innerclass refid="struct__pg__struct" prot="public">_pg_struct</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="u8g2__polygon_8c_1a3e5f31f2fa8a107e6c41070329bfc11c" prot="public" static="no">
        <name>PG_MAX_POINTS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="47" column="9" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="u8g2__polygon_8c_1a0810e04afb9e5477da57f2a9e208edde" prot="public" static="no">
        <name>PG_LEFT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="50" column="9" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="u8g2__polygon_8c_1a030ad87fe98cb4744fc529365d4d4187" prot="public" static="no">
        <name>PG_RIGHT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="51" column="9" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="u8g2__polygon_8c_1a8e048c3bae6334b658b51a391866579f" prot="public" static="no">
        <name>PG_NOINLINE</name>
        <initializer>U8G2_NOINLINE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="67" column="9" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="67" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="u8g2__polygon_8c_1ad313fce2b5a5188ac452b8d5dd715dbb" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t pg_word_t</definition>
        <argsstring></argsstring>
        <name>pg_word_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="16" column="17" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="u8g2__polygon_8c_1a92e20265c39d99008e5ba1f03c4495ca" prot="public" static="no">
        <type>struct <ref refid="struct__pg__struct" kindref="compound">_pg_struct</ref></type>
        <definition>typedef struct _pg_struct pg_struct</definition>
        <argsstring></argsstring>
        <name>pg_struct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="25" column="25" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="u8g2__polygon_8c_1af516e7a1eeabf192e3ac307b1147a6b2" prot="public" static="no" mutable="no">
        <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref></type>
        <definition>pg_struct u8g2_pg</definition>
        <argsstring></argsstring>
        <name>u8g2_pg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="321" column="11" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="321" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="u8g2__polygon_8c_1a310d987a198c7d6c0754971701807a66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t pge_Next</definition>
        <argsstring>(struct pg_edge_struct *pge) PG_NOINLINE</argsstring>
        <name>pge_Next</name>
        <param>
          <type>struct <ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref> *</type>
          <declname>pge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="78" column="16" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="78" bodyend="93" declfile="src/helper/U8g2/clib/u8g2_polygon.c" declline="69" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1ad3c446a79adc4822c165ebbe9d80bc2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t pg_inc</definition>
        <argsstring>(pg_struct *pg, uint8_t i) PG_NOINLINE</argsstring>
        <name>pg_inc</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="126" column="16" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="126" bodyend="132" declfile="src/helper/U8g2/clib/u8g2_polygon.c" declline="70" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a686c3632a4eebcbcf823bd39aeb7d527" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t pg_dec</definition>
        <argsstring>(pg_struct *pg, uint8_t i) PG_NOINLINE</argsstring>
        <name>pg_dec</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="134" column="16" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="134" bodyend="140" declfile="src/helper/U8g2/clib/u8g2_polygon.c" declline="71" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1ac884e1b884925a42e1edb9eaa2b6e754" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pg_expand_min_y</definition>
        <argsstring>(pg_struct *pg, pg_word_t min_y, uint8_t pge_idx) PG_NOINLINE</argsstring>
        <name>pg_expand_min_y</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type>pg_word_t</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pge_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="142" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="142" bodyend="152" declfile="src/helper/U8g2/clib/u8g2_polygon.c" declline="72" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1aba68ffe822d79b869825eaf7538647d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pg_line_init</definition>
        <argsstring>(pg_struct *const pg, uint8_t pge_index) PG_NOINLINE</argsstring>
        <name>pg_line_init</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *const</type>
          <declname>pg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pge_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="247" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="247" bodyend="265" declfile="src/helper/U8g2/clib/u8g2_polygon.c" declline="73" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a904bcb92a529b77f2d03eb3d1b3986ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pge_Init</definition>
        <argsstring>(struct pg_edge_struct *pge, pg_word_t x1, pg_word_t y1, pg_word_t x2, pg_word_t y2)</argsstring>
        <name>pge_Init</name>
        <param>
          <type>struct <ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref> *</type>
          <declname>pge</declname>
        </param>
        <param>
          <type>pg_word_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>pg_word_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>pg_word_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>pg_word_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="96" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="96" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1af6e1085b90cdc15da687bbeb804f6143" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t pg_prepare</definition>
        <argsstring>(pg_struct *pg)</argsstring>
        <name>pg_prepare</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="154" column="16" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="154" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a8d903d95498f52b0ea299ac4d34cad4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pg_hline</definition>
        <argsstring>(pg_struct *pg, u8g2_t *u8g2)</argsstring>
        <name>pg_hline</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="210" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="210" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a0bfde8c640c9ff3d30adb17d762b7929" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pg_exec</definition>
        <argsstring>(pg_struct *pg, u8g2_t *u8g2)</argsstring>
        <name>pg_exec</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="267" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="267" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a419392da1223b3a9fc7d05a081581919" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pg_ClearPolygonXY</definition>
        <argsstring>(pg_struct *pg)</argsstring>
        <name>pg_ClearPolygonXY</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="299" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a2cb491df6da7faa4c2493cd936e25f42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pg_AddPolygonXY</definition>
        <argsstring>(pg_struct *pg, int16_t x, int16_t y)</argsstring>
        <name>pg_AddPolygonXY</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="304" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="304" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a9b37c07eec308b781a0f993e8ed115c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pg_DrawPolygon</definition>
        <argsstring>(pg_struct *pg, u8g2_t *u8g2)</argsstring>
        <name>pg_DrawPolygon</name>
        <param>
          <type><ref refid="struct__pg__struct" kindref="compound">pg_struct</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="314" column="13" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="314" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1ac8be9d4bb7c7d87f10ca7e18495b091d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_ClearPolygonXY</definition>
        <argsstring>(void)</argsstring>
        <name>u8g2_ClearPolygonXY</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="323" column="6" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a3bd3c517f86438044974e2ba69855f39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_AddPolygonXY</definition>
        <argsstring>(U8X8_UNUSED u8g2_t *u8g2, int16_t x, int16_t y)</argsstring>
        <name>u8g2_AddPolygonXY</name>
        <param>
          <type>U8X8_UNUSED <ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="328" column="6" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1abf898ef589acd85e591618a672e3c83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_DrawPolygon</definition>
        <argsstring>(u8g2_t *u8g2)</argsstring>
        <name>u8g2_DrawPolygon</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="333" column="6" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="u8g2__polygon_8c_1a023151fb37db476ebd6227c1190b6667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void u8g2_DrawTriangle</definition>
        <argsstring>(u8g2_t *u8g2, int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2)</argsstring>
        <name>u8g2_DrawTriangle</name>
        <param>
          <type><ref refid="structu8g2__struct" kindref="compound">u8g2_t</ref> *</type>
          <declname>u8g2</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helper/U8g2/clib/u8g2_polygon.c" line="338" column="6" bodyfile="src/helper/U8g2/clib/u8g2_polygon.c" bodystart="338" bodyend="345"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>u8g22_polygon.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;u8g2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*===========================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>local<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/>pg_word_t;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structpg__point__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpg__point__struct" kindref="compound">pg_point_struct</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>x;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>y;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__pg__struct" kindref="compound">_pg_struct</ref><sp/>pg_struct;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>forward<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structpg__edge__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>x_direction;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1,<sp/>if<sp/>x2<sp/>is<sp/>greater<sp/>than<sp/>x1,<sp/>-1<sp/>otherwise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>height;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>current_x_offset;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>error_offset;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>---<sp/>line<sp/>loop<sp/>---<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>current_y;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>max_y;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>current_x;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>error;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>---<sp/>outer<sp/>loop<sp/>---<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>uint8_t<sp/>(*next_idx_fn)(pg_struct<sp/>*pg,<sp/>uint8_t<sp/>i);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>uint8_t<sp/>curr_idx;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>maximum<sp/>number<sp/>of<sp/>points<sp/>in<sp/>the<sp/>polygon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>can<sp/>be<sp/>redefined,<sp/>but<sp/>highest<sp/>possible<sp/>value<sp/>is<sp/>254<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PG_MAX_POINTS<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>index<sp/>numbers<sp/>for<sp/>the<sp/>pge<sp/>structures<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PG_LEFT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PG_RIGHT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct__pg__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__pg__struct" kindref="compound">_pg_struct</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpg__point__struct" kindref="compound">pg_point_struct</ref><sp/>list[PG_MAX_POINTS];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cnt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>uint8_t<sp/>is_min_y_not_flat;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>total_scan_line_cnt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref><sp/>pge[2];<sp/></highlight><highlight class="comment">/*<sp/>left<sp/>and<sp/>right<sp/>line<sp/>draw<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*===========================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>procedures,<sp/>which<sp/>should<sp/>not<sp/>be<sp/>inlined<sp/>(save<sp/>as<sp/>much<sp/>flash<sp/>ROM<sp/>as<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PG_NOINLINE<sp/>U8G2_NOINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>pge_Next(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref><sp/>*pge)<sp/>PG_NOINLINE;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>pg_inc(pg_struct<sp/>*pg,<sp/>uint8_t<sp/>i)<sp/>PG_NOINLINE;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>pg_dec(pg_struct<sp/>*pg,<sp/>uint8_t<sp/>i)<sp/>PG_NOINLINE;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_expand_min_y(pg_struct<sp/>*pg,<sp/>pg_word_t<sp/>min_y,<sp/>uint8_t<sp/>pge_idx)<sp/>PG_NOINLINE;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_line_init(pg_struct<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pg,<sp/>uint8_t<sp/>pge_index)<sp/>PG_NOINLINE;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*===========================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>line<sp/>draw<sp/>algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>pge_Next(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref><sp/>*pge)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pge-&gt;current_y<sp/>&gt;=<sp/>pge-&gt;max_y<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>pge-&gt;current_x<sp/>+=<sp/>pge-&gt;current_x_offset;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>pge-&gt;error<sp/>+=<sp/>pge-&gt;error_offset;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pge-&gt;error<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>pge-&gt;current_x<sp/>+=<sp/>pge-&gt;x_direction;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>pge-&gt;error<sp/>-=<sp/>pge-&gt;height;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>pge-&gt;current_y++;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>assumes<sp/>y2<sp/>&gt;<sp/>y1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pge_Init(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref><sp/>*pge,<sp/>pg_word_t<sp/>x1,<sp/>pg_word_t<sp/>y1,<sp/>pg_word_t<sp/>x2,<sp/>pg_word_t<sp/>y2)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>dx<sp/>=<sp/>x2<sp/>-<sp/>x1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>width;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>pge-&gt;height<sp/>=<sp/>y2<sp/>-<sp/>y1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>pge-&gt;max_y<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>pge-&gt;current_y<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>pge-&gt;current_x<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dx<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>pge-&gt;x_direction<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>dx;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>pge-&gt;error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>pge-&gt;x_direction<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>-dx;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>pge-&gt;error<sp/>=<sp/>1<sp/>-<sp/>pge-&gt;height;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>pge-&gt;current_x_offset<sp/>=<sp/>dx<sp/>/<sp/>pge-&gt;height;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>pge-&gt;error_offset<sp/>=<sp/>width<sp/>%<sp/>pge-&gt;height;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*===========================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>convex<sp/>polygon<sp/>algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>pg_inc(pg_struct<sp/>*pg,<sp/>uint8_t<sp/>i)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&gt;=<sp/>pg-&gt;cnt<sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>pg_dec(pg_struct<sp/>*pg,<sp/>uint8_t<sp/>i)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&gt;=<sp/>pg-&gt;cnt<sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>pg-&gt;cnt-1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_expand_min_y(pg_struct<sp/>*pg,<sp/>pg_word_t<sp/>min_y,<sp/>uint8_t<sp/>pge_idx)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>pg-&gt;pge[pge_idx].curr_idx;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>pg-&gt;pge[pge_idx].next_idx_fn(pg,<sp/>i);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pg-&gt;list[i].y<sp/>!=<sp/>min_y<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>pg-&gt;pge[pge_idx].curr_idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>pg_prepare(pg_struct<sp/>*pg)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>max_y;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>min_y;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>next<sp/>index<sp/>procedures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>pg-&gt;pge[PG_RIGHT].next_idx_fn<sp/>=<sp/>pg_inc;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>pg-&gt;pge[PG_LEFT].next_idx_fn<sp/>=<sp/>pg_dec;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>search<sp/>for<sp/>highest<sp/>and<sp/>lowest<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>max_y<sp/>=<sp/>pg-&gt;list[0].y;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>min_y<sp/>=<sp/>pg-&gt;list[0].y;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>pg-&gt;pge[PG_LEFT].curr_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>pg-&gt;cnt;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>max_y<sp/>&lt;<sp/>pg-&gt;list[i].y<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_y<sp/>=<sp/>pg-&gt;list[i].y;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>min_y<sp/>&gt;<sp/>pg-&gt;list[i].y<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pg-&gt;pge[PG_LEFT].curr_idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_y<sp/>=<sp/>pg-&gt;list[i].y;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>total<sp/>number<sp/>of<sp/>scan<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>pg-&gt;total_scan_line_cnt<sp/>=<sp/>max_y;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>pg-&gt;total_scan_line_cnt<sp/>-=<sp/>min_y;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>exit<sp/>if<sp/>polygon<sp/>height<sp/>is<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pg-&gt;total_scan_line_cnt<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>minimum<sp/>y<sp/>side<sp/>is<sp/>flat,<sp/>try<sp/>to<sp/>find<sp/>the<sp/>lowest<sp/>and<sp/>highest<sp/>x<sp/>points<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>pg-&gt;pge[PG_RIGHT].curr_idx<sp/>=<sp/>pg-&gt;pge[PG_LEFT].curr_idx;<sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>pg_expand_min_y(pg,<sp/>min_y,<sp/>PG_RIGHT);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>pg_expand_min_y(pg,<sp/>min_y,<sp/>PG_LEFT);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>the<sp/>min<sp/>side<sp/>is<sp/>really<sp/>flat<sp/>(depends<sp/>on<sp/>the<sp/>x<sp/>values)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>pg-&gt;is_min_y_not_flat<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pg-&gt;list[pg-&gt;pge[PG_LEFT].curr_idx].x<sp/>!=<sp/>pg-&gt;list[pg-&gt;pge[PG_RIGHT].curr_idx].x<sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>pg-&gt;is_min_y_not_flat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>pg-&gt;total_scan_line_cnt--;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pg-&gt;total_scan_line_cnt<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_hline(pg_struct<sp/>*pg,<sp/>u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>x1,<sp/>x2,<sp/>y;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>x1<sp/>=<sp/>pg-&gt;pge[PG_LEFT].current_x;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>x2<sp/>=<sp/>pg-&gt;pge[PG_RIGHT].current_x;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>pg-&gt;pge[PG_RIGHT].current_y;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&gt;=<sp/>(pg_word_t)u8g2_GetDisplayHeight(u8g2)<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>work<sp/>for<sp/>256x64<sp/>display???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x1<sp/>&lt;<sp/>x2<sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x2<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x1<sp/>&gt;=<sp/>(pg_word_t)u8g2_GetDisplayWidth(u8g2)<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x1<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x2<sp/>&gt;=<sp/>(pg_word_t)u8g2_GetDisplayWidth(u8g2)<sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>u8g2_GetDisplayWidth(u8g2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_DrawHLine(u8g2,<sp/>x1,<sp/>y,<sp/>x2<sp/>-<sp/>x1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x1<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x2<sp/>&gt;=<sp/>(pg_word_t)u8g2_GetDisplayWidth(u8g2)<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x2<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x1<sp/>&gt;=<sp/>(pg_word_t)u8g2_GetDisplayWidth(u8g2)<sp/>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>u8g2_GetDisplayWidth(u8g2);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>u8g2_DrawHLine(u8g2,<sp/>x2,<sp/>y,<sp/>x1<sp/>-<sp/>x2);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_line_init(pg_struct<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pg,<sp/>uint8_t<sp/>pge_index)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpg__edge__struct" kindref="compound">pg_edge_struct</ref><sp/><sp/>*pge<sp/>=<sp/>pg-&gt;pge+pge_index;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>uint8_t<sp/>idx;<sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>x1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>y1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>x2;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>y2;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>idx<sp/>=<sp/>pge-&gt;curr_idx;<sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>y1<sp/>=<sp/>pg-&gt;list[idx].y;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>x1<sp/>=<sp/>pg-&gt;list[idx].x;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>idx<sp/>=<sp/>pge-&gt;next_idx_fn(pg,<sp/>idx);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>pg-&gt;list[idx].y;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>x2<sp/>=<sp/>pg-&gt;list[idx].x;<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>pge-&gt;curr_idx<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>pge_Init(pge,<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_exec(pg_struct<sp/>*pg,<sp/>u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>pg_word_t<sp/>i<sp/>=<sp/>pg-&gt;total_scan_line_cnt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>line<sp/>is<sp/>skipped<sp/>if<sp/>the<sp/>min<sp/>y<sp/>line<sp/>is<sp/>not<sp/>flat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>pg_line_init(pg,<sp/>PG_LEFT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>pg_line_init(pg,<sp/>PG_RIGHT);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pg-&gt;is_min_y_not_flat<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>pge_Next(&amp;(pg-&gt;pge[PG_LEFT]));<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>pge_Next(&amp;(pg-&gt;pge[PG_RIGHT]));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>pg_hline(pg,<sp/>u8g2);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pge_Next(&amp;(pg-&gt;pge[PG_LEFT]))<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pg_line_init(pg,<sp/>PG_LEFT);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pge_Next(&amp;(pg-&gt;pge[PG_RIGHT]))<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pg_line_init(pg,<sp/>PG_RIGHT);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>i<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/*===========================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>procedures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_ClearPolygonXY(pg_struct<sp/>*pg)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>pg-&gt;cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_AddPolygonXY(pg_struct<sp/>*pg,<sp/>int16_t<sp/>x,<sp/>int16_t<sp/>y)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pg-&gt;cnt<sp/>&lt;<sp/>PG_MAX_POINTS<sp/>)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>pg-&gt;list[pg-&gt;cnt].x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>pg-&gt;list[pg-&gt;cnt].y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>pg-&gt;cnt++;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pg_DrawPolygon(pg_struct<sp/>*pg,<sp/>u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pg_prepare(pg)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>pg_exec(pg,<sp/>u8g2);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">pg_struct<sp/>u8g2_pg;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_ClearPolygonXY(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>pg_ClearPolygonXY(&amp;u8g2_pg);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_AddPolygonXY(U8X8_UNUSED<sp/>u8g2_t<sp/>*u8g2,<sp/>int16_t<sp/>x,<sp/>int16_t<sp/>y)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>pg_AddPolygonXY(&amp;u8g2_pg,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_DrawPolygon(u8g2_t<sp/>*u8g2)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>pg_DrawPolygon(&amp;u8g2_pg,<sp/>u8g2);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>u8g2_DrawTriangle(u8g2_t<sp/>*u8g2,<sp/>int16_t<sp/>x0,<sp/>int16_t<sp/>y0,<sp/>int16_t<sp/>x1,<sp/>int16_t<sp/>y1,<sp/>int16_t<sp/>x2,<sp/>int16_t<sp/>y2)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>u8g2_ClearPolygonXY();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>u8g2_AddPolygonXY(u8g2,<sp/>x0,<sp/>y0);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>u8g2_AddPolygonXY(u8g2,<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>u8g2_AddPolygonXY(u8g2,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>u8g2_DrawPolygon(u8g2);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/helper/U8g2/clib/u8g2_polygon.c"/>
  </compounddef>
</doxygen>
